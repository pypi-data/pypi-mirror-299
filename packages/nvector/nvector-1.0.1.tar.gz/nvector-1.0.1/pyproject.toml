[project]
name = "nvector"
dynamic = []
description = "The nvector library is a suite of tools written in Python to solve geographical position calculations forked from nvector."
authors = [
    { name = "Kenneth Gade, FFI" },
    { name = "Kristian Svartveit, FFI" },
    { name = "Brita Hafskjold Gade, FFI" },
    { name = "Matt Hogan", email = "mhogan@nwra.com" },
]
maintainers = [
    { name = "Per A. Brodtkorb, FFI" },
]
dependencies = [
    "numpy>=1.11.0",
    "scipy>=1.3.0",
    "karney>=1.0",
]
requires-python = ">=3.9"
readme = "README.rst"
license_file = "LICENSE.txt"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Environment :: Console",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Operating System :: Microsoft :: Windows",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: GIS",
]
version = "1.0.1"

[project.license]
text = "Simplified BSD"

[project.optional-dependencies]
plot = [
    "matplotlib>=3.8.0",
    "Cartopy>=0.22.0",
]

[project.urls]
repository = "https://github.com/pbrod/nvector/"
documentation = "https://nvector.readthedocs.io/en/latest/"

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[tool.pdm]
distribution = true

[tool.pdm.version]
source = "file"
path = "src/nvector/__init__.py"

[tool.pdm.scripts]
build-docs-html = "sphinx-build -b html docs docs/_build/html -d docs/_build/doctrees"
build-docs-latex = "sphinx-build -b latex docs docs/_build/latex -d docs/_build/doctrees"
build-docs-pdf = "sphinx-build -b latexpdf docs docs/_build/latex -d docs/_build/doctrees"
lock_win64 = "pdm lock -L pdm_windows.lock --python 3.12 --strategy no_direct_minimal_versions --platform windows -dG all"
lock_linux = "pdm lock -L pdm_linux.lock --python 3.12 --strategy no_direct_minimal_versions --platform linux -dG all"
format = "ruff format ./src/"
check-style = "ruff check ./src/"
show-next-version = "git-cliff --bumped-version"
show-next-changelog = "git-cliff"
append-changelog = "git-cliff --unreleased --prepend CHANGELOG.md"

[tool.pdm.dev-dependencies]
build = [
    "setuptools>=39.2",
    "spyder-kernels",
    "git-cliff>=2.6.1",
    "pdm-bump>=0.9.8",
]
test = [
    "nox",
    "pytest",
    "pytest-cov",
    "pytest-pep8",
    "hypothesis",
    "matplotlib>=3.8.0",
    "Cartopy>=0.22.0",
    "pytest-ruff>=0.4.1",
    "ruff>=0.0.47",
]
sphinx = [
    "sphinx>=1.3.1",
    "sphinx_rtd_theme>=0.1.7",
    "sphinxcontrib-napoleon",
    "sphinxcontrib-bibtex",
    "myst_parser",
]
all = [
    "nvector[build,plot,test,sphinx]",
]

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = [
    "E4",
    "E7",
    "E9",
    "E501",
    "F",
    "B",
    "Q",
]
ignore = [
    "D417",
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.format]
docstring-code-line-length = 100

[tool.pytest.ini_options]
doctest_optionflags = [
    "NORMALIZE_WHITESPACE",
    "IGNORE_EXCEPTION_DETAIL",
    "ELLIPSIS",
]
addopts = "-rsxXf --doctest-modules --cov=nvector --cov-report=xml --ruff --ruff-format"
testpaths = [
    "src",
]
