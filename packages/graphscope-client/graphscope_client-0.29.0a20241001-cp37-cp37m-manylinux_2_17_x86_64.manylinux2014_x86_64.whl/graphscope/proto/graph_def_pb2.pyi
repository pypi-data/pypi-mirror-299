"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright 2020 Alibaba Group Holding Limited. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"""
import builtins
import collections.abc
import google.protobuf.any_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import schema_common_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions
from schema_common_pb2 import (
    BOOL as BOOL,
    BYTES as BYTES,
    CHAR as CHAR,
    DATE32 as DATE32,
    DATE64 as DATE64,
    DOUBLE as DOUBLE,
    DOUBLE_LIST as DOUBLE_LIST,
    DYNAMIC as DYNAMIC,
    DataTypePb as DataTypePb,
    EDGE as EDGE,
    EdgeKindPb as EdgeKindPb,
    FLOAT as FLOAT,
    FLOAT_LIST as FLOAT_LIST,
    INT as INT,
    INT_LIST as INT_LIST,
    LONG as LONG,
    LONG_LIST as LONG_LIST,
    LabelIdPb as LabelIdPb,
    NULLVALUE as NULLVALUE,
    PropertyDefPb as PropertyDefPb,
    PropertyValuePb as PropertyValuePb,
    SHORT as SHORT,
    STRING as STRING,
    STRING_LIST as STRING_LIST,
    TIME32_MS as TIME32_MS,
    TIME32_NS as TIME32_NS,
    TIME32_S as TIME32_S,
    TIME32_US as TIME32_US,
    TIME64_MS as TIME64_MS,
    TIME64_NS as TIME64_NS,
    TIME64_S as TIME64_S,
    TIME64_US as TIME64_US,
    TIMESTAMP_MS as TIMESTAMP_MS,
    TIMESTAMP_NS as TIMESTAMP_NS,
    TIMESTAMP_S as TIMESTAMP_S,
    TIMESTAMP_US as TIMESTAMP_US,
    TypeDefPb as TypeDefPb,
    TypeEnumPb as TypeEnumPb,
    UINT as UINT,
    ULONG as ULONG,
    UNKNOWN as UNKNOWN,
    VERTEX as VERTEX,
)

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _GraphTypePb:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _GraphTypePbEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_GraphTypePb.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    UNKNOWN_TYPE: _GraphTypePb.ValueType  # 0
    IMMUTABLE_EDGECUT: _GraphTypePb.ValueType  # 1
    DYNAMIC_PROPERTY: _GraphTypePb.ValueType  # 2
    DYNAMIC_PROJECTED: _GraphTypePb.ValueType  # 3
    ARROW_PROPERTY: _GraphTypePb.ValueType  # 4
    ARROW_PROJECTED: _GraphTypePb.ValueType  # 5
    PERSISTENT_STORE: _GraphTypePb.ValueType  # 6
    ARROW_FLATTENED: _GraphTypePb.ValueType  # 7

class GraphTypePb(_GraphTypePb, metaclass=_GraphTypePbEnumTypeWrapper):
    """Various graph type"""

UNKNOWN_TYPE: GraphTypePb.ValueType  # 0
IMMUTABLE_EDGECUT: GraphTypePb.ValueType  # 1
DYNAMIC_PROPERTY: GraphTypePb.ValueType  # 2
DYNAMIC_PROJECTED: GraphTypePb.ValueType  # 3
ARROW_PROPERTY: GraphTypePb.ValueType  # 4
ARROW_PROJECTED: GraphTypePb.ValueType  # 5
PERSISTENT_STORE: GraphTypePb.ValueType  # 6
ARROW_FLATTENED: GraphTypePb.ValueType  # 7
global___GraphTypePb = GraphTypePb

class _VertexMapTypePb:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _VertexMapTypePbEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_VertexMapTypePb.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    UNKNOWN_VM_TYPE: _VertexMapTypePb.ValueType  # 0
    GLOBAL_VERTEX_MAP: _VertexMapTypePb.ValueType  # 1
    LOCAL_VERTEX_MAP: _VertexMapTypePb.ValueType  # 2

class VertexMapTypePb(_VertexMapTypePb, metaclass=_VertexMapTypePbEnumTypeWrapper): ...

UNKNOWN_VM_TYPE: VertexMapTypePb.ValueType  # 0
GLOBAL_VERTEX_MAP: VertexMapTypePb.ValueType  # 1
LOCAL_VERTEX_MAP: VertexMapTypePb.ValueType  # 2
global___VertexMapTypePb = VertexMapTypePb

@typing_extensions.final
class GrootInfoPb(google.protobuf.message.Message):
    """Attributes that only meaningful to and will be set by groot storage"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LAST_LABEL_ID_FIELD_NUMBER: builtins.int
    LAST_PROPERTY_ID_FIELD_NUMBER: builtins.int
    LAST_TABLE_ID_FIELD_NUMBER: builtins.int
    last_label_id: builtins.int
    last_property_id: builtins.int
    last_table_id: builtins.int
    def __init__(
        self,
        *,
        last_label_id: builtins.int = ...,
        last_property_id: builtins.int = ...,
        last_table_id: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["last_label_id", b"last_label_id", "last_property_id", b"last_property_id", "last_table_id", b"last_table_id"]) -> None: ...

global___GrootInfoPb = GrootInfoPb

@typing_extensions.final
class VineyardInfoPb(google.protobuf.message.Message):
    """Attributes that only meaningful to and will be set by vineyard storage"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    OID_TYPE_FIELD_NUMBER: builtins.int
    VID_TYPE_FIELD_NUMBER: builtins.int
    VDATA_TYPE_FIELD_NUMBER: builtins.int
    EDATA_TYPE_FIELD_NUMBER: builtins.int
    SCHEMA_PATH_FIELD_NUMBER: builtins.int
    GENERATE_EID_FIELD_NUMBER: builtins.int
    VINEYARD_ID_FIELD_NUMBER: builtins.int
    PROPERTY_SCHEMA_JSON_FIELD_NUMBER: builtins.int
    VERTEX_MAP_TYPE_FIELD_NUMBER: builtins.int
    FRAGMENTS_FIELD_NUMBER: builtins.int
    RETAIN_OID_FIELD_NUMBER: builtins.int
    oid_type: schema_common_pb2.DataTypePb.ValueType
    vid_type: schema_common_pb2.DataTypePb.ValueType
    vdata_type: schema_common_pb2.DataTypePb.ValueType
    edata_type: schema_common_pb2.DataTypePb.ValueType
    schema_path: builtins.str
    """This is for sharing graph between vineyard storage and groot storage"""
    generate_eid: builtins.bool
    """Whether to automatically generate unique edge id for all edges."""
    vineyard_id: builtins.int
    """object id of the graph in vineyard"""
    property_schema_json: builtins.str
    """For client to reconstruct graph schema"""
    vertex_map_type: global___VertexMapTypePb.ValueType
    """Global or local vertex map"""
    @property
    def fragments(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """Fragment ids"""
    retain_oid: builtins.bool
    """retain_oid"""
    def __init__(
        self,
        *,
        oid_type: schema_common_pb2.DataTypePb.ValueType = ...,
        vid_type: schema_common_pb2.DataTypePb.ValueType = ...,
        vdata_type: schema_common_pb2.DataTypePb.ValueType = ...,
        edata_type: schema_common_pb2.DataTypePb.ValueType = ...,
        schema_path: builtins.str = ...,
        generate_eid: builtins.bool = ...,
        vineyard_id: builtins.int = ...,
        property_schema_json: builtins.str = ...,
        vertex_map_type: global___VertexMapTypePb.ValueType = ...,
        fragments: collections.abc.Iterable[builtins.int] | None = ...,
        retain_oid: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["edata_type", b"edata_type", "fragments", b"fragments", "generate_eid", b"generate_eid", "oid_type", b"oid_type", "property_schema_json", b"property_schema_json", "retain_oid", b"retain_oid", "schema_path", b"schema_path", "vdata_type", b"vdata_type", "vertex_map_type", b"vertex_map_type", "vid_type", b"vid_type", "vineyard_id", b"vineyard_id"]) -> None: ...

global___VineyardInfoPb = VineyardInfoPb

@typing_extensions.final
class MutableGraphInfoPb(google.protobuf.message.Message):
    """Attributes that only meaningful to and will be set by dynamic storage"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VDATA_TYPE_FIELD_NUMBER: builtins.int
    EDATA_TYPE_FIELD_NUMBER: builtins.int
    PROPERTY_SCHEMA_JSON_FIELD_NUMBER: builtins.int
    vdata_type: schema_common_pb2.DataTypePb.ValueType
    edata_type: schema_common_pb2.DataTypePb.ValueType
    property_schema_json: builtins.str
    def __init__(
        self,
        *,
        vdata_type: schema_common_pb2.DataTypePb.ValueType = ...,
        edata_type: schema_common_pb2.DataTypePb.ValueType = ...,
        property_schema_json: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["edata_type", b"edata_type", "property_schema_json", b"property_schema_json", "vdata_type", b"vdata_type"]) -> None: ...

global___MutableGraphInfoPb = MutableGraphInfoPb

@typing_extensions.final
class GraphDefPb(google.protobuf.message.Message):
    """Stores all meta of a graph"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class PropertyNameToIdEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.int
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.int = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    VERSION_FIELD_NUMBER: builtins.int
    KEY_FIELD_NUMBER: builtins.int
    GRAPH_TYPE_FIELD_NUMBER: builtins.int
    DIRECTED_FIELD_NUMBER: builtins.int
    TYPE_DEFS_FIELD_NUMBER: builtins.int
    EDGE_KINDS_FIELD_NUMBER: builtins.int
    PROPERTY_NAME_TO_ID_FIELD_NUMBER: builtins.int
    EXTENSION_FIELD_NUMBER: builtins.int
    IS_MULTIGRAPH_FIELD_NUMBER: builtins.int
    COMPACT_EDGES_FIELD_NUMBER: builtins.int
    USE_PERFECT_HASH_FIELD_NUMBER: builtins.int
    version: builtins.int
    key: builtins.str
    graph_type: global___GraphTypePb.ValueType
    directed: builtins.bool
    @property
    def type_defs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[schema_common_pb2.TypeDefPb]: ...
    @property
    def edge_kinds(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[schema_common_pb2.EdgeKindPb]: ...
    @property
    def property_name_to_id(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.int]: ...
    @property
    def extension(self) -> google.protobuf.any_pb2.Any:
        """current extension supported:
          - GrootInfoPb
          - VineyardInfoPb
          - MutableGraphInfoPb
        """
    is_multigraph: builtins.bool
    compact_edges: builtins.bool
    """compact edges"""
    use_perfect_hash: builtins.bool
    """use perfect hash"""
    def __init__(
        self,
        *,
        version: builtins.int = ...,
        key: builtins.str = ...,
        graph_type: global___GraphTypePb.ValueType = ...,
        directed: builtins.bool = ...,
        type_defs: collections.abc.Iterable[schema_common_pb2.TypeDefPb] | None = ...,
        edge_kinds: collections.abc.Iterable[schema_common_pb2.EdgeKindPb] | None = ...,
        property_name_to_id: collections.abc.Mapping[builtins.str, builtins.int] | None = ...,
        extension: google.protobuf.any_pb2.Any | None = ...,
        is_multigraph: builtins.bool = ...,
        compact_edges: builtins.bool = ...,
        use_perfect_hash: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["extension", b"extension"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["compact_edges", b"compact_edges", "directed", b"directed", "edge_kinds", b"edge_kinds", "extension", b"extension", "graph_type", b"graph_type", "is_multigraph", b"is_multigraph", "key", b"key", "property_name_to_id", b"property_name_to_id", "type_defs", b"type_defs", "use_perfect_hash", b"use_perfect_hash", "version", b"version"]) -> None: ...

global___GraphDefPb = GraphDefPb
