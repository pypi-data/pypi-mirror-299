Metadata-Version: 2.1
Name: taxi_data_core
Version: 0.0.16
Summary: Core modules for taxi_data funcitonality.
Home-page: https://github.com/WayneBennett666/taxi-data-core
Author: Wayne Bennett
Author-email: wayne.bennett@live.com
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: selenium
Requires-Dist: pydantic
Requires-Dist: beautifulsoup4
Requires-Dist: google-auth
Requires-Dist: google-auth-oauthlib
Requires-Dist: google-api-python-client
Requires-Dist: xero-python
Requires-Dist: pandas

# taxi_data_core

Core modules used across taxi_data modules.

## Table of Contents

- [Modules](#modules)
  - [blackandwhitecabs_com_au](#blackandwhitecabs_com_au)
  - [nextechgps_com](#nextechgps_com)
- [Installation](#installation)
- [Usage](#usage)
- [License](#license)
- [Contributing](#contributing)

## Modules

### blackandwhitecabs_com_au

#### Constants

- **`ID_GROUP_DOCKETS_LODGED_TABLE`**: Identifier for the group dockets lodged table.
- **`LINK_TEXT_GROUP_DOCKETS_LODGED`**: Link text for the group dockets lodged.
- **`XPATH_DOCKET_STATEMENT`**: XPath for the docket statement.
- **`DRIVER_DETAILS_CONDITIONS`**: Driver details conditions.
- **`ID_SHIFTS_FOR_VEHICLE`**: Identifier for shifts for vehicle.

#### Schema

- **`Shift`**: Represents a shift with various attributes such as car ID, driver ID, log on/off times, duration, distance, and fare details.
- **`Job`**: Represents a job with attributes like booking ID, driver ID, status, times, suburbs, fare, toll, account, taxi ID, and shift ID.
- **`Taxi`**: Represents a taxi with attributes like number, fleet, registration details, make, model, and validation information.
- **`PaperDocketStatus`**: Enum representing the status of a paper docket.
- **`StatementType`**: Enum representing the type of statement.
- **`EftStatement`**: Represents an EFT statement.
- **`VoucherStatement`**: Represents a voucher statement.
- **`GroupStatement`**: Represents a group statement.
- **`AutoJob`**: Represents an auto job.
- **`DocketStatement`**: Represents a docket statement.

#### Actions

- **`get_group_dockets_lodged`**: Retrieves group dockets lodged.
- **`group_dockets`**: Groups dockets based on certain criteria.
- **`select_operator_from_drop_down`**: Selects an operator from a drop-down menu.
- **`shifts_for_vehicle_set_date_range`**: Sets the date range for shifts for a vehicle.

### nextechgps_com

#### Schema

- **`GpsTrackerEvent`**: Enum representing GPS tracker events.
- **`ProcessedEvent`**: Represents a processed event with various attributes.
- **`RawEvent`**: Represents a raw event with various attributes.
- **`PlaybackSpeed`**: Enum representing playback speeds.
- **`PlaybackButtons`**: Named tuple representing playback buttons.
- **`TrackerEntry`**: Represents a tracker entry with various attributes.
- **`GpsRecord`**: Represents a GPS record with various attributes.

#### Actions

- **`add_or_update_gps_records`**: Adds or updates GPS records.
- **`fetch_all_gps_records`**: Fetches all GPS records.

## Installation

To install the `taxi_data_core` package, use the following command:

```sh
pip install -r src/taxi_accounts/requirements.txt
