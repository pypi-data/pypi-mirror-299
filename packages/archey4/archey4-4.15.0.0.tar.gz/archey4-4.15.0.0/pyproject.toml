# Pylint
[tool.pylint.MASTER]
## Required hook as we use absolute imports within the code.
init-hook = 'import sys; sys.path.append("archey/")'

## C sources of the `netifaces` module won't be available.
## Let's ignore it during linting please.
extension-pkg-whitelist = "netifaces"

## Automatically detects the number of CPU available to use.
jobs = 0

## For the time being, disable `similarities` checker due to false positives across tests modules.
## See PyCQA/pylint#214.
disable = "similarities"

## Additional plugins to check the code base against.
load-plugins = [
	"pylint.extensions.check_elif",
	"pylint.extensions.redefined_variable_type",
	"pylint.extensions.overlapping_exceptions",
	"pylint.extensions.empty_comment",
	"pylint.extensions.while_used",
	"pylint_secure_coding_standard",
]

[tool.pylint.DESIGN]
## For entries classes, we (often) only use the `__init__` magic method.
min-public-methods = 0

# Mypy
[tool.mypy]
check_untyped_defs = true

[[tool.mypy.overrides]]
## netifaces is not typed and does not provide any stub
module = "netifaces"
ignore_missing_imports = true

# Ruff
[tool.ruff]
line-length = 100

# Black
[tool.black]
line-length = 100
target-version = ["py36"]

# isort
[tool.isort]
profile = "black"
line_length = 100
py_version = 36
