# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build_and_upload_docs:
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
          cache: 'pip'

      - name: Setup venv
        run: make venv

      - name: Install requirements
        run: make install

      - name: Install pip wheel
        run: make install_clode

      - name: Find libclode_cpp_wrapper.dylib in bazel-out and record name
        run: echo "CLODE_CPP_WRAPPER=$(find -L ./bazel-out -name libclode_cpp_wrapper.dylib)" >> "$GITHUB_ENV"

      - name: Copy libclode_cpp_wrapper.dylib to clode/cpp
        run: cp -f "$CLODE_CPP_WRAPPER" clode/cpp/clode_cpp_wrapper.so

      - name: Build docs with mkdocs
        run: python3 -m mkdocs build --clean

      - name: List sites folder
        run: ls site/

      - name: Create tar file of site folder
        run: tar -cvf artifact.tar site/

      - name: List tar file
        run: ls artifact.tar

      - name: Compress tar file into gzip called github-pages
        run: gzip -c artifact.tar > github-pages

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages
          path: site

  # Deploy job
  deploy:
    # Run this job only on main
    if: github.ref == 'refs/heads/main'

    # Add a dependency to the build job
    needs: build_and_upload_docs

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4