Metadata-Version: 2.1
Name: pyopv
Version: 0.1.1.0
Summary: This package provides a set of tools for checking OPV DICOM compliance and converting OPV DICOM to CSV or JSON.
Home-page: https://github.com/Shallaj/py-opv
Author: Shahin Hallaj
Author-email: Shahin Hallaj <shallaj@health.ucsd.edu>
License: MIT License
        
        Copyright (c) 2024 Shahin Hallaj
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/Shallaj/py-opv
Project-URL: Source, https://github.com/Shallaj/py-opv
Keywords: DICOM,OPV,CSV,JSON,Medical Imaging
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: pydicom
Requires-Dist: numpy
Requires-Dist: pandas

# PyOPV

This package provides functionality for working with the OPV DICOM files provided by various vendors.

## Installation

TODO: Instructions for installing from GitHub / PyPi

```python
import pyopv
```

## Example usage

Loading files

```python
m_opvdicom = pyopv.read_dicom('data/example_opv.dcm')   # Loads one file
m_opvdicoms = pyopv.read_dicom_directory('data')        # Load all files in directory
```

Checking missing tags
```python
missing_count, missingtag_df = m_opvdicom.check_missing_tags()
```

Getting pointwise data

```python
pointwise_data = m_opvdicom.to_pandas()
```

## Contact

Email: shallaj\[at\]health.ucsd.edu
