{"version":3,"file":"html-BD1ynRf3.js","sources":["../../node_modules/monaco-editor/esm/vs/basic-languages/html/html.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { languages } from '../fillers/monaco-editor-core.js';\nvar EMPTY_ELEMENTS = [\n    'area',\n    'base',\n    'br',\n    'col',\n    'embed',\n    'hr',\n    'img',\n    'input',\n    'keygen',\n    'link',\n    'menuitem',\n    'meta',\n    'param',\n    'source',\n    'track',\n    'wbr'\n];\nexport var conf = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\n    comments: {\n        blockComment: ['<!--', '-->']\n    },\n    brackets: [\n        ['<!--', '-->'],\n        ['<', '>'],\n        ['{', '}'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" }\n    ],\n    surroundingPairs: [\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" },\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '<', close: '>' }\n    ],\n    onEnterRules: [\n        {\n            beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))([_:\\\\w][_:\\\\w-.\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\n            afterText: /^<\\/([_:\\w][_:\\w-.\\d]*)\\s*>$/i,\n            action: {\n                indentAction: languages.IndentAction.IndentOutdent\n            }\n        },\n        {\n            beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\n            action: { indentAction: languages.IndentAction.Indent }\n        }\n    ],\n    folding: {\n        markers: {\n            start: new RegExp('^\\\\s*<!--\\\\s*#region\\\\b.*-->'),\n            end: new RegExp('^\\\\s*<!--\\\\s*#endregion\\\\b.*-->')\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.html',\n    ignoreCase: true,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            [/<!DOCTYPE/, 'metatag', '@doctype'],\n            [/<!--/, 'comment', '@comment'],\n            [/(<)((?:[\\w\\-]+:)?[\\w\\-]+)(\\s*)(\\/>)/, ['delimiter', 'tag', '', 'delimiter']],\n            [/(<)(script)/, ['delimiter', { token: 'tag', next: '@script' }]],\n            [/(<)(style)/, ['delimiter', { token: 'tag', next: '@style' }]],\n            [/(<)((?:[\\w\\-]+:)?[\\w\\-]+)/, ['delimiter', { token: 'tag', next: '@otherTag' }]],\n            [/(<\\/)((?:[\\w\\-]+:)?[\\w\\-]+)/, ['delimiter', { token: 'tag', next: '@otherTag' }]],\n            [/</, 'delimiter'],\n            [/[^<]+/] // text\n        ],\n        doctype: [\n            [/[^>]+/, 'metatag.content'],\n            [/>/, 'metatag', '@pop']\n        ],\n        comment: [\n            [/-->/, 'comment', '@pop'],\n            [/[^-]+/, 'comment.content'],\n            [/./, 'comment.content']\n        ],\n        otherTag: [\n            [/\\/?>/, 'delimiter', '@pop'],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/[ \\t\\r\\n]+/] // whitespace\n        ],\n        // -- BEGIN <script> tags handling\n        // After <script\n        script: [\n            [/type/, 'attribute.name', '@scriptAfterType'],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [\n                />/,\n                {\n                    token: 'delimiter',\n                    next: '@scriptEmbedded',\n                    nextEmbedded: 'text/javascript'\n                }\n            ],\n            [/[ \\t\\r\\n]+/],\n            [/(<\\/)(script\\s*)(>)/, ['delimiter', 'tag', { token: 'delimiter', next: '@pop' }]]\n        ],\n        // After <script ... type\n        scriptAfterType: [\n            [/=/, 'delimiter', '@scriptAfterTypeEquals'],\n            [\n                />/,\n                {\n                    token: 'delimiter',\n                    next: '@scriptEmbedded',\n                    nextEmbedded: 'text/javascript'\n                }\n            ],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <script ... type =\n        scriptAfterTypeEquals: [\n            [\n                /\"([^\"]*)\"/,\n                {\n                    token: 'attribute.value',\n                    switchTo: '@scriptWithCustomType.$1'\n                }\n            ],\n            [\n                /'([^']*)'/,\n                {\n                    token: 'attribute.value',\n                    switchTo: '@scriptWithCustomType.$1'\n                }\n            ],\n            [\n                />/,\n                {\n                    token: 'delimiter',\n                    next: '@scriptEmbedded',\n                    nextEmbedded: 'text/javascript'\n                }\n            ],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <script ... type = $S2\n        scriptWithCustomType: [\n            [\n                />/,\n                {\n                    token: 'delimiter',\n                    next: '@scriptEmbedded.$S2',\n                    nextEmbedded: '$S2'\n                }\n            ],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        scriptEmbedded: [\n            [/<\\/script/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }],\n            [/[^<]+/, '']\n        ],\n        // -- END <script> tags handling\n        // -- BEGIN <style> tags handling\n        // After <style\n        style: [\n            [/type/, 'attribute.name', '@styleAfterType'],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [\n                />/,\n                {\n                    token: 'delimiter',\n                    next: '@styleEmbedded',\n                    nextEmbedded: 'text/css'\n                }\n            ],\n            [/[ \\t\\r\\n]+/],\n            [/(<\\/)(style\\s*)(>)/, ['delimiter', 'tag', { token: 'delimiter', next: '@pop' }]]\n        ],\n        // After <style ... type\n        styleAfterType: [\n            [/=/, 'delimiter', '@styleAfterTypeEquals'],\n            [\n                />/,\n                {\n                    token: 'delimiter',\n                    next: '@styleEmbedded',\n                    nextEmbedded: 'text/css'\n                }\n            ],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <style ... type =\n        styleAfterTypeEquals: [\n            [\n                /\"([^\"]*)\"/,\n                {\n                    token: 'attribute.value',\n                    switchTo: '@styleWithCustomType.$1'\n                }\n            ],\n            [\n                /'([^']*)'/,\n                {\n                    token: 'attribute.value',\n                    switchTo: '@styleWithCustomType.$1'\n                }\n            ],\n            [\n                />/,\n                {\n                    token: 'delimiter',\n                    next: '@styleEmbedded',\n                    nextEmbedded: 'text/css'\n                }\n            ],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        // After <style ... type = $S2\n        styleWithCustomType: [\n            [\n                />/,\n                {\n                    token: 'delimiter',\n                    next: '@styleEmbedded.$S2',\n                    nextEmbedded: '$S2'\n                }\n            ],\n            [/\"([^\"]*)\"/, 'attribute.value'],\n            [/'([^']*)'/, 'attribute.value'],\n            [/[\\w\\-]+/, 'attribute.name'],\n            [/=/, 'delimiter'],\n            [/[ \\t\\r\\n]+/],\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\n        ],\n        styleEmbedded: [\n            [/<\\/style/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }],\n            [/[^<]+/, '']\n        ]\n        // -- END <style> tags handling\n    }\n};\n// TESTED WITH:\n// <!DOCTYPE html>\n// <html>\n// <head>\n//   <title>Monarch Workbench</title>\n//   <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n//   <!----\n//   -- -- -- a comment -- -- --\n//   ---->\n//   <style bah=\"bah\">\n//     body { font-family: Consolas; } /* nice */\n//   </style>\n// </head\n// >\n// a = \"asd\"\n// <body>\n//   <br/>\n//   <div\n//   class\n//   =\n//   \"test\"\n//   >\n//     <script>\n//       function() {\n//         alert(\"hi </ script>\"); // javascript\n//       };\n//     </script>\n//     <script\n// \tbah=\"asdfg\"\n// \ttype=\"text/css\"\n// \t>\n//   .bar { text-decoration: underline; }\n//     </script>\n//   </div>\n// </body>\n// </html>\n"],"names":["EMPTY_ELEMENTS","conf","languages","language"],"mappings":"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","x_google_ignoreList":[0]}