{"version":3,"file":"scala-Bqvq8jcR.js","sources":["../../node_modules/monaco-editor/esm/vs/basic-languages/scala/scala.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var conf = {\n    /*\n     * `...` is allowed as an identifier.\n     * $ is allowed in identifiers.\n     * unary_<op> is allowed as an identifier.\n     * <name>_= is allowed as an identifier.\n     */\n    wordPattern: /(unary_[@~!#%^&*()\\-=+\\\\|:<>\\/?]+)|([a-zA-Z_$][\\w$]*?_=)|(`[^`]+`)|([a-zA-Z_$][\\w$]*)/g,\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/']\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" }\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" }\n    ],\n    folding: {\n        markers: {\n            start: new RegExp('^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))'),\n            end: new RegExp('^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))')\n        }\n    }\n};\nexport var language = {\n    tokenPostfix: '.scala',\n    // We can't easily add everything from Dotty, but we can at least add some of its keywords\n    keywords: [\n        'asInstanceOf',\n        'catch',\n        'class',\n        'classOf',\n        'def',\n        'do',\n        'else',\n        'extends',\n        'finally',\n        'for',\n        'foreach',\n        'forSome',\n        'if',\n        'import',\n        'isInstanceOf',\n        'macro',\n        'match',\n        'new',\n        'object',\n        'package',\n        'return',\n        'throw',\n        'trait',\n        'try',\n        'type',\n        'until',\n        'val',\n        'var',\n        'while',\n        'with',\n        'yield',\n        // Dotty-specific:\n        'given',\n        'enum',\n        'then'\n    ],\n    // Dotty-specific:\n    softKeywords: ['as', 'export', 'extension', 'end', 'derives', 'on'],\n    constants: ['true', 'false', 'null', 'this', 'super'],\n    modifiers: [\n        'abstract',\n        'final',\n        'implicit',\n        'lazy',\n        'override',\n        'private',\n        'protected',\n        'sealed'\n    ],\n    // Dotty-specific:\n    softModifiers: ['inline', 'opaque', 'open', 'transparent', 'using'],\n    name: /(?:[a-z_$][\\w$]*|`[^`]+`)/,\n    type: /(?:[A-Z][\\w$]*)/,\n    // we include these common regular expressions\n    symbols: /[=><!~?:&|+\\-*\\/^\\\\%@#]+/,\n    digits: /\\d+(_+\\d+)*/,\n    hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\n    // C# style strings\n    escapes: /\\\\(?:[btnfr\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    fstring_conv: /[bBhHsScCdoxXeEfgGaAt]|[Tn](?:[HIklMSLNpzZsQ]|[BbhAaCYyjmde]|[RTrDFC])/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // strings\n            [/\\braw\"\"\"/, { token: 'string.quote', bracket: '@open', next: '@rawstringt' }],\n            [/\\braw\"/, { token: 'string.quote', bracket: '@open', next: '@rawstring' }],\n            [/\\bs\"\"\"/, { token: 'string.quote', bracket: '@open', next: '@sstringt' }],\n            [/\\bs\"/, { token: 'string.quote', bracket: '@open', next: '@sstring' }],\n            [/\\bf\"\"\"\"/, { token: 'string.quote', bracket: '@open', next: '@fstringt' }],\n            [/\\bf\"/, { token: 'string.quote', bracket: '@open', next: '@fstring' }],\n            [/\"\"\"/, { token: 'string.quote', bracket: '@open', next: '@stringt' }],\n            [/\"/, { token: 'string.quote', bracket: '@open', next: '@string' }],\n            // numbers\n            [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, 'number.float', '@allowMethod'],\n            [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, 'number.float', '@allowMethod'],\n            [/0[xX](@hexdigits)[Ll]?/, 'number.hex', '@allowMethod'],\n            [/(@digits)[fFdD]/, 'number.float', '@allowMethod'],\n            [/(@digits)[lL]?/, 'number', '@allowMethod'],\n            [/\\b_\\*/, 'key'],\n            [/\\b(_)\\b/, 'keyword', '@allowMethod'],\n            // identifiers and keywords\n            [/\\bimport\\b/, 'keyword', '@import'],\n            [/\\b(case)([ \\t]+)(class)\\b/, ['keyword.modifier', 'white', 'keyword']],\n            [/\\bcase\\b/, 'keyword', '@case'],\n            [/\\bva[lr]\\b/, 'keyword', '@vardef'],\n            [\n                /\\b(def)([ \\t]+)((?:unary_)?@symbols|@name(?:_=)|@name)/,\n                ['keyword', 'white', 'identifier']\n            ],\n            [/@name(?=[ \\t]*:(?!:))/, 'variable'],\n            [/(\\.)(@name|@symbols)/, ['operator', { token: '@rematch', next: '@allowMethod' }]],\n            [/([{(])(\\s*)(@name(?=\\s*=>))/, ['@brackets', 'white', 'variable']],\n            [\n                /@name/,\n                {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@softKeywords': 'keyword',\n                        '@modifiers': 'keyword.modifier',\n                        '@softModifiers': 'keyword.modifier',\n                        '@constants': {\n                            token: 'constant',\n                            next: '@allowMethod'\n                        },\n                        '@default': {\n                            token: 'identifier',\n                            next: '@allowMethod'\n                        }\n                    }\n                }\n            ],\n            [/@type/, 'type', '@allowMethod'],\n            // whitespace\n            { include: '@whitespace' },\n            // @ annotations.\n            [/@[a-zA-Z_$][\\w$]*(?:\\.[a-zA-Z_$][\\w$]*)*/, 'annotation'],\n            // delimiters and operators\n            [/[{(]/, '@brackets'],\n            [/[})]/, '@brackets', '@allowMethod'],\n            [/\\[/, 'operator.square'],\n            [/](?!\\s*(?:va[rl]|def|type)\\b)/, 'operator.square', '@allowMethod'],\n            [/]/, 'operator.square'],\n            [/([=-]>|<-|>:|<:|:>|<%)(?=[\\s\\w()[\\]{},\\.\"'`])/, 'keyword'],\n            [/@symbols/, 'operator'],\n            // delimiter: after number because of .\\d floats\n            [/[;,\\.]/, 'delimiter'],\n            // symbols\n            [/'[a-zA-Z$][\\w$]*(?!')/, 'attribute.name'],\n            // characters\n            [/'[^\\\\']'/, 'string', '@allowMethod'],\n            [\n                /(')(@escapes)(')/,\n                ['string', 'string.escape', { token: 'string', next: '@allowMethod' }]\n            ],\n            [/'/, 'string.invalid']\n        ],\n        import: [\n            [/;/, 'delimiter', '@pop'],\n            [/^|$/, '', '@pop'],\n            [/[ \\t]+/, 'white'],\n            [/[\\n\\r]+/, 'white', '@pop'],\n            [/\\/\\*/, 'comment', '@comment'],\n            [/@name|@type/, 'type'],\n            [/[(){}]/, '@brackets'],\n            [/[[\\]]/, 'operator.square'],\n            [/[\\.,]/, 'delimiter']\n        ],\n        allowMethod: [\n            [/^|$/, '', '@pop'],\n            [/[ \\t]+/, 'white'],\n            [/[\\n\\r]+/, 'white', '@pop'],\n            [/\\/\\*/, 'comment', '@comment'],\n            [/(?==>[\\s\\w([{])/, 'keyword', '@pop'],\n            [\n                /(@name|@symbols)(?=[ \\t]*[[({\"'`]|[ \\t]+(?:[+-]?\\.?\\d|\\w))/,\n                {\n                    cases: {\n                        '@keywords': { token: 'keyword', next: '@pop' },\n                        '->|<-|>:|<:|<%': { token: 'keyword', next: '@pop' },\n                        '@default': { token: '@rematch', next: '@pop' }\n                    }\n                }\n            ],\n            ['', '', '@pop']\n        ],\n        comment: [\n            [/[^\\/*]+/, 'comment'],\n            [/\\/\\*/, 'comment', '@push'],\n            [/\\*\\//, 'comment', '@pop'],\n            [/[\\/*]/, 'comment']\n        ],\n        case: [\n            [/\\b_\\*/, 'key'],\n            [/\\b(_|true|false|null|this|super)\\b/, 'keyword', '@allowMethod'],\n            [/\\bif\\b|=>/, 'keyword', '@pop'],\n            [/`[^`]+`/, 'identifier', '@allowMethod'],\n            [/@name/, 'variable', '@allowMethod'],\n            [/:::?|\\||@(?![a-z_$])/, 'keyword'],\n            { include: '@root' }\n        ],\n        vardef: [\n            [/\\b_\\*/, 'key'],\n            [/\\b(_|true|false|null|this|super)\\b/, 'keyword'],\n            [/@name/, 'variable'],\n            [/:::?|\\||@(?![a-z_$])/, 'keyword'],\n            [/=|:(?!:)/, 'operator', '@pop'],\n            [/$/, 'white', '@pop'],\n            { include: '@root' }\n        ],\n        string: [\n            [/[^\\\\\"\\n\\r]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [\n                /\"/,\n                {\n                    token: 'string.quote',\n                    bracket: '@close',\n                    switchTo: '@allowMethod'\n                }\n            ]\n        ],\n        stringt: [\n            [/[^\\\\\"\\n\\r]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/\"(?=\"\"\")/, 'string'],\n            [\n                /\"\"\"/,\n                {\n                    token: 'string.quote',\n                    bracket: '@close',\n                    switchTo: '@allowMethod'\n                }\n            ],\n            [/\"/, 'string']\n        ],\n        fstring: [\n            [/@escapes/, 'string.escape'],\n            [\n                /\"/,\n                {\n                    token: 'string.quote',\n                    bracket: '@close',\n                    switchTo: '@allowMethod'\n                }\n            ],\n            [/\\$\\$/, 'string'],\n            [/(\\$)([a-z_]\\w*)/, ['operator', 'identifier']],\n            [/\\$\\{/, 'operator', '@interp'],\n            [/%%/, 'string'],\n            [\n                /(%)([\\-#+ 0,(])(\\d+|\\.\\d+|\\d+\\.\\d+)(@fstring_conv)/,\n                ['metatag', 'keyword.modifier', 'number', 'metatag']\n            ],\n            [/(%)(\\d+|\\.\\d+|\\d+\\.\\d+)(@fstring_conv)/, ['metatag', 'number', 'metatag']],\n            [/(%)([\\-#+ 0,(])(@fstring_conv)/, ['metatag', 'keyword.modifier', 'metatag']],\n            [/(%)(@fstring_conv)/, ['metatag', 'metatag']],\n            [/./, 'string']\n        ],\n        fstringt: [\n            [/@escapes/, 'string.escape'],\n            [/\"(?=\"\"\")/, 'string'],\n            [\n                /\"\"\"/,\n                {\n                    token: 'string.quote',\n                    bracket: '@close',\n                    switchTo: '@allowMethod'\n                }\n            ],\n            [/\\$\\$/, 'string'],\n            [/(\\$)([a-z_]\\w*)/, ['operator', 'identifier']],\n            [/\\$\\{/, 'operator', '@interp'],\n            [/%%/, 'string'],\n            [\n                /(%)([\\-#+ 0,(])(\\d+|\\.\\d+|\\d+\\.\\d+)(@fstring_conv)/,\n                ['metatag', 'keyword.modifier', 'number', 'metatag']\n            ],\n            [/(%)(\\d+|\\.\\d+|\\d+\\.\\d+)(@fstring_conv)/, ['metatag', 'number', 'metatag']],\n            [/(%)([\\-#+ 0,(])(@fstring_conv)/, ['metatag', 'keyword.modifier', 'metatag']],\n            [/(%)(@fstring_conv)/, ['metatag', 'metatag']],\n            [/./, 'string']\n        ],\n        sstring: [\n            [/@escapes/, 'string.escape'],\n            [\n                /\"/,\n                {\n                    token: 'string.quote',\n                    bracket: '@close',\n                    switchTo: '@allowMethod'\n                }\n            ],\n            [/\\$\\$/, 'string'],\n            [/(\\$)([a-z_]\\w*)/, ['operator', 'identifier']],\n            [/\\$\\{/, 'operator', '@interp'],\n            [/./, 'string']\n        ],\n        sstringt: [\n            [/@escapes/, 'string.escape'],\n            [/\"(?=\"\"\")/, 'string'],\n            [\n                /\"\"\"/,\n                {\n                    token: 'string.quote',\n                    bracket: '@close',\n                    switchTo: '@allowMethod'\n                }\n            ],\n            [/\\$\\$/, 'string'],\n            [/(\\$)([a-z_]\\w*)/, ['operator', 'identifier']],\n            [/\\$\\{/, 'operator', '@interp'],\n            [/./, 'string']\n        ],\n        interp: [[/{/, 'operator', '@push'], [/}/, 'operator', '@pop'], { include: '@root' }],\n        rawstring: [\n            [/[^\"]/, 'string'],\n            [\n                /\"/,\n                {\n                    token: 'string.quote',\n                    bracket: '@close',\n                    switchTo: '@allowMethod'\n                }\n            ]\n        ],\n        rawstringt: [\n            [/[^\"]/, 'string'],\n            [/\"(?=\"\"\")/, 'string'],\n            [\n                /\"\"\"/,\n                {\n                    token: 'string.quote',\n                    bracket: '@close',\n                    switchTo: '@allowMethod'\n                }\n            ],\n            [/\"/, 'string']\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, 'white'],\n            [/\\/\\*/, 'comment', '@comment'],\n            [/\\/\\/.*$/, 'comment']\n        ]\n    }\n};\n"],"names":["conf","language"],"mappings":"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","x_google_ignoreList":[0]}