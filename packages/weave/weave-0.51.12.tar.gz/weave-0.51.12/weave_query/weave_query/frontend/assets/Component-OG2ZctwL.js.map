{"version":3,"file":"Component-OG2ZctwL.js","sources":["../../src/components/Panel2/BokehViewer.tsx","../../src/components/Panel2/PanelBokeh/Component.tsx"],"sourcesContent":["import * as React from 'react';\nimport {Card} from 'semantic-ui-react';\n\ninterface BokehViewerProps {\n  headerElements?: JSX.Element[];\n  notFoundElements?: JSX.Element[];\n  contentNotFound?: boolean;\n  bokehJson?: any;\n}\n\n// This injects a bokeh library fetch based on the version of the bokeh content. a bit hacky,\n// but I think the only way to ensure compatibility with the user's python bokeh version and the\n// JS version.\nconst loadBokehLibrary = (\n  version: string = '2.2.3',\n  callback: () => void = () => {}\n) => {\n  const scriptID = '__bokeh_lib_injection__';\n  const existingScript = document.getElementById(scriptID);\n  if (!existingScript) {\n    const script = document.createElement('script');\n    script.src = `https://cdn.bokeh.org/bokeh/release/bokeh-${version}.min.js`;\n    script.id = scriptID;\n    document.body.appendChild(script);\n    script.addEventListener('load', callback);\n  } else if (!(window as any).Bokeh) {\n    existingScript.addEventListener('load', callback);\n  } else {\n    callback();\n  }\n};\n\nconst BokehViewer = (props: BokehViewerProps) => {\n  const [libraryLoaded, setLibraryLoaded] = React.useState<boolean>(false);\n  if (!props.bokehJson?.version) {\n    return <>-</>;\n  } else if (!libraryLoaded) {\n    loadBokehLibrary(props.bokehJson.version, () => {\n      setLibraryLoaded(true);\n    });\n    return <></>;\n  } else {\n    // See https://github.com/bokeh/bokeh/blob/55a0a5d33376abb029506e7c1facc85a2b2a2fa7/bokehjs/src/lib/core/logging.ts#L12\n    (window as any).Bokeh.logger.set_level('error');\n    return <BokehViewerInner {...props} />;\n  }\n};\n\nconst BokehViewerInner = (props: BokehViewerProps) => {\n  const bokehDivRef = React.useRef<HTMLDivElement>(null);\n  const bokehDivId = React.useMemo(() => '_bokeh__' + new Date().getTime(), []);\n\n  React.useEffect(() => {\n    if (!!props.bokehJson) {\n      if (bokehDivRef.current) {\n        bokehDivRef.current.innerHTML = '';\n      }\n      // Simple Bokeh objects will not have multiple roots. So\n      // we can just use the first root_id. This was discovered\n      // by unit tests creating simple Bokeh objects.\n      let rootId = 0;\n      if (props.bokehJson.roots.root_ids != null) {\n        rootId = props.bokehJson.roots.root_ids[0];\n      }\n      (window as any).Bokeh.embed.embed_item({\n        doc: props.bokehJson,\n        root_id: rootId,\n        target_id: bokehDivId,\n      });\n    }\n  }, [props.bokehJson, bokehDivId]);\n\n  return (\n    <div style={{padding: '10px', height: '100%', width: '100%'}}>\n      <Card className=\"bokeh-card\" style={{width: '100%'}}>\n        {props.headerElements}\n\n        {!!props.contentNotFound || !props.bokehJson ? (\n          !!props.notFoundElements ? (\n            props.notFoundElements\n          ) : null\n        ) : (\n          <div ref={bokehDivRef} id={bokehDivId}></div>\n        )}\n      </Card>\n    </div>\n  );\n};\n\nexport default BokehViewer;\n","import React from 'react';\n\nimport BokehViewer from '../BokehViewer';\nimport * as Panel2 from '../panel';\nimport {useAssetContentFromArtifact} from '../useAssetFromArtifact';\nimport {inputType} from './common';\n\nconst PanelBokeh: React.FC<Panel2.PanelProps<typeof inputType>> = props => {\n  const inputNode = props.input;\n  const assetResult = useAssetContentFromArtifact(inputNode);\n  if (assetResult.loading) {\n    return <div></div>;\n  } else {\n    return (\n      <BokehViewer\n        bokehJson={\n          assetResult.contents ? JSON.parse(assetResult.contents) : null\n        }\n      />\n    );\n  }\n};\n\nexport default PanelBokeh;\n"],"names":["loadBokehLibrary","version","callback","scriptID","existingScript","script","BokehViewer","props","libraryLoaded","setLibraryLoaded","React.useState","React.createElement","BokehViewerInner","React.Fragment","bokehDivRef","React.useRef","bokehDivId","React.useMemo","React.useEffect","rootId","Card","PanelBokeh","inputNode","assetResult","useAssetContentFromArtifact","React"],"mappings":"6DAaA,MAAMA,EAAmB,CACvBC,EAAkB,QAClBC,EAAuB,IAAM,CAAC,IAC3B,CACH,MAAMC,EAAW,0BACXC,EAAiB,SAAS,eAAeD,CAAQ,EACvD,GAAKC,EAMQ,OAAe,MAGjBF,IAFME,EAAA,iBAAiB,OAAQF,CAAQ,MAP7B,CACb,MAAAG,EAAS,SAAS,cAAc,QAAQ,EACvCA,EAAA,IAAM,6CAA6CJ,CAAO,UACjEI,EAAO,GAAKF,EACH,SAAA,KAAK,YAAYE,CAAM,EACzBA,EAAA,iBAAiB,OAAQH,CAAQ,CAAA,CAM5C,EAEMI,EAAeC,GAA4B,CAC/C,KAAM,CAACC,EAAeC,CAAgB,EAAIC,WAAwB,EAAK,EACnE,OAACH,EAAM,WAAW,QAEVC,GAOT,OAAe,MAAM,OAAO,UAAU,OAAO,EACvCG,EAAA,cAACC,EAAkB,CAAA,GAAGL,CAAO,CAAA,IAPnBP,EAAAO,EAAM,UAAU,QAAS,IAAM,CAC9CE,EAAiB,EAAI,CAAA,CACtB,EACQE,EAAA,cAAAE,WAAA,IAAA,mCALA,GAAC,CAWd,EAEMD,EAAoBL,GAA4B,CAC9C,MAAAO,EAAcC,SAA6B,IAAI,EAC/CC,EAAaC,UAAc,IAAM,WAAiB,IAAA,OAAO,UAAW,CAAA,CAAE,EAE5EC,OAAAA,EAAAA,UAAgB,IAAM,CAChB,GAAEX,EAAM,UAAW,CACjBO,EAAY,UACdA,EAAY,QAAQ,UAAY,IAKlC,IAAIK,EAAS,EACTZ,EAAM,UAAU,MAAM,UAAY,OACpCY,EAASZ,EAAM,UAAU,MAAM,SAAS,CAAC,GAE1C,OAAe,MAAM,MAAM,WAAW,CACrC,IAAKA,EAAM,UACX,QAASY,EACT,UAAWH,CAAA,CACZ,CACH,CACC,EAAA,CAACT,EAAM,UAAWS,CAAU,CAAC,kBAG7B,MAAI,CAAA,MAAO,CAAC,QAAS,OAAQ,OAAQ,OAAQ,MAAO,MACnD,CAAA,EAAAL,EAAA,cAACS,GAAK,UAAU,aAAa,MAAO,CAAC,MAAO,SACzCb,EAAM,eAEJA,EAAM,iBAAmB,CAACA,EAAM,UAC/BA,EAAM,iBACNA,EAAM,iBACJ,qBAEH,MAAI,CAAA,IAAKO,EAAa,GAAIE,EAAY,CAE3C,CACF,CAEJ,EChFMK,EAAqEd,GAAA,CACzE,MAAMe,EAAYf,EAAM,MAClBgB,EAAcC,EAA4BF,CAAS,EACzD,OAAIC,EAAY,wBACN,MAAI,IAAA,EAGVE,EAAA,cAACnB,EAAA,CACC,UACEiB,EAAY,SAAW,KAAK,MAAMA,EAAY,QAAQ,EAAI,IAAA,CAAA,CAKpE"}