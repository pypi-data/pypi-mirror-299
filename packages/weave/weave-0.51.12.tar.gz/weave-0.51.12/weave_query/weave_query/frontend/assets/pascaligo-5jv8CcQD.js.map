{"version":3,"file":"pascaligo-5jv8CcQD.js","sources":["../../node_modules/monaco-editor/esm/vs/basic-languages/pascaligo/pascaligo.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['(*', '*)']\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')'],\n        ['<', '>']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '<', close: '>' },\n        { open: \"'\", close: \"'\" }\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '<', close: '>' },\n        { open: \"'\", close: \"'\" }\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.pascaligo',\n    ignoreCase: true,\n    brackets: [\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.square' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '<', close: '>', token: 'delimiter.angle' }\n    ],\n    keywords: [\n        'begin',\n        'block',\n        'case',\n        'const',\n        'else',\n        'end',\n        'fail',\n        'for',\n        'from',\n        'function',\n        'if',\n        'is',\n        'nil',\n        'of',\n        'remove',\n        'return',\n        'skip',\n        'then',\n        'type',\n        'var',\n        'while',\n        'with',\n        'option',\n        'None',\n        'transaction'\n    ],\n    typeKeywords: [\n        'bool',\n        'int',\n        'list',\n        'map',\n        'nat',\n        'record',\n        'string',\n        'unit',\n        'address',\n        'map',\n        'mtz',\n        'xtz'\n    ],\n    operators: [\n        '=',\n        '>',\n        '<',\n        '<=',\n        '>=',\n        '<>',\n        ':',\n        ':=',\n        'and',\n        'mod',\n        'or',\n        '+',\n        '-',\n        '*',\n        '/',\n        '@',\n        '&',\n        '^',\n        '%'\n    ],\n    // we include these common regular expressions\n    symbols: /[=><:@\\^&|+\\-*\\/\\^%]+/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // identifiers and keywords\n            [\n                /[a-zA-Z_][\\w]*/,\n                {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': 'identifier'\n                    }\n                }\n            ],\n            // whitespace\n            { include: '@whitespace' },\n            // delimiters and operators\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/[<>](?!@symbols)/, '@brackets'],\n            [\n                /@symbols/,\n                {\n                    cases: {\n                        '@operators': 'delimiter',\n                        '@default': ''\n                    }\n                }\n            ],\n            // numbers\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/\\$[0-9a-fA-F]{1,16}/, 'number.hex'],\n            [/\\d+/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[;,.]/, 'delimiter'],\n            // strings\n            [/'([^'\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/'/, 'string', '@string'],\n            // characters\n            [/'[^\\\\']'/, 'string'],\n            [/'/, 'string.invalid'],\n            [/\\#\\d+/, 'string']\n        ],\n        /* */\n        comment: [\n            [/[^\\(\\*]+/, 'comment'],\n            //[/\\(\\*/,    'comment', '@push' ],    // nested comment  not allowed :-(\n            [/\\*\\)/, 'comment', '@pop'],\n            [/\\(\\*/, 'comment']\n        ],\n        string: [\n            [/[^\\\\']+/, 'string'],\n            [/\\\\./, 'string.escape.invalid'],\n            [/'/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\n        ],\n        whitespace: [\n            [/[ \\t\\r\\n]+/, 'white'],\n            [/\\(\\*/, 'comment', '@comment'],\n            [/\\/\\/.*$/, 'comment']\n        ]\n    }\n};\n"],"names":["conf","language"],"mappings":"AAIU,IAACA,EAAO,CACd,SAAU,CACN,YAAa,KACb,aAAc,CAAC,KAAM,IAAI,CAC5B,EACD,SAAU,CACN,CAAC,IAAK,GAAG,EACT,CAAC,IAAK,GAAG,EACT,CAAC,IAAK,GAAG,EACT,CAAC,IAAK,GAAG,CACZ,EACD,iBAAkB,CACd,CAAE,KAAM,IAAK,MAAO,GAAK,EACzB,CAAE,KAAM,IAAK,MAAO,GAAK,EACzB,CAAE,KAAM,IAAK,MAAO,GAAK,EACzB,CAAE,KAAM,IAAK,MAAO,GAAK,EACzB,CAAE,KAAM,IAAK,MAAO,GAAK,CAC5B,EACD,iBAAkB,CACd,CAAE,KAAM,IAAK,MAAO,GAAK,EACzB,CAAE,KAAM,IAAK,MAAO,GAAK,EACzB,CAAE,KAAM,IAAK,MAAO,GAAK,EACzB,CAAE,KAAM,IAAK,MAAO,GAAK,EACzB,CAAE,KAAM,IAAK,MAAO,GAAK,CAC5B,CACL,EACWC,EAAW,CAClB,aAAc,GACd,aAAc,aACd,WAAY,GACZ,SAAU,CACN,CAAE,KAAM,IAAK,MAAO,IAAK,MAAO,iBAAmB,EACnD,CAAE,KAAM,IAAK,MAAO,IAAK,MAAO,kBAAoB,EACpD,CAAE,KAAM,IAAK,MAAO,IAAK,MAAO,uBAAyB,EACzD,CAAE,KAAM,IAAK,MAAO,IAAK,MAAO,iBAAmB,CACtD,EACD,SAAU,CACN,QACA,QACA,OACA,QACA,OACA,MACA,OACA,MACA,OACA,WACA,KACA,KACA,MACA,KACA,SACA,SACA,OACA,OACA,OACA,MACA,QACA,OACA,SACA,OACA,aACH,EACD,aAAc,CACV,OACA,MACA,OACA,MACA,MACA,SACA,SACA,OACA,UACA,MACA,MACA,KACH,EACD,UAAW,CACP,IACA,IACA,IACA,KACA,KACA,KACA,IACA,KACA,MACA,MACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACH,EAED,QAAS,wBAET,UAAW,CACP,KAAM,CAEF,CACI,iBACA,CACI,MAAO,CACH,YAAa,CAAE,MAAO,YAAc,EACpC,WAAY,YACf,CACJ,CACJ,EAED,CAAE,QAAS,aAAe,EAE1B,CAAC,aAAc,WAAW,EAC1B,CAAC,mBAAoB,WAAW,EAChC,CACI,WACA,CACI,MAAO,CACH,aAAc,YACd,WAAY,EACf,CACJ,CACJ,EAED,CAAC,2BAA4B,cAAc,EAC3C,CAAC,sBAAuB,YAAY,EACpC,CAAC,MAAO,QAAQ,EAEhB,CAAC,QAAS,WAAW,EAErB,CAAC,kBAAmB,gBAAgB,EACpC,CAAC,IAAK,SAAU,SAAS,EAEzB,CAAC,WAAY,QAAQ,EACrB,CAAC,IAAK,gBAAgB,EACtB,CAAC,QAAS,QAAQ,CACrB,EAED,QAAS,CACL,CAAC,WAAY,SAAS,EAEtB,CAAC,OAAQ,UAAW,MAAM,EAC1B,CAAC,OAAQ,SAAS,CACrB,EACD,OAAQ,CACJ,CAAC,UAAW,QAAQ,EACpB,CAAC,MAAO,uBAAuB,EAC/B,CAAC,IAAK,CAAE,MAAO,eAAgB,QAAS,SAAU,KAAM,OAAQ,CACnE,EACD,WAAY,CACR,CAAC,aAAc,OAAO,EACtB,CAAC,OAAQ,UAAW,UAAU,EAC9B,CAAC,UAAW,SAAS,CACxB,CACJ,CACL","x_google_ignoreList":[0]}