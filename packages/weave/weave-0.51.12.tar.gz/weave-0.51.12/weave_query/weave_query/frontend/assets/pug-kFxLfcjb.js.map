{"version":3,"file":"pug-kFxLfcjb.js","sources":["../../node_modules/monaco-editor/esm/vs/basic-languages/pug/pug.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var conf = {\n    comments: {\n        lineComment: '//'\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n        { open: \"'\", close: \"'\", notIn: ['string', 'comment'] },\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\n        { open: '(', close: ')', notIn: ['string', 'comment'] }\n    ],\n    folding: {\n        offSide: true\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.pug',\n    ignoreCase: true,\n    brackets: [\n        { token: 'delimiter.curly', open: '{', close: '}' },\n        { token: 'delimiter.array', open: '[', close: ']' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' }\n    ],\n    keywords: [\n        'append',\n        'block',\n        'case',\n        'default',\n        'doctype',\n        'each',\n        'else',\n        'extends',\n        'for',\n        'if',\n        'in',\n        'include',\n        'mixin',\n        'typeof',\n        'unless',\n        'var',\n        'when'\n    ],\n    tags: [\n        'a',\n        'abbr',\n        'acronym',\n        'address',\n        'area',\n        'article',\n        'aside',\n        'audio',\n        'b',\n        'base',\n        'basefont',\n        'bdi',\n        'bdo',\n        'blockquote',\n        'body',\n        'br',\n        'button',\n        'canvas',\n        'caption',\n        'center',\n        'cite',\n        'code',\n        'col',\n        'colgroup',\n        'command',\n        'datalist',\n        'dd',\n        'del',\n        'details',\n        'dfn',\n        'div',\n        'dl',\n        'dt',\n        'em',\n        'embed',\n        'fieldset',\n        'figcaption',\n        'figure',\n        'font',\n        'footer',\n        'form',\n        'frame',\n        'frameset',\n        'h1',\n        'h2',\n        'h3',\n        'h4',\n        'h5',\n        'h6',\n        'head',\n        'header',\n        'hgroup',\n        'hr',\n        'html',\n        'i',\n        'iframe',\n        'img',\n        'input',\n        'ins',\n        'keygen',\n        'kbd',\n        'label',\n        'li',\n        'link',\n        'map',\n        'mark',\n        'menu',\n        'meta',\n        'meter',\n        'nav',\n        'noframes',\n        'noscript',\n        'object',\n        'ol',\n        'optgroup',\n        'option',\n        'output',\n        'p',\n        'param',\n        'pre',\n        'progress',\n        'q',\n        'rp',\n        'rt',\n        'ruby',\n        's',\n        'samp',\n        'script',\n        'section',\n        'select',\n        'small',\n        'source',\n        'span',\n        'strike',\n        'strong',\n        'style',\n        'sub',\n        'summary',\n        'sup',\n        'table',\n        'tbody',\n        'td',\n        'textarea',\n        'tfoot',\n        'th',\n        'thead',\n        'time',\n        'title',\n        'tr',\n        'tracks',\n        'tt',\n        'u',\n        'ul',\n        'video',\n        'wbr'\n    ],\n    // we include these common regular expressions\n    symbols: /[\\+\\-\\*\\%\\&\\|\\!\\=\\/\\.\\,\\:]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    tokenizer: {\n        root: [\n            // Tag or a keyword at start\n            [\n                /^(\\s*)([a-zA-Z_-][\\w-]*)/,\n                {\n                    cases: {\n                        '$2@tags': {\n                            cases: {\n                                '@eos': ['', 'tag'],\n                                '@default': ['', { token: 'tag', next: '@tag.$1' }]\n                            }\n                        },\n                        '$2@keywords': ['', { token: 'keyword.$2' }],\n                        '@default': ['', '']\n                    }\n                }\n            ],\n            // id\n            [\n                /^(\\s*)(#[a-zA-Z_-][\\w-]*)/,\n                {\n                    cases: {\n                        '@eos': ['', 'tag.id'],\n                        '@default': ['', { token: 'tag.id', next: '@tag.$1' }]\n                    }\n                }\n            ],\n            // class\n            [\n                /^(\\s*)(\\.[a-zA-Z_-][\\w-]*)/,\n                {\n                    cases: {\n                        '@eos': ['', 'tag.class'],\n                        '@default': ['', { token: 'tag.class', next: '@tag.$1' }]\n                    }\n                }\n            ],\n            // plain text with pipe\n            [/^(\\s*)(\\|.*)$/, ''],\n            { include: '@whitespace' },\n            // keywords\n            [\n                /[a-zA-Z_$][\\w$]*/,\n                {\n                    cases: {\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': ''\n                    }\n                }\n            ],\n            // delimiters and operators\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/@symbols/, 'delimiter'],\n            // numbers\n            [/\\d+\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/\\d+/, 'number'],\n            // strings:\n            [/\"/, 'string', '@string.\"'],\n            [/'/, 'string', \"@string.'\"]\n        ],\n        tag: [\n            [/(\\.)(\\s*$)/, [{ token: 'delimiter', next: '@blockText.$S2.' }, '']],\n            [/\\s+/, { token: '', next: '@simpleText' }],\n            // id\n            [\n                /#[a-zA-Z_-][\\w-]*/,\n                {\n                    cases: {\n                        '@eos': { token: 'tag.id', next: '@pop' },\n                        '@default': 'tag.id'\n                    }\n                }\n            ],\n            // class\n            [\n                /\\.[a-zA-Z_-][\\w-]*/,\n                {\n                    cases: {\n                        '@eos': { token: 'tag.class', next: '@pop' },\n                        '@default': 'tag.class'\n                    }\n                }\n            ],\n            // attributes\n            [/\\(/, { token: 'delimiter.parenthesis', next: '@attributeList' }]\n        ],\n        simpleText: [\n            [/[^#]+$/, { token: '', next: '@popall' }],\n            [/[^#]+/, { token: '' }],\n            // interpolation\n            [\n                /(#{)([^}]*)(})/,\n                {\n                    cases: {\n                        '@eos': [\n                            'interpolation.delimiter',\n                            'interpolation',\n                            {\n                                token: 'interpolation.delimiter',\n                                next: '@popall'\n                            }\n                        ],\n                        '@default': [\n                            'interpolation.delimiter',\n                            'interpolation',\n                            'interpolation.delimiter'\n                        ]\n                    }\n                }\n            ],\n            [/#$/, { token: '', next: '@popall' }],\n            [/#/, '']\n        ],\n        attributeList: [\n            [/\\s+/, ''],\n            [\n                /(\\w+)(\\s*=\\s*)(\"|')/,\n                ['attribute.name', 'delimiter', { token: 'attribute.value', next: '@value.$3' }]\n            ],\n            [/\\w+/, 'attribute.name'],\n            [\n                /,/,\n                {\n                    cases: {\n                        '@eos': {\n                            token: 'attribute.delimiter',\n                            next: '@popall'\n                        },\n                        '@default': 'attribute.delimiter'\n                    }\n                }\n            ],\n            [/\\)$/, { token: 'delimiter.parenthesis', next: '@popall' }],\n            [/\\)/, { token: 'delimiter.parenthesis', next: '@pop' }]\n        ],\n        whitespace: [\n            [/^(\\s*)(\\/\\/.*)$/, { token: 'comment', next: '@blockText.$1.comment' }],\n            [/[ \\t\\r\\n]+/, ''],\n            [/<!--/, { token: 'comment', next: '@comment' }]\n        ],\n        blockText: [\n            [\n                /^\\s+.*$/,\n                {\n                    cases: {\n                        '($S2\\\\s+.*$)': { token: '$S3' },\n                        '@default': { token: '@rematch', next: '@popall' }\n                    }\n                }\n            ],\n            [/./, { token: '@rematch', next: '@popall' }]\n        ],\n        comment: [\n            [/[^<\\-]+/, 'comment.content'],\n            [/-->/, { token: 'comment', next: '@pop' }],\n            [/<!--/, 'comment.content.invalid'],\n            [/[<\\-]/, 'comment.content']\n        ],\n        string: [\n            [\n                /[^\\\\\"'#]+/,\n                {\n                    cases: {\n                        '@eos': { token: 'string', next: '@popall' },\n                        '@default': 'string'\n                    }\n                }\n            ],\n            [\n                /@escapes/,\n                {\n                    cases: {\n                        '@eos': { token: 'string.escape', next: '@popall' },\n                        '@default': 'string.escape'\n                    }\n                }\n            ],\n            [\n                /\\\\./,\n                {\n                    cases: {\n                        '@eos': {\n                            token: 'string.escape.invalid',\n                            next: '@popall'\n                        },\n                        '@default': 'string.escape.invalid'\n                    }\n                }\n            ],\n            // interpolation\n            [\n                /(#{)([^}]*)(})/,\n                ['interpolation.delimiter', 'interpolation', 'interpolation.delimiter']\n            ],\n            [/#/, 'string'],\n            [\n                /[\"']/,\n                {\n                    cases: {\n                        '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': { token: 'string' }\n                    }\n                }\n            ]\n        ],\n        // Almost identical to above, except for escapes and the output token\n        value: [\n            [\n                /[^\\\\\"']+/,\n                {\n                    cases: {\n                        '@eos': { token: 'attribute.value', next: '@popall' },\n                        '@default': 'attribute.value'\n                    }\n                }\n            ],\n            [\n                /\\\\./,\n                {\n                    cases: {\n                        '@eos': { token: 'attribute.value', next: '@popall' },\n                        '@default': 'attribute.value'\n                    }\n                }\n            ],\n            [\n                /[\"']/,\n                {\n                    cases: {\n                        '$#==$S2': { token: 'attribute.value', next: '@pop' },\n                        '@default': { token: 'attribute.value' }\n                    }\n                }\n            ]\n        ]\n    }\n};\n"],"names":["conf","language"],"mappings":"AAIU,IAACA,EAAO,CACd,SAAU,CACN,YAAa,IAChB,EACD,SAAU,CACN,CAAC,IAAK,GAAG,EACT,CAAC,IAAK,GAAG,EACT,CAAC,IAAK,GAAG,CACZ,EACD,iBAAkB,CACd,CAAE,KAAM,IAAK,MAAO,IAAK,MAAO,CAAC,SAAU,SAAS,CAAG,EACvD,CAAE,KAAM,IAAK,MAAO,IAAK,MAAO,CAAC,SAAU,SAAS,CAAG,EACvD,CAAE,KAAM,IAAK,MAAO,IAAK,MAAO,CAAC,SAAU,SAAS,CAAG,EACvD,CAAE,KAAM,IAAK,MAAO,IAAK,MAAO,CAAC,SAAU,SAAS,CAAG,EACvD,CAAE,KAAM,IAAK,MAAO,IAAK,MAAO,CAAC,SAAU,SAAS,CAAG,CAC1D,EACD,QAAS,CACL,QAAS,EACZ,CACL,EACWC,EAAW,CAClB,aAAc,GACd,aAAc,OACd,WAAY,GACZ,SAAU,CACN,CAAE,MAAO,kBAAmB,KAAM,IAAK,MAAO,GAAK,EACnD,CAAE,MAAO,kBAAmB,KAAM,IAAK,MAAO,GAAK,EACnD,CAAE,MAAO,wBAAyB,KAAM,IAAK,MAAO,GAAK,CAC5D,EACD,SAAU,CACN,SACA,QACA,OACA,UACA,UACA,OACA,OACA,UACA,MACA,KACA,KACA,UACA,QACA,SACA,SACA,MACA,MACH,EACD,KAAM,CACF,IACA,OACA,UACA,UACA,OACA,UACA,QACA,QACA,IACA,OACA,WACA,MACA,MACA,aACA,OACA,KACA,SACA,SACA,UACA,SACA,OACA,OACA,MACA,WACA,UACA,WACA,KACA,MACA,UACA,MACA,MACA,KACA,KACA,KACA,QACA,WACA,aACA,SACA,OACA,SACA,OACA,QACA,WACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,IACA,SACA,MACA,QACA,MACA,SACA,MACA,QACA,KACA,OACA,MACA,OACA,OACA,OACA,QACA,MACA,WACA,WACA,SACA,KACA,WACA,SACA,SACA,IACA,QACA,MACA,WACA,IACA,KACA,KACA,OACA,IACA,OACA,SACA,UACA,SACA,QACA,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","x_google_ignoreList":[0]}