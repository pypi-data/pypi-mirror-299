{"version":3,"file":"markdown-XFFkuszK.js","sources":["../../node_modules/monaco-editor/esm/vs/basic-languages/markdown/markdown.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var conf = {\n    comments: {\n        blockComment: ['<!--', '-->']\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '<', close: '>', notIn: ['string'] }\n    ],\n    surroundingPairs: [\n        { open: '(', close: ')' },\n        { open: '[', close: ']' },\n        { open: '`', close: '`' }\n    ],\n    folding: {\n        markers: {\n            start: new RegExp('^\\\\s*<!--\\\\s*#?region\\\\b.*-->'),\n            end: new RegExp('^\\\\s*<!--\\\\s*#?endregion\\\\b.*-->')\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.md',\n    // escape codes\n    control: /[\\\\`*_\\[\\]{}()#+\\-\\.!]/,\n    noncontrol: /[^\\\\`*_\\[\\]{}()#+\\-\\.!]/,\n    escapes: /\\\\(?:@control)/,\n    // escape codes for javascript/CSS strings\n    jsescapes: /\\\\(?:[btnfr\\\\\"']|[0-7][0-7]?|[0-3][0-7]{2})/,\n    // non matched elements\n    empty: [\n        'area',\n        'base',\n        'basefont',\n        'br',\n        'col',\n        'frame',\n        'hr',\n        'img',\n        'input',\n        'isindex',\n        'link',\n        'meta',\n        'param'\n    ],\n    tokenizer: {\n        root: [\n            // markdown tables\n            [/^\\s*\\|/, '@rematch', '@table_header'],\n            // headers (with #)\n            [\n                /^(\\s{0,3})(#+)((?:[^\\\\#]|@escapes)+)((?:#+)?)/,\n                ['white', 'keyword', 'keyword', 'keyword']\n            ],\n            // headers (with =)\n            [/^\\s*(=+|\\-+)\\s*$/, 'keyword'],\n            // headers (with ***)\n            [/^\\s*((\\*[ ]?)+)\\s*$/, 'meta.separator'],\n            // quote\n            [/^\\s*>+/, 'comment'],\n            // list (starting with * or number)\n            [/^\\s*([\\*\\-+:]|\\d+\\.)\\s/, 'keyword'],\n            // code block (4 spaces indent)\n            [/^(\\t|[ ]{4})[^ ].*$/, 'string'],\n            // code block (3 tilde)\n            [/^\\s*~~~\\s*((?:\\w|[\\/\\-#])+)?\\s*$/, { token: 'string', next: '@codeblock' }],\n            // github style code blocks (with backticks and language)\n            [\n                /^\\s*```\\s*((?:\\w|[\\/\\-#])+).*$/,\n                { token: 'string', next: '@codeblockgh', nextEmbedded: '$1' }\n            ],\n            // github style code blocks (with backticks but no language)\n            [/^\\s*```\\s*$/, { token: 'string', next: '@codeblock' }],\n            // markup within lines\n            { include: '@linecontent' }\n        ],\n        table_header: [\n            { include: '@table_common' },\n            [/[^\\|]+/, 'keyword.table.header'] // table header\n        ],\n        table_body: [{ include: '@table_common' }, { include: '@linecontent' }],\n        table_common: [\n            [/\\s*[\\-:]+\\s*/, { token: 'keyword', switchTo: 'table_body' }],\n            [/^\\s*\\|/, 'keyword.table.left'],\n            [/^\\s*[^\\|]/, '@rematch', '@pop'],\n            [/^\\s*$/, '@rematch', '@pop'],\n            [\n                /\\|/,\n                {\n                    cases: {\n                        '@eos': 'keyword.table.right',\n                        '@default': 'keyword.table.middle' // inner |\n                    }\n                }\n            ]\n        ],\n        codeblock: [\n            [/^\\s*~~~\\s*$/, { token: 'string', next: '@pop' }],\n            [/^\\s*```\\s*$/, { token: 'string', next: '@pop' }],\n            [/.*$/, 'variable.source']\n        ],\n        // github style code blocks\n        codeblockgh: [\n            [/```\\s*$/, { token: 'string', next: '@pop', nextEmbedded: '@pop' }],\n            [/[^`]+/, 'variable.source']\n        ],\n        linecontent: [\n            // escapes\n            [/&\\w+;/, 'string.escape'],\n            [/@escapes/, 'escape'],\n            // various markup\n            [/\\b__([^\\\\_]|@escapes|_(?!_))+__\\b/, 'strong'],\n            [/\\*\\*([^\\\\*]|@escapes|\\*(?!\\*))+\\*\\*/, 'strong'],\n            [/\\b_[^_]+_\\b/, 'emphasis'],\n            [/\\*([^\\\\*]|@escapes)+\\*/, 'emphasis'],\n            [/`([^\\\\`]|@escapes)+`/, 'variable'],\n            // links\n            [/\\{+[^}]+\\}+/, 'string.target'],\n            [/(!?\\[)((?:[^\\]\\\\]|@escapes)*)(\\]\\([^\\)]+\\))/, ['string.link', '', 'string.link']],\n            [/(!?\\[)((?:[^\\]\\\\]|@escapes)*)(\\])/, 'string.link'],\n            // or html\n            { include: 'html' }\n        ],\n        // Note: it is tempting to rather switch to the real HTML mode instead of building our own here\n        // but currently there is a limitation in Monarch that prevents us from doing it: The opening\n        // '<' would start the HTML mode, however there is no way to jump 1 character back to let the\n        // HTML mode also tokenize the opening angle bracket. Thus, even though we could jump to HTML,\n        // we cannot correctly tokenize it in that mode yet.\n        html: [\n            // html tags\n            [/<(\\w+)\\/>/, 'tag'],\n            [\n                /<(\\w+)/,\n                {\n                    cases: {\n                        '@empty': { token: 'tag', next: '@tag.$1' },\n                        '@default': { token: 'tag', next: '@tag.$1' }\n                    }\n                }\n            ],\n            [/<\\/(\\w+)\\s*>/, { token: 'tag' }],\n            [/<!--/, 'comment', '@comment']\n        ],\n        comment: [\n            [/[^<\\-]+/, 'comment.content'],\n            [/-->/, 'comment', '@pop'],\n            [/<!--/, 'comment.content.invalid'],\n            [/[<\\-]/, 'comment.content']\n        ],\n        // Almost full HTML tag matching, complete with embedded scripts & styles\n        tag: [\n            [/[ \\t\\r\\n]+/, 'white'],\n            [\n                /(type)(\\s*=\\s*)(\")([^\"]+)(\")/,\n                [\n                    'attribute.name.html',\n                    'delimiter.html',\n                    'string.html',\n                    { token: 'string.html', switchTo: '@tag.$S2.$4' },\n                    'string.html'\n                ]\n            ],\n            [\n                /(type)(\\s*=\\s*)(')([^']+)(')/,\n                [\n                    'attribute.name.html',\n                    'delimiter.html',\n                    'string.html',\n                    { token: 'string.html', switchTo: '@tag.$S2.$4' },\n                    'string.html'\n                ]\n            ],\n            [\n                /(\\w+)(\\s*=\\s*)(\"[^\"]*\"|'[^']*')/,\n                ['attribute.name.html', 'delimiter.html', 'string.html']\n            ],\n            [/\\w+/, 'attribute.name.html'],\n            [/\\/>/, 'tag', '@pop'],\n            [\n                />/,\n                {\n                    cases: {\n                        '$S2==style': {\n                            token: 'tag',\n                            switchTo: 'embeddedStyle',\n                            nextEmbedded: 'text/css'\n                        },\n                        '$S2==script': {\n                            cases: {\n                                $S3: {\n                                    token: 'tag',\n                                    switchTo: 'embeddedScript',\n                                    nextEmbedded: '$S3'\n                                },\n                                '@default': {\n                                    token: 'tag',\n                                    switchTo: 'embeddedScript',\n                                    nextEmbedded: 'text/javascript'\n                                }\n                            }\n                        },\n                        '@default': { token: 'tag', next: '@pop' }\n                    }\n                }\n            ]\n        ],\n        embeddedStyle: [\n            [/[^<]+/, ''],\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }],\n            [/</, '']\n        ],\n        embeddedScript: [\n            [/[^<]+/, ''],\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }],\n            [/</, '']\n        ]\n    }\n};\n"],"names":["conf","language"],"mappings":"AAIU,IAACA,EAAO,CACd,SAAU,CACN,aAAc,CAAC,OAAQ,KAAK,CAC/B,EACD,SAAU,CACN,CAAC,IAAK,GAAG,EACT,CAAC,IAAK,GAAG,EACT,CAAC,IAAK,GAAG,CACZ,EACD,iBAAkB,CACd,CAAE,KAAM,IAAK,MAAO,GAAK,EACzB,CAAE,KAAM,IAAK,MAAO,GAAK,EACzB,CAAE,KAAM,IAAK,MAAO,GAAK,EACzB,CAAE,KAAM,IAAK,MAAO,IAAK,MAAO,CAAC,QAAQ,CAAG,CAC/C,EACD,iBAAkB,CACd,CAAE,KAAM,IAAK,MAAO,GAAK,EACzB,CAAE,KAAM,IAAK,MAAO,GAAK,EACzB,CAAE,KAAM,IAAK,MAAO,GAAK,CAC5B,EACD,QAAS,CACL,QAAS,CACL,MAAO,IAAI,OAAO,+BAA+B,EACjD,IAAK,IAAI,OAAO,kCAAkC,CACrD,CACJ,CACL,EACWC,EAAW,CAClB,aAAc,GACd,aAAc,MAEd,QAAS,yBACT,WAAY,0BACZ,QAAS,iBAET,UAAW,8CAEX,MAAO,CACH,OACA,OACA,WACA,KACA,MACA,QACA,KACA,MACA,QACA,UACA,OACA,OACA,OACH,EACD,UAAW,CACP,KAAM,CAEF,CAAC,SAAU,WAAY,eAAe,EAEtC,CACI,gDACA,CAAC,QAAS,UAAW,UAAW,SAAS,CAC5C,EAED,CAAC,mBAAoB,SAAS,EAE9B,CAAC,sBAAuB,gBAAgB,EAExC,CAAC,SAAU,SAAS,EAEpB,CAAC,yBAA0B,SAAS,EAEpC,CAAC,sBAAuB,QAAQ,EAEhC,CAAC,mCAAoC,CAAE,MAAO,SAAU,KAAM,YAAY,CAAE,EAE5E,CACI,iCACA,CAAE,MAAO,SAAU,KAAM,eAAgB,aAAc,IAAM,CAChE,EAED,CAAC,cAAe,CAAE,MAAO,SAAU,KAAM,YAAY,CAAE,EAEvD,CAAE,QAAS,cAAgB,CAC9B,EACD,aAAc,CACV,CAAE,QAAS,eAAiB,EAC5B,CAAC,SAAU,sBAAsB,CACpC,EACD,WAAY,CAAC,CAAE,QAAS,eAAiB,EAAE,CAAE,QAAS,eAAgB,EACtE,aAAc,CACV,CAAC,eAAgB,CAAE,MAAO,UAAW,SAAU,YAAY,CAAE,EAC7D,CAAC,SAAU,oBAAoB,EAC/B,CAAC,YAAa,WAAY,MAAM,EAChC,CAAC,QAAS,WAAY,MAAM,EAC5B,CACI,KACA,CACI,MAAO,CACH,OAAQ,sBACR,WAAY,sBACf,CACJ,CACJ,CACJ,EACD,UAAW,CACP,CAAC,cAAe,CAAE,MAAO,SAAU,KAAM,MAAM,CAAE,EACjD,CAAC,cAAe,CAAE,MAAO,SAAU,KAAM,MAAM,CAAE,EACjD,CAAC,MAAO,iBAAiB,CAC5B,EAED,YAAa,CACT,CAAC,UAAW,CAAE,MAAO,SAAU,KAAM,OAAQ,aAAc,OAAQ,EACnE,CAAC,QAAS,iBAAiB,CAC9B,EACD,YAAa,CAET,CAAC,QAAS,eAAe,EACzB,CAAC,WAAY,QAAQ,EAErB,CAAC,oCAAqC,QAAQ,EAC9C,CAAC,sCAAuC,QAAQ,EAChD,CAAC,cAAe,UAAU,EAC1B,CAAC,yBAA0B,UAAU,EACrC,CAAC,uBAAwB,UAAU,EAEnC,CAAC,cAAe,eAAe,EAC/B,CAAC,8CAA+C,CAAC,cAAe,GAAI,aAAa,CAAC,EAClF,CAAC,oCAAqC,aAAa,EAEnD,CAAE,QAAS,MAAQ,CACtB,EAMD,KAAM,CAEF,CAAC,YAAa,KAAK,EACnB,CACI,SACA,CACI,MAAO,CACH,SAAU,CAAE,MAAO,MAAO,KAAM,SAAW,EAC3C,WAAY,CAAE,MAAO,MAAO,KAAM,SAAW,CAChD,CACJ,CACJ,EACD,CAAC,eAAgB,CAAE,MAAO,MAAO,EACjC,CAAC,OAAQ,UAAW,UAAU,CACjC,EACD,QAAS,CACL,CAAC,UAAW,iBAAiB,EAC7B,CAAC,MAAO,UAAW,MAAM,EACzB,CAAC,OAAQ,yBAAyB,EAClC,CAAC,QAAS,iBAAiB,CAC9B,EAED,IAAK,CACD,CAAC,aAAc,OAAO,EACtB,CACI,+BACA,CACI,sBACA,iBACA,cACA,CAAE,MAAO,cAAe,SAAU,aAAe,EACjD,aACH,CACJ,EACD,CACI,+BACA,CACI,sBACA,iBACA,cACA,CAAE,MAAO,cAAe,SAAU,aAAe,EACjD,aACH,CACJ,EACD,CACI,kCACA,CAAC,sBAAuB,iBAAkB,aAAa,CAC1D,EACD,CAAC,MAAO,qBAAqB,EAC7B,CAAC,MAAO,MAAO,MAAM,EACrB,CACI,IACA,CACI,MAAO,CACH,aAAc,CACV,MAAO,MACP,SAAU,gBACV,aAAc,UACjB,EACD,cAAe,CACX,MAAO,CACH,IAAK,CACD,MAAO,MACP,SAAU,iBACV,aAAc,KACjB,EACD,WAAY,CACR,MAAO,MACP,SAAU,iBACV,aAAc,iBACjB,CACJ,CACJ,EACD,WAAY,CAAE,MAAO,MAAO,KAAM,MAAQ,CAC7C,CACJ,CACJ,CACJ,EACD,cAAe,CACX,CAAC,QAAS,EAAE,EACZ,CAAC,eAAgB,CAAE,MAAO,WAAY,KAAM,OAAQ,aAAc,OAAQ,EAC1E,CAAC,IAAK,EAAE,CACX,EACD,eAAgB,CACZ,CAAC,QAAS,EAAE,EACZ,CAAC,gBAAiB,CAAE,MAAO,WAAY,KAAM,OAAQ,aAAc,OAAQ,EAC3E,CAAC,IAAK,EAAE,CACX,CACJ,CACL","x_google_ignoreList":[0]}