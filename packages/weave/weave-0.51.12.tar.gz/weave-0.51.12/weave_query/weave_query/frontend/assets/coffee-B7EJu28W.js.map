{"version":3,"file":"coffee-B7EJu28W.js","sources":["../../node_modules/monaco-editor/esm/vs/basic-languages/coffee/coffee.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var conf = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\$\\-\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n    comments: {\n        blockComment: ['###', '###'],\n        lineComment: '#'\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" }\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" }\n    ],\n    folding: {\n        markers: {\n            start: new RegExp('^\\\\s*#region\\\\b'),\n            end: new RegExp('^\\\\s*#endregion\\\\b')\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    ignoreCase: true,\n    tokenPostfix: '.coffee',\n    brackets: [\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.square' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' }\n    ],\n    regEx: /\\/(?!\\/\\/)(?:[^\\/\\\\]|\\\\.)*\\/[igm]*/,\n    keywords: [\n        'and',\n        'or',\n        'is',\n        'isnt',\n        'not',\n        'on',\n        'yes',\n        '@',\n        'no',\n        'off',\n        'true',\n        'false',\n        'null',\n        'this',\n        'new',\n        'delete',\n        'typeof',\n        'in',\n        'instanceof',\n        'return',\n        'throw',\n        'break',\n        'continue',\n        'debugger',\n        'if',\n        'else',\n        'switch',\n        'for',\n        'while',\n        'do',\n        'try',\n        'catch',\n        'finally',\n        'class',\n        'extends',\n        'super',\n        'undefined',\n        'then',\n        'unless',\n        'until',\n        'loop',\n        'of',\n        'by',\n        'when'\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?&%|+\\-*\\/\\^\\.,\\:]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // identifiers and keywords\n            [/\\@[a-zA-Z_]\\w*/, 'variable.predefined'],\n            [\n                /[a-zA-Z_]\\w*/,\n                {\n                    cases: {\n                        this: 'variable.predefined',\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': ''\n                    }\n                }\n            ],\n            // whitespace\n            [/[ \\t\\r\\n]+/, ''],\n            // Comments\n            [/###/, 'comment', '@comment'],\n            [/#.*$/, 'comment'],\n            // regular expressions\n            ['///', { token: 'regexp', next: '@hereregexp' }],\n            [/^(\\s*)(@regEx)/, ['', 'regexp']],\n            [/(\\()(\\s*)(@regEx)/, ['@brackets', '', 'regexp']],\n            [/(\\,)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\=)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\:)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\[)(\\s*)(@regEx)/, ['@brackets', '', 'regexp']],\n            [/(\\!)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\&)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\|)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\?)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\{)(\\s*)(@regEx)/, ['@brackets', '', 'regexp']],\n            [/(\\;)(\\s*)(@regEx)/, ['', '', 'regexp']],\n            // delimiters\n            [\n                /}/,\n                {\n                    cases: {\n                        '$S2==interpolatedstring': {\n                            token: 'string',\n                            next: '@pop'\n                        },\n                        '@default': '@brackets'\n                    }\n                }\n            ],\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/@symbols/, 'delimiter'],\n            // numbers\n            [/\\d+[eE]([\\-+]?\\d+)?/, 'number.float'],\n            [/\\d+\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/0[xX][0-9a-fA-F]+/, 'number.hex'],\n            [/0[0-7]+(?!\\d)/, 'number.octal'],\n            [/\\d+/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[,.]/, 'delimiter'],\n            // strings:\n            [/\"\"\"/, 'string', '@herestring.\"\"\"'],\n            [/'''/, 'string', \"@herestring.'''\"],\n            [\n                /\"/,\n                {\n                    cases: {\n                        '@eos': 'string',\n                        '@default': { token: 'string', next: '@string.\"' }\n                    }\n                }\n            ],\n            [\n                /'/,\n                {\n                    cases: {\n                        '@eos': 'string',\n                        '@default': { token: 'string', next: \"@string.'\" }\n                    }\n                }\n            ]\n        ],\n        string: [\n            [/[^\"'\\#\\\\]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\./, 'string.escape.invalid'],\n            [/\\./, 'string.escape.invalid'],\n            [\n                /#{/,\n                {\n                    cases: {\n                        '$S2==\"': {\n                            token: 'string',\n                            next: 'root.interpolatedstring'\n                        },\n                        '@default': 'string'\n                    }\n                }\n            ],\n            [\n                /[\"']/,\n                {\n                    cases: {\n                        '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string'\n                    }\n                }\n            ],\n            [/#/, 'string']\n        ],\n        herestring: [\n            [\n                /(\"\"\"|''')/,\n                {\n                    cases: {\n                        '$1==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string'\n                    }\n                }\n            ],\n            [/[^#\\\\'\"]+/, 'string'],\n            [/['\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\./, 'string.escape.invalid'],\n            [/#{/, { token: 'string.quote', next: 'root.interpolatedstring' }],\n            [/#/, 'string']\n        ],\n        comment: [\n            [/[^#]+/, 'comment'],\n            [/###/, 'comment', '@pop'],\n            [/#/, 'comment']\n        ],\n        hereregexp: [\n            [/[^\\\\\\/#]+/, 'regexp'],\n            [/\\\\./, 'regexp'],\n            [/#.*$/, 'comment'],\n            ['///[igm]*', { token: 'regexp', next: '@pop' }],\n            [/\\//, 'regexp']\n        ]\n    }\n};\n"],"names":["conf","language"],"mappings":"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","x_google_ignoreList":[0]}