{"version":3,"file":"bicep-DLNwh9K6.js","sources":["../../node_modules/monaco-editor/esm/vs/basic-languages/bicep/bicep.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nvar bounded = function (text) { return \"\\\\b\" + text + \"\\\\b\"; };\nvar identifierStart = '[_a-zA-Z]';\nvar identifierContinue = '[_a-zA-Z0-9]';\nvar identifier = bounded(\"\" + identifierStart + identifierContinue + \"*\");\nvar keywords = [\n    'targetScope',\n    'resource',\n    'module',\n    'param',\n    'var',\n    'output',\n    'for',\n    'in',\n    'if',\n    'existing'\n];\nvar namedLiterals = ['true', 'false', 'null'];\nvar nonCommentWs = \"[ \\\\t\\\\r\\\\n]\";\nvar numericLiteral = \"[0-9]+\";\nexport var conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['/*', '*/']\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: \"'\", close: \"'\" },\n        { open: \"'''\", close: \"'''\" }\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: \"'\", close: \"'\", notIn: ['string', 'comment'] },\n        { open: \"'''\", close: \"'''\", notIn: ['string', 'comment'] }\n    ],\n    autoCloseBefore: \":.,=}])' \\n\\t\",\n    indentationRules: {\n        increaseIndentPattern: new RegExp('^((?!\\\\/\\\\/).)*(\\\\{[^}\"\\'`]*|\\\\([^)\"\\'`]*|\\\\[[^\\\\]\"\\'`]*)$'),\n        decreaseIndentPattern: new RegExp('^((?!.*?\\\\/\\\\*).*\\\\*/)?\\\\s*[\\\\}\\\\]].*$')\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.bicep',\n    brackets: [\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.square' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' }\n    ],\n    symbols: /[=><!~?:&|+\\-*/^%]+/,\n    keywords: keywords,\n    namedLiterals: namedLiterals,\n    escapes: \"\\\\\\\\(u{[0-9A-Fa-f]+}|n|r|t|\\\\\\\\|'|\\\\${)\",\n    tokenizer: {\n        root: [{ include: '@expression' }, { include: '@whitespace' }],\n        stringVerbatim: [\n            { regex: \"(|'|'')[^']\", action: { token: 'string' } },\n            { regex: \"'''\", action: { token: 'string.quote', next: '@pop' } }\n        ],\n        stringLiteral: [\n            { regex: \"\\\\${\", action: { token: 'delimiter.bracket', next: '@bracketCounting' } },\n            { regex: \"[^\\\\\\\\'$]+\", action: { token: 'string' } },\n            { regex: '@escapes', action: { token: 'string.escape' } },\n            { regex: \"\\\\\\\\.\", action: { token: 'string.escape.invalid' } },\n            { regex: \"'\", action: { token: 'string', next: '@pop' } }\n        ],\n        bracketCounting: [\n            { regex: \"{\", action: { token: 'delimiter.bracket', next: '@bracketCounting' } },\n            { regex: \"}\", action: { token: 'delimiter.bracket', next: '@pop' } },\n            { include: 'expression' }\n        ],\n        comment: [\n            { regex: \"[^\\\\*]+\", action: { token: 'comment' } },\n            { regex: \"\\\\*\\\\/\", action: { token: 'comment', next: '@pop' } },\n            { regex: \"[\\\\/*]\", action: { token: 'comment' } }\n        ],\n        whitespace: [\n            { regex: nonCommentWs },\n            { regex: \"\\\\/\\\\*\", action: { token: 'comment', next: '@comment' } },\n            { regex: \"\\\\/\\\\/.*$\", action: { token: 'comment' } }\n        ],\n        expression: [\n            { regex: \"'''\", action: { token: 'string.quote', next: '@stringVerbatim' } },\n            { regex: \"'\", action: { token: 'string.quote', next: '@stringLiteral' } },\n            { regex: numericLiteral, action: { token: 'number' } },\n            {\n                regex: identifier,\n                action: {\n                    cases: {\n                        '@keywords': { token: 'keyword' },\n                        '@namedLiterals': { token: 'keyword' },\n                        '@default': { token: 'identifier' }\n                    }\n                }\n            }\n        ]\n    }\n};\n"],"names":["bounded","text","identifierStart","identifierContinue","identifier","keywords","namedLiterals","nonCommentWs","numericLiteral","conf","language"],"mappings":"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","x_google_ignoreList":[0]}