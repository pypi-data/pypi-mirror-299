{"version":3,"file":"scss-CdQcnAnq.js","sources":["../../node_modules/monaco-editor/esm/vs/basic-languages/scss/scss.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var conf = {\n    wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|([@$#!.:]?[\\w-?]+%?)|[@#!.]/g,\n    comments: {\n        blockComment: ['/*', '*/'],\n        lineComment: '//'\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n        { open: \"'\", close: \"'\", notIn: ['string', 'comment'] }\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" }\n    ],\n    folding: {\n        markers: {\n            start: new RegExp('^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/'),\n            end: new RegExp('^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/')\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.scss',\n    ws: '[ \\t\\n\\r\\f]*',\n    identifier: '-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*',\n    brackets: [\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.bracket' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '<', close: '>', token: 'delimiter.angle' }\n    ],\n    tokenizer: {\n        root: [{ include: '@selector' }],\n        selector: [\n            { include: '@comments' },\n            { include: '@import' },\n            { include: '@variabledeclaration' },\n            { include: '@warndebug' },\n            ['[@](include)', { token: 'keyword', next: '@includedeclaration' }],\n            [\n                '[@](keyframes|-webkit-keyframes|-moz-keyframes|-o-keyframes)',\n                { token: 'keyword', next: '@keyframedeclaration' }\n            ],\n            ['[@](page|content|font-face|-moz-document)', { token: 'keyword' }],\n            ['[@](charset|namespace)', { token: 'keyword', next: '@declarationbody' }],\n            ['[@](function)', { token: 'keyword', next: '@functiondeclaration' }],\n            ['[@](mixin)', { token: 'keyword', next: '@mixindeclaration' }],\n            ['url(\\\\-prefix)?\\\\(', { token: 'meta', next: '@urldeclaration' }],\n            { include: '@controlstatement' },\n            { include: '@selectorname' },\n            ['[&\\\\*]', 'tag'],\n            ['[>\\\\+,]', 'delimiter'],\n            ['\\\\[', { token: 'delimiter.bracket', next: '@selectorattribute' }],\n            ['{', { token: 'delimiter.curly', next: '@selectorbody' }]\n        ],\n        selectorbody: [\n            ['[*_]?@identifier@ws:(?=(\\\\s|\\\\d|[^{;}]*[;}]))', 'attribute.name', '@rulevalue'],\n            { include: '@selector' },\n            ['[@](extend)', { token: 'keyword', next: '@extendbody' }],\n            ['[@](return)', { token: 'keyword', next: '@declarationbody' }],\n            ['}', { token: 'delimiter.curly', next: '@pop' }]\n        ],\n        selectorname: [\n            ['#{', { token: 'meta', next: '@variableinterpolation' }],\n            ['(\\\\.|#(?=[^{])|%|(@identifier)|:)+', 'tag'] // selector (.foo, div, ...)\n        ],\n        selectorattribute: [\n            { include: '@term' },\n            [']', { token: 'delimiter.bracket', next: '@pop' }]\n        ],\n        term: [\n            { include: '@comments' },\n            ['url(\\\\-prefix)?\\\\(', { token: 'meta', next: '@urldeclaration' }],\n            { include: '@functioninvocation' },\n            { include: '@numbers' },\n            { include: '@strings' },\n            { include: '@variablereference' },\n            ['(and\\\\b|or\\\\b|not\\\\b)', 'operator'],\n            { include: '@name' },\n            ['([<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,])', 'operator'],\n            [',', 'delimiter'],\n            ['!default', 'literal'],\n            ['\\\\(', { token: 'delimiter.parenthesis', next: '@parenthizedterm' }]\n        ],\n        rulevalue: [\n            { include: '@term' },\n            ['!important', 'literal'],\n            [';', 'delimiter', '@pop'],\n            ['{', { token: 'delimiter.curly', switchTo: '@nestedproperty' }],\n            ['(?=})', { token: '', next: '@pop' }] // missing semicolon\n        ],\n        nestedproperty: [\n            ['[*_]?@identifier@ws:', 'attribute.name', '@rulevalue'],\n            { include: '@comments' },\n            ['}', { token: 'delimiter.curly', next: '@pop' }]\n        ],\n        warndebug: [['[@](warn|debug)', { token: 'keyword', next: '@declarationbody' }]],\n        import: [['[@](import)', { token: 'keyword', next: '@declarationbody' }]],\n        variabledeclaration: [\n            // sass variables\n            ['\\\\$@identifier@ws:', 'variable.decl', '@declarationbody']\n        ],\n        urldeclaration: [\n            { include: '@strings' },\n            ['[^)\\r\\n]+', 'string'],\n            ['\\\\)', { token: 'meta', next: '@pop' }]\n        ],\n        parenthizedterm: [\n            { include: '@term' },\n            ['\\\\)', { token: 'delimiter.parenthesis', next: '@pop' }]\n        ],\n        declarationbody: [\n            { include: '@term' },\n            [';', 'delimiter', '@pop'],\n            ['(?=})', { token: '', next: '@pop' }] // missing semicolon\n        ],\n        extendbody: [\n            { include: '@selectorname' },\n            ['!optional', 'literal'],\n            [';', 'delimiter', '@pop'],\n            ['(?=})', { token: '', next: '@pop' }] // missing semicolon\n        ],\n        variablereference: [\n            // sass variable reference\n            ['\\\\$@identifier', 'variable.ref'],\n            ['\\\\.\\\\.\\\\.', 'operator'],\n            ['#{', { token: 'meta', next: '@variableinterpolation' }] // sass var resolve\n        ],\n        variableinterpolation: [\n            { include: '@variablereference' },\n            ['}', { token: 'meta', next: '@pop' }]\n        ],\n        comments: [\n            ['\\\\/\\\\*', 'comment', '@comment'],\n            ['\\\\/\\\\/+.*', 'comment']\n        ],\n        comment: [\n            ['\\\\*\\\\/', 'comment', '@pop'],\n            ['.', 'comment']\n        ],\n        name: [['@identifier', 'attribute.value']],\n        numbers: [\n            ['(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?', { token: 'number', next: '@units' }],\n            ['#[0-9a-fA-F_]+(?!\\\\w)', 'number.hex']\n        ],\n        units: [\n            [\n                '(em|ex|ch|rem|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?',\n                'number',\n                '@pop'\n            ]\n        ],\n        functiondeclaration: [\n            ['@identifier@ws\\\\(', { token: 'meta', next: '@parameterdeclaration' }],\n            ['{', { token: 'delimiter.curly', switchTo: '@functionbody' }]\n        ],\n        mixindeclaration: [\n            // mixin with parameters\n            ['@identifier@ws\\\\(', { token: 'meta', next: '@parameterdeclaration' }],\n            // mixin without parameters\n            ['@identifier', 'meta'],\n            ['{', { token: 'delimiter.curly', switchTo: '@selectorbody' }]\n        ],\n        parameterdeclaration: [\n            ['\\\\$@identifier@ws:', 'variable.decl'],\n            ['\\\\.\\\\.\\\\.', 'operator'],\n            [',', 'delimiter'],\n            { include: '@term' },\n            ['\\\\)', { token: 'meta', next: '@pop' }]\n        ],\n        includedeclaration: [\n            { include: '@functioninvocation' },\n            ['@identifier', 'meta'],\n            [';', 'delimiter', '@pop'],\n            ['(?=})', { token: '', next: '@pop' }],\n            ['{', { token: 'delimiter.curly', switchTo: '@selectorbody' }]\n        ],\n        keyframedeclaration: [\n            ['@identifier', 'meta'],\n            ['{', { token: 'delimiter.curly', switchTo: '@keyframebody' }]\n        ],\n        keyframebody: [\n            { include: '@term' },\n            ['{', { token: 'delimiter.curly', next: '@selectorbody' }],\n            ['}', { token: 'delimiter.curly', next: '@pop' }]\n        ],\n        controlstatement: [\n            [\n                '[@](if|else|for|while|each|media)',\n                { token: 'keyword.flow', next: '@controlstatementdeclaration' }\n            ]\n        ],\n        controlstatementdeclaration: [\n            ['(in|from|through|if|to)\\\\b', { token: 'keyword.flow' }],\n            { include: '@term' },\n            ['{', { token: 'delimiter.curly', switchTo: '@selectorbody' }]\n        ],\n        functionbody: [\n            ['[@](return)', { token: 'keyword' }],\n            { include: '@variabledeclaration' },\n            { include: '@term' },\n            { include: '@controlstatement' },\n            [';', 'delimiter'],\n            ['}', { token: 'delimiter.curly', next: '@pop' }]\n        ],\n        functioninvocation: [['@identifier\\\\(', { token: 'meta', next: '@functionarguments' }]],\n        functionarguments: [\n            ['\\\\$@identifier@ws:', 'attribute.name'],\n            ['[,]', 'delimiter'],\n            { include: '@term' },\n            ['\\\\)', { token: 'meta', next: '@pop' }]\n        ],\n        strings: [\n            ['~?\"', { token: 'string.delimiter', next: '@stringenddoublequote' }],\n            [\"~?'\", { token: 'string.delimiter', next: '@stringendquote' }]\n        ],\n        stringenddoublequote: [\n            ['\\\\\\\\.', 'string'],\n            ['\"', { token: 'string.delimiter', next: '@pop' }],\n            ['.', 'string']\n        ],\n        stringendquote: [\n            ['\\\\\\\\.', 'string'],\n            [\"'\", { token: 'string.delimiter', next: '@pop' }],\n            ['.', 'string']\n        ]\n    }\n};\n"],"names":["conf","language"],"mappings":"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","x_google_ignoreList":[0]}