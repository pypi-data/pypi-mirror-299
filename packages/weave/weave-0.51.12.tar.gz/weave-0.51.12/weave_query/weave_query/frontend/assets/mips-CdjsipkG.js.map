{"version":3,"file":"mips-CdjsipkG.js","sources":["../../node_modules/monaco-editor/esm/vs/basic-languages/mips/mips.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var conf = {\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\$\\-\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n    comments: {\n        blockComment: ['###', '###'],\n        lineComment: '#'\n    },\n    folding: {\n        markers: {\n            start: new RegExp('^\\\\s*#region\\\\b'),\n            end: new RegExp('^\\\\s*#endregion\\\\b')\n        }\n    }\n};\nexport var language = {\n    defaultToken: '',\n    ignoreCase: false,\n    tokenPostfix: '.mips',\n    regEx: /\\/(?!\\/\\/)(?:[^\\/\\\\]|\\\\.)*\\/[igm]*/,\n    keywords: [\n        '.data',\n        '.text',\n        'syscall',\n        'trap',\n        'add',\n        'addu',\n        'addi',\n        'addiu',\n        'and',\n        'andi',\n        'div',\n        'divu',\n        'mult',\n        'multu',\n        'nor',\n        'or',\n        'ori',\n        'sll',\n        'slv',\n        'sra',\n        'srav',\n        'srl',\n        'srlv',\n        'sub',\n        'subu',\n        'xor',\n        'xori',\n        'lhi',\n        'lho',\n        'lhi',\n        'llo',\n        'slt',\n        'slti',\n        'sltu',\n        'sltiu',\n        'beq',\n        'bgtz',\n        'blez',\n        'bne',\n        'j',\n        'jal',\n        'jalr',\n        'jr',\n        'lb',\n        'lbu',\n        'lh',\n        'lhu',\n        'lw',\n        'li',\n        'la',\n        'sb',\n        'sh',\n        'sw',\n        'mfhi',\n        'mflo',\n        'mthi',\n        'mtlo',\n        'move'\n    ],\n    // we include these common regular expressions\n    symbols: /[\\.,\\:]+/,\n    escapes: /\\\\(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            // identifiers and keywords\n            [/\\$[a-zA-Z_]\\w*/, 'variable.predefined'],\n            [\n                /[.a-zA-Z_]\\w*/,\n                {\n                    cases: {\n                        this: 'variable.predefined',\n                        '@keywords': { token: 'keyword.$0' },\n                        '@default': ''\n                    }\n                }\n            ],\n            // whitespace\n            [/[ \\t\\r\\n]+/, ''],\n            // Comments\n            [/#.*$/, 'comment'],\n            // regular expressions\n            ['///', { token: 'regexp', next: '@hereregexp' }],\n            [/^(\\s*)(@regEx)/, ['', 'regexp']],\n            [/(\\,)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            [/(\\:)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\n            // delimiters\n            [/@symbols/, 'delimiter'],\n            // numbers\n            [/\\d+[eE]([\\-+]?\\d+)?/, 'number.float'],\n            [/\\d+\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/0[xX][0-9a-fA-F]+/, 'number.hex'],\n            [/0[0-7]+(?!\\d)/, 'number.octal'],\n            [/\\d+/, 'number'],\n            // delimiter: after number because of .\\d floats\n            [/[,.]/, 'delimiter'],\n            // strings:\n            [/\"\"\"/, 'string', '@herestring.\"\"\"'],\n            [/'''/, 'string', \"@herestring.'''\"],\n            [\n                /\"/,\n                {\n                    cases: {\n                        '@eos': 'string',\n                        '@default': { token: 'string', next: '@string.\"' }\n                    }\n                }\n            ],\n            [\n                /'/,\n                {\n                    cases: {\n                        '@eos': 'string',\n                        '@default': { token: 'string', next: \"@string.'\" }\n                    }\n                }\n            ]\n        ],\n        string: [\n            [/[^\"'\\#\\\\]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\./, 'string.escape.invalid'],\n            [/\\./, 'string.escape.invalid'],\n            [\n                /#{/,\n                {\n                    cases: {\n                        '$S2==\"': {\n                            token: 'string',\n                            next: 'root.interpolatedstring'\n                        },\n                        '@default': 'string'\n                    }\n                }\n            ],\n            [\n                /[\"']/,\n                {\n                    cases: {\n                        '$#==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string'\n                    }\n                }\n            ],\n            [/#/, 'string']\n        ],\n        herestring: [\n            [\n                /(\"\"\"|''')/,\n                {\n                    cases: {\n                        '$1==$S2': { token: 'string', next: '@pop' },\n                        '@default': 'string'\n                    }\n                }\n            ],\n            [/[^#\\\\'\"]+/, 'string'],\n            [/['\"]+/, 'string'],\n            [/@escapes/, 'string.escape'],\n            [/\\./, 'string.escape.invalid'],\n            [/#{/, { token: 'string.quote', next: 'root.interpolatedstring' }],\n            [/#/, 'string']\n        ],\n        comment: [\n            [/[^#]+/, 'comment'],\n            [/#/, 'comment']\n        ],\n        hereregexp: [\n            [/[^\\\\\\/#]+/, 'regexp'],\n            [/\\\\./, 'regexp'],\n            [/#.*$/, 'comment'],\n            ['///[igm]*', { token: 'regexp', next: '@pop' }],\n            [/\\//, 'regexp']\n        ]\n    }\n};\n"],"names":["conf","language"],"mappings":"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","x_google_ignoreList":[0]}