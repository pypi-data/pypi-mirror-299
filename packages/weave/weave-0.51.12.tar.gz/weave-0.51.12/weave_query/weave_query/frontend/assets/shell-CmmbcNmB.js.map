{"version":3,"file":"shell-CmmbcNmB.js","sources":["../../node_modules/monaco-editor/esm/vs/basic-languages/shell/shell.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var conf = {\n    comments: {\n        lineComment: '#'\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" },\n        { open: '`', close: '`' }\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: \"'\", close: \"'\" },\n        { open: '`', close: '`' }\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    ignoreCase: true,\n    tokenPostfix: '.shell',\n    brackets: [\n        { token: 'delimiter.bracket', open: '{', close: '}' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\n        { token: 'delimiter.square', open: '[', close: ']' }\n    ],\n    keywords: [\n        'if',\n        'then',\n        'do',\n        'else',\n        'elif',\n        'while',\n        'until',\n        'for',\n        'in',\n        'esac',\n        'fi',\n        'fin',\n        'fil',\n        'done',\n        'exit',\n        'set',\n        'unset',\n        'export',\n        'function'\n    ],\n    builtins: [\n        'ab',\n        'awk',\n        'bash',\n        'beep',\n        'cat',\n        'cc',\n        'cd',\n        'chown',\n        'chmod',\n        'chroot',\n        'clear',\n        'cp',\n        'curl',\n        'cut',\n        'diff',\n        'echo',\n        'find',\n        'gawk',\n        'gcc',\n        'get',\n        'git',\n        'grep',\n        'hg',\n        'kill',\n        'killall',\n        'ln',\n        'ls',\n        'make',\n        'mkdir',\n        'openssl',\n        'mv',\n        'nc',\n        'node',\n        'npm',\n        'ping',\n        'ps',\n        'restart',\n        'rm',\n        'rmdir',\n        'sed',\n        'service',\n        'sh',\n        'shopt',\n        'shred',\n        'source',\n        'sort',\n        'sleep',\n        'ssh',\n        'start',\n        'stop',\n        'su',\n        'sudo',\n        'svn',\n        'tee',\n        'telnet',\n        'top',\n        'touch',\n        'vi',\n        'vim',\n        'wall',\n        'wc',\n        'wget',\n        'who',\n        'write',\n        'yes',\n        'zsh'\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?&|+\\-*\\/\\^;\\.,]+/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        root: [\n            { include: '@whitespace' },\n            [\n                /[a-zA-Z]\\w*/,\n                {\n                    cases: {\n                        '@keywords': 'keyword',\n                        '@builtins': 'type.identifier',\n                        '@default': ''\n                    }\n                }\n            ],\n            { include: '@strings' },\n            { include: '@parameters' },\n            { include: '@heredoc' },\n            [/[{}\\[\\]()]/, '@brackets'],\n            [/-+\\w+/, 'attribute.name'],\n            [/@symbols/, 'delimiter'],\n            { include: '@numbers' },\n            [/[,;]/, 'delimiter']\n        ],\n        whitespace: [\n            [/\\s+/, 'white'],\n            [/(^#!.*$)/, 'metatag'],\n            [/(^#.*$)/, 'comment']\n        ],\n        numbers: [\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\n            [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, 'number.hex'],\n            [/\\d+/, 'number']\n        ],\n        // Recognize strings, including those broken across lines\n        strings: [\n            [/'/, 'string', '@stringBody'],\n            [/\"/, 'string', '@dblStringBody']\n        ],\n        stringBody: [\n            [/'/, 'string', '@popall'],\n            [/./, 'string']\n        ],\n        dblStringBody: [\n            [/\"/, 'string', '@popall'],\n            [/./, 'string']\n        ],\n        heredoc: [\n            [\n                /(<<[-<]?)(\\s*)(['\"`]?)([\\w\\-]+)(['\"`]?)/,\n                [\n                    'constants',\n                    'white',\n                    'string.heredoc.delimiter',\n                    'string.heredoc',\n                    'string.heredoc.delimiter'\n                ]\n            ]\n        ],\n        parameters: [\n            [/\\$\\d+/, 'variable.predefined'],\n            [/\\$\\w+/, 'variable'],\n            [/\\$[*@#?\\-$!0_]/, 'variable'],\n            [/\\$'/, 'variable', '@parameterBodyQuote'],\n            [/\\$\"/, 'variable', '@parameterBodyDoubleQuote'],\n            [/\\$\\(/, 'variable', '@parameterBodyParen'],\n            [/\\$\\{/, 'variable', '@parameterBodyCurlyBrace']\n        ],\n        parameterBodyQuote: [\n            [/[^#:%*@\\-!_']+/, 'variable'],\n            [/[#:%*@\\-!_]/, 'delimiter'],\n            [/[']/, 'variable', '@pop']\n        ],\n        parameterBodyDoubleQuote: [\n            [/[^#:%*@\\-!_\"]+/, 'variable'],\n            [/[#:%*@\\-!_]/, 'delimiter'],\n            [/[\"]/, 'variable', '@pop']\n        ],\n        parameterBodyParen: [\n            [/[^#:%*@\\-!_)]+/, 'variable'],\n            [/[#:%*@\\-!_]/, 'delimiter'],\n            [/[)]/, 'variable', '@pop']\n        ],\n        parameterBodyCurlyBrace: [\n            [/[^#:%*@\\-!_}]+/, 'variable'],\n            [/[#:%*@\\-!_]/, 'delimiter'],\n            [/[}]/, 'variable', '@pop']\n        ]\n    }\n};\n"],"names":["conf","language"],"mappings":"AAIU,IAACA,EAAO,CACd,SAAU,CACN,YAAa,GAChB,EACD,SAAU,CACN,CAAC,IAAK,GAAG,EACT,CAAC,IAAK,GAAG,EACT,CAAC,IAAK,GAAG,CACZ,EACD,iBAAkB,CACd,CAAE,KAAM,IAAK,MAAO,GAAK,EACzB,CAAE,KAAM,IAAK,MAAO,GAAK,EACzB,CAAE,KAAM,IAAK,MAAO,GAAK,EACzB,CAAE,KAAM,IAAK,MAAO,GAAK,EACzB,CAAE,KAAM,IAAK,MAAO,GAAK,EACzB,CAAE,KAAM,IAAK,MAAO,GAAK,CAC5B,EACD,iBAAkB,CACd,CAAE,KAAM,IAAK,MAAO,GAAK,EACzB,CAAE,KAAM,IAAK,MAAO,GAAK,EACzB,CAAE,KAAM,IAAK,MAAO,GAAK,EACzB,CAAE,KAAM,IAAK,MAAO,GAAK,EACzB,CAAE,KAAM,IAAK,MAAO,GAAK,EACzB,CAAE,KAAM,IAAK,MAAO,GAAK,CAC5B,CACL,EACWC,EAAW,CAClB,aAAc,GACd,WAAY,GACZ,aAAc,SACd,SAAU,CACN,CAAE,MAAO,oBAAqB,KAAM,IAAK,MAAO,GAAK,EACrD,CAAE,MAAO,wBAAyB,KAAM,IAAK,MAAO,GAAK,EACzD,CAAE,MAAO,mBAAoB,KAAM,IAAK,MAAO,GAAK,CACvD,EACD,SAAU,CACN,KACA,OACA,KACA,OACA,OACA,QACA,QACA,MACA,KACA,OACA,KACA,MACA,MACA,OACA,OACA,MACA,QACA,SACA,UACH,EACD,SAAU,CACN,KACA,MACA,OACA,OACA,MACA,KACA,KACA,QACA,QACA,SACA,QACA,KACA,OACA,MACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,KACA,OACA,UACA,KACA,KACA,OACA,QACA,UACA,KACA,KACA,OACA,MACA,OACA,KACA,UACA,KACA,QACA,MACA,UACA,KACA,QACA,QACA,SACA,OACA,QACA,MACA,QACA,OACA,KACA,OACA,MACA,MACA,SACA,MACA,QACA,KACA,MACA,OACA,KACA,OACA,MACA,QACA,MACA,KACH,EAED,QAAS,0BAET,UAAW,CACP,KAAM,CACF,CAAE,QAAS,aAAe,EAC1B,CACI,cACA,CACI,MAAO,CACH,YAAa,UACb,YAAa,kBACb,WAAY,EACf,CACJ,CACJ,EACD,CAAE,QAAS,UAAY,EACvB,CAAE,QAAS,aAAe,EAC1B,CAAE,QAAS,UAAY,EACvB,CAAC,aAAc,WAAW,EAC1B,CAAC,QAAS,gBAAgB,EAC1B,CAAC,WAAY,WAAW,EACxB,CAAE,QAAS,UAAY,EACvB,CAAC,OAAQ,WAAW,CACvB,EACD,WAAY,CACR,CAAC,MAAO,OAAO,EACf,CAAC,WAAY,SAAS,EACtB,CAAC,UAAW,SAAS,CACxB,EACD,QAAS,CACL,CAAC,2BAA4B,cAAc,EAC3C,CAAC,gCAAiC,YAAY,EAC9C,CAAC,MAAO,QAAQ,CACnB,EAED,QAAS,CACL,CAAC,IAAK,SAAU,aAAa,EAC7B,CAAC,IAAK,SAAU,gBAAgB,CACnC,EACD,WAAY,CACR,CAAC,IAAK,SAAU,SAAS,EACzB,CAAC,IAAK,QAAQ,CACjB,EACD,cAAe,CACX,CAAC,IAAK,SAAU,SAAS,EACzB,CAAC,IAAK,QAAQ,CACjB,EACD,QAAS,CACL,CACI,0CACA,CACI,YACA,QACA,2BACA,iBACA,0BACH,CACJ,CACJ,EACD,WAAY,CACR,CAAC,QAAS,qBAAqB,EAC/B,CAAC,QAAS,UAAU,EACpB,CAAC,iBAAkB,UAAU,EAC7B,CAAC,MAAO,WAAY,qBAAqB,EACzC,CAAC,MAAO,WAAY,2BAA2B,EAC/C,CAAC,OAAQ,WAAY,qBAAqB,EAC1C,CAAC,OAAQ,WAAY,0BAA0B,CAClD,EACD,mBAAoB,CAChB,CAAC,iBAAkB,UAAU,EAC7B,CAAC,cAAe,WAAW,EAC3B,CAAC,MAAO,WAAY,MAAM,CAC7B,EACD,yBAA0B,CACtB,CAAC,iBAAkB,UAAU,EAC7B,CAAC,cAAe,WAAW,EAC3B,CAAC,MAAO,WAAY,MAAM,CAC7B,EACD,mBAAoB,CAChB,CAAC,iBAAkB,UAAU,EAC7B,CAAC,cAAe,WAAW,EAC3B,CAAC,MAAO,WAAY,MAAM,CAC7B,EACD,wBAAyB,CACrB,CAAC,iBAAkB,UAAU,EAC7B,CAAC,cAAe,WAAW,EAC3B,CAAC,MAAO,WAAY,MAAM,CAC7B,CACJ,CACL","x_google_ignoreList":[0]}