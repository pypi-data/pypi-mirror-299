import{a as er}from"./index-B3IlW4fU.js";function tr(N,z){for(var b=0;b<z.length;b++){const O=z[b];if(typeof O!="string"&&!Array.isArray(O)){for(const S in O)if(S!=="default"&&!(S in N)){const C=Object.getOwnPropertyDescriptor(O,S);C&&Object.defineProperty(N,S,C.get?C:{enumerable:!0,get:()=>O[S]})}}}return Object.freeze(Object.defineProperty(N,Symbol.toStringTag,{value:"Module"}))}var X={exports:{}};(function(N){var z=function(){function b(n){var a=I(n.length);return H(n,q(P(a,n),1/n.length))}function O(n){var a=P(T(n),n);return a}function S(n,a){var o;return a?o=q(n,1/(n.length-1)):o=q(n,1/n.length),o}function C(n){var a=rr(n);console.log(a);var o=a.U,u=a.S,i=u.map(function(c,r){var e={};return e.eigenvalue=c,e.vector=o.map(function(t,g){return-1*t[r]}),e});return i}function $(n,...a){var o=a.map(function(t){return t.vector}),u=b(n),i=P(o,T(u)),c=I(n.length),r=q(P(c,n),-1/n.length),e=G(i,2);return{adjustedData:i,formattedAdjustedData:e,avgData:r,selectedVectors:o}}function Z(n,a,o){var u=T(P(T(a),n)),i=H(u,o),c=G(i,2);return{originalData:i,formattedOriginalData:c}}function j(n,...a){var o=n.map(function(i){return i.eigenvalue}).reduce(function(i,c){return i+c}),u=a.map(function(i){return i.eigenvalue}).reduce(function(i,c){return i+c});return u/o}function F(n){return C(S(O(b(n)),!1))}function k(n){var a=F(n),o=a.sort(function(i,c){return c.eigenvalue-i.eigenvalue});console.log("Sorted Vectors",o);var u=o[0].vector;return $(n,u)}function G(n,a){var o=Math.pow(10,a||2);return n.map(function(u,i){return u.map(function(c){return Math.round(c*o)/o})})}function P(n,a){if(!n[0]||!a[0]||!n.length||!a.length)throw new Error("Both A and B should be matrices");if(a.length!==n[0].length)throw new Error("Columns in A should be the same as the number of rows in B");for(var o=[],u=0;u<n.length;u++){o[u]=[];for(var i=0;i<a[0].length;i++)for(var c=0;c<n[0].length;c++)o[u][i]=o[u][i]?o[u][i]+n[u][c]*a[c][i]:n[u][c]*a[c][i]}return o}function H(n,a){if(!(n.length===a.length&&n[0].length===a[0].length))throw new Error("Both A and B should have the same dimensions");for(var o=[],u=0;u<n.length;u++){o[u]=[];for(var i=0;i<a[0].length;i++)o[u][i]=n[u][i]-a[u][i]}return o}function q(n,a){for(var o=[],u=0;u<n.length;u++){o[u]=[];for(var i=0;i<n[0].length;i++)o[u][i]=n[u][i]*a}return o}function I(n){for(var a=[],o=0;o<n;o++){a[o]=[];for(var u=0;u<n;u++)a[o][u]=1}return a}function T(n){var a=R(n);return a[0].map(function(o,u){return n.map(function(i){return i[u]})})}function R(n){var a=JSON.stringify(n),o=JSON.parse(a);return o}function rr(n){var a,o=Math.pow(2,-52),u=1e-64/o,i=50,c=0,r=0,e=0,t=0,g=0,f=R(n),V=f.length,m=f[0].length;if(V<m)throw"Need more rows than columns";var w=new Array(m),d=new Array(m);for(r=0;r<m;r++)w[r]=d[r]=0;var M=K([m,m],0);function J(E,A){return E=Math.abs(E),A=Math.abs(A),E>A?E*Math.sqrt(1+A*A/E/E):A==0?E:A*Math.sqrt(1+E*E/A/A)}function K(E,A,_){typeof _>"u"&&(_=0);var W=E[_],B=Array(W),x;if(_===E.length-1){for(x=W-2;x>=0;x-=2)B[x+1]=A,B[x]=A;return x===-1&&(B[0]=A),B}for(x=W-1;x>=0;x--)B[x]=K(E,A,_+1);return B}var v=0,s=0,h=0,y=0,D=0,p=0,l=0;for(r=0;r<m;r++){for(w[r]=s,l=0,g=r+1,e=r;e<V;e++)l+=f[e][r]*f[e][r];if(l<=u)s=0;else for(v=f[r][r],s=Math.sqrt(l),v>=0&&(s=-s),h=v*s-l,f[r][r]=v-s,e=g;e<m;e++){for(l=0,t=r;t<V;t++)l+=f[t][r]*f[t][e];for(v=l/h,t=r;t<V;t++)f[t][e]+=v*f[t][r]}for(d[r]=s,l=0,e=g;e<m;e++)l=l+f[r][e]*f[r][e];if(l<=u)s=0;else{for(v=f[r][r+1],s=Math.sqrt(l),v>=0&&(s=-s),h=v*s-l,f[r][r+1]=v-s,e=g;e<m;e++)w[e]=f[r][e]/h;for(e=g;e<V;e++){for(l=0,t=g;t<m;t++)l+=f[e][t]*f[r][t];for(t=g;t<m;t++)f[e][t]+=l*w[t]}}D=Math.abs(d[r])+Math.abs(w[r]),D>y&&(y=D)}for(r=m-1;r!=-1;r+=-1){if(s!=0){for(h=s*f[r][r+1],e=g;e<m;e++)M[e][r]=f[r][e]/h;for(e=g;e<m;e++){for(l=0,t=g;t<m;t++)l+=f[r][t]*M[t][e];for(t=g;t<m;t++)M[t][e]+=l*M[t][r]}}for(e=g;e<m;e++)M[r][e]=0,M[e][r]=0;M[r][r]=1,s=w[r],g=r}for(r=m-1;r!=-1;r+=-1){for(g=r+1,s=d[r],e=g;e<m;e++)f[r][e]=0;if(s!=0){for(h=f[r][r]*s,e=g;e<m;e++){for(l=0,t=g;t<V;t++)l+=f[t][r]*f[t][e];for(v=l/h,t=r;t<V;t++)f[t][e]+=v*f[t][r]}for(e=r;e<V;e++)f[e][r]=f[e][r]/s}else for(e=r;e<V;e++)f[e][r]=0;f[r][r]+=1}for(o=o*y,t=m-1;t!=-1;t+=-1)for(var U=0;U<i;U++){var L=!1;for(g=t;g!=-1;g+=-1){if(Math.abs(w[g])<=o){L=!0;break}if(Math.abs(d[g-1])<=o)break}if(!L){c=0,l=1;var Q=g-1;for(r=g;r<t+1&&(v=l*w[r],w[r]=c*w[r],!(Math.abs(v)<=o));r++)for(s=d[r],h=J(v,s),d[r]=h,c=s/h,l=-v/h,e=0;e<V;e++)D=f[e][Q],p=f[e][r],f[e][Q]=D*c+p*l,f[e][r]=-D*l+p*c}if(p=d[t],g==t){if(p<0)for(d[t]=-p,e=0;e<m;e++)M[e][t]=-M[e][t];break}if(U>=i-1)throw"Error: no convergence.";for(y=d[g],D=d[t-1],s=w[t-1],h=w[t],v=((D-p)*(D+p)+(s-h)*(s+h))/(2*h*D),s=J(v,1),v<0?v=((y-p)*(y+p)+h*(D/(v-s)-h))/y:v=((y-p)*(y+p)+h*(D/(v+s)-h))/y,c=1,l=1,r=g+1;r<t+1;r++){for(s=w[r],D=d[r],h=l*s,s=c*s,p=J(v,h),w[r-1]=p,c=v/p,l=h/p,v=y*c+s*l,s=-y*l+s*c,h=D*l,D=D*c,e=0;e<m;e++)y=M[e][r-1],p=M[e][r],M[e][r-1]=y*c+p*l,M[e][r]=-y*l+p*c;for(p=J(v,h),d[r-1]=p,c=v/p,l=h/p,v=c*s+l*D,y=-l*s+c*D,e=0;e<V;e++)D=f[e][r-1],p=f[e][r],f[e][r-1]=D*c+p*l,f[e][r]=-D*l+p*c}w[g]=0,w[t]=v,d[t]=y}for(r=0;r<d.length;r++)d[r]<o&&(d[r]=0);for(r=0;r<m;r++)for(e=r-1;e>=0;e--)if(d[e]<d[r]){for(c=d[e],d[e]=d[r],d[r]=c,t=0;t<f.length;t++)a=f[t][r],f[t][r]=f[t][e],f[t][e]=a;for(t=0;t<M.length;t++)a=M[t][r],M[t][r]=M[t][e],M[t][e]=a;r=e}return{U:f,S:d,V:M}}return{computeDeviationScores:O,computeDeviationMatrix:b,computeSVD:C,computePercentageExplained:j,computeOriginalData:Z,computeVarianceCovariance:S,computeAdjustedData:$,getEigenVectors:F,analyseTopResult:k,transpose:T,multiply:P,clone:R,scale:q}}();N.exports=z})(X);var Y=X.exports;const nr=er(Y),ar=tr({__proto__:null,default:nr},[Y]);export{ar as p};
//# sourceMappingURL=pca-C6P6MZmw.js.map
