"use strict";
(self["webpackChunknearbeach"] = self["webpackChunknearbeach"] || []).push([["vendors-node_modules_naive-ui_es_input-number_src_InputNumber_mjs"],{

/***/ "./node_modules/naive-ui/es/_internal/icons/Add.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/naive-ui/es/_internal/icons/Add.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ "./node_modules/vue/dist/vue.runtime.esm-bundler.js");

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,vue__WEBPACK_IMPORTED_MODULE_0__.defineComponent)({
  name: 'Add',
  render() {
    return (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("svg", {
      width: "512",
      height: "512",
      viewBox: "0 0 512 512",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg"
    }, (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("path", {
      d: "M256 112V400M400 256H112",
      stroke: "currentColor",
      "stroke-width": "32",
      "stroke-linecap": "round",
      "stroke-linejoin": "round"
    }));
  }
}));

/***/ }),

/***/ "./node_modules/naive-ui/es/_internal/icons/Remove.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/naive-ui/es/_internal/icons/Remove.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ "./node_modules/vue/dist/vue.runtime.esm-bundler.js");

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,vue__WEBPACK_IMPORTED_MODULE_0__.defineComponent)({
  name: 'Remove',
  render() {
    return (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 512 512"
    }, (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("line", {
      x1: "400",
      y1: "256",
      x2: "112",
      y2: "256",
      style: "\n        fill: none;\n        stroke: currentColor;\n        stroke-linecap: round;\n        stroke-linejoin: round;\n        stroke-width: 32px;\n      "
    }));
  }
}));

/***/ }),

/***/ "./node_modules/naive-ui/es/input-number/src/InputNumber.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/naive-ui/es/input-number/src/InputNumber.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   inputNumberProps: () => (/* binding */ inputNumberProps)
/* harmony export */ });
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ "./node_modules/vue/dist/vue.runtime.esm-bundler.js");
/* harmony import */ var seemly__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! seemly */ "./node_modules/seemly/es/color/index.js");
/* harmony import */ var vooks__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! vooks */ "./node_modules/vooks/es/use-merged-state.js");
/* harmony import */ var vooks__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! vooks */ "./node_modules/vooks/es/use-memo.js");
/* harmony import */ var evtd__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! evtd */ "./node_modules/evtd/es/delegate.js");
/* harmony import */ var _internal_icons_index_mjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../_internal/icons/index.mjs */ "./node_modules/naive-ui/es/_internal/icons/Remove.mjs");
/* harmony import */ var _internal_icons_index_mjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../_internal/icons/index.mjs */ "./node_modules/naive-ui/es/_internal/icons/Add.mjs");
/* harmony import */ var _input_index_mjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../input/index.mjs */ "./node_modules/naive-ui/es/input/src/Input.mjs");
/* harmony import */ var _internal_index_mjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../_internal/index.mjs */ "./node_modules/naive-ui/es/_internal/icon/src/Icon.mjs");
/* harmony import */ var _button_index_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../button/index.mjs */ "./node_modules/naive-ui/es/button/src/Button.mjs");
/* harmony import */ var _mixins_index_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../_mixins/index.mjs */ "./node_modules/naive-ui/es/_mixins/use-theme.mjs");
/* harmony import */ var _mixins_index_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../_mixins/index.mjs */ "./node_modules/naive-ui/es/_mixins/use-config.mjs");
/* harmony import */ var _mixins_index_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../_mixins/index.mjs */ "./node_modules/naive-ui/es/_mixins/use-locale.mjs");
/* harmony import */ var _mixins_index_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../_mixins/index.mjs */ "./node_modules/naive-ui/es/_mixins/use-form-item.mjs");
/* harmony import */ var _utils_index_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../_utils/index.mjs */ "./node_modules/naive-ui/es/_utils/naive/warn.mjs");
/* harmony import */ var _utils_index_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../_utils/index.mjs */ "./node_modules/naive-ui/es/_utils/vue/call.mjs");
/* harmony import */ var _utils_index_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../_utils/index.mjs */ "./node_modules/naive-ui/es/_utils/vue/resolve-slot.mjs");
/* harmony import */ var _styles_index_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../styles/index.mjs */ "./node_modules/naive-ui/es/input-number/styles/light.mjs");
/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils.mjs */ "./node_modules/naive-ui/es/input-number/src/utils.mjs");
/* harmony import */ var _styles_input_number_cssr_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./styles/input-number.cssr.mjs */ "./node_modules/naive-ui/es/input-number/src/styles/input-number.cssr.mjs");
/* harmony import */ var _mixins_use_rtl_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../_mixins/use-rtl.mjs */ "./node_modules/naive-ui/es/_mixins/use-rtl.mjs");














const HOLDING_CHANGE_THRESHOLD = 800;
const HOLDING_CHANGE_INTERVAL = 100;
const inputNumberProps = Object.assign(Object.assign({}, _mixins_index_mjs__WEBPACK_IMPORTED_MODULE_1__["default"].props), {
  autofocus: Boolean,
  loading: {
    type: Boolean,
    default: undefined
  },
  placeholder: String,
  defaultValue: {
    type: Number,
    default: null
  },
  value: Number,
  step: {
    type: [Number, String],
    default: 1
  },
  min: [Number, String],
  max: [Number, String],
  size: String,
  disabled: {
    type: Boolean,
    default: undefined
  },
  validator: Function,
  bordered: {
    type: Boolean,
    default: undefined
  },
  showButton: {
    type: Boolean,
    default: true
  },
  buttonPlacement: {
    type: String,
    default: 'right'
  },
  inputProps: Object,
  readonly: Boolean,
  clearable: Boolean,
  keyboard: {
    type: Object,
    default: {}
  },
  updateValueOnInput: {
    type: Boolean,
    default: true
  },
  parse: Function,
  format: Function,
  precision: Number,
  status: String,
  'onUpdate:value': [Function, Array],
  onUpdateValue: [Function, Array],
  onFocus: [Function, Array],
  onBlur: [Function, Array],
  onClear: [Function, Array],
  // deprecated
  onChange: [Function, Array]
});
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,vue__WEBPACK_IMPORTED_MODULE_0__.defineComponent)({
  name: 'InputNumber',
  props: inputNumberProps,
  setup(props) {
    if (true) {
      (0,vue__WEBPACK_IMPORTED_MODULE_0__.watchEffect)(() => {
        if (props.onChange !== undefined) {
          (0,_utils_index_mjs__WEBPACK_IMPORTED_MODULE_2__.warnOnce)('input-number', '`on-change` is deprecated, please use `on-update:value` instead');
        }
      });
    }
    const {
      mergedBorderedRef,
      mergedClsPrefixRef,
      mergedRtlRef
    } = (0,_mixins_index_mjs__WEBPACK_IMPORTED_MODULE_3__["default"])(props);
    const themeRef = (0,_mixins_index_mjs__WEBPACK_IMPORTED_MODULE_1__["default"])('InputNumber', '-input-number', _styles_input_number_cssr_mjs__WEBPACK_IMPORTED_MODULE_4__["default"], _styles_index_mjs__WEBPACK_IMPORTED_MODULE_5__["default"], props, mergedClsPrefixRef);
    const {
      localeRef
    } = (0,_mixins_index_mjs__WEBPACK_IMPORTED_MODULE_6__["default"])('InputNumber');
    const formItem = (0,_mixins_index_mjs__WEBPACK_IMPORTED_MODULE_7__["default"])(props);
    const {
      mergedSizeRef,
      mergedDisabledRef,
      mergedStatusRef
    } = formItem;
    // dom ref
    const inputInstRef = (0,vue__WEBPACK_IMPORTED_MODULE_0__.ref)(null);
    const minusButtonInstRef = (0,vue__WEBPACK_IMPORTED_MODULE_0__.ref)(null);
    const addButtonInstRef = (0,vue__WEBPACK_IMPORTED_MODULE_0__.ref)(null);
    // value
    const uncontrolledValueRef = (0,vue__WEBPACK_IMPORTED_MODULE_0__.ref)(props.defaultValue);
    const controlledValueRef = (0,vue__WEBPACK_IMPORTED_MODULE_0__.toRef)(props, 'value');
    const mergedValueRef = (0,vooks__WEBPACK_IMPORTED_MODULE_8__["default"])(controlledValueRef, uncontrolledValueRef);
    const displayedValueRef = (0,vue__WEBPACK_IMPORTED_MODULE_0__.ref)('');
    const getPrecision = value => {
      const fraction = String(value).split('.')[1];
      return fraction ? fraction.length : 0;
    };
    const getMaxPrecision = currentValue => {
      const precisions = [props.min, props.max, props.step, currentValue].map(value => {
        if (value === undefined) return 0;
        return getPrecision(value);
      });
      return Math.max(...precisions);
    };
    const mergedPlaceholderRef = (0,vooks__WEBPACK_IMPORTED_MODULE_9__["default"])(() => {
      const {
        placeholder
      } = props;
      if (placeholder !== undefined) return placeholder;
      return localeRef.value.placeholder;
    });
    const mergedStepRef = (0,vooks__WEBPACK_IMPORTED_MODULE_9__["default"])(() => {
      const parsedNumber = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_10__.parseNumber)(props.step);
      if (parsedNumber !== null) {
        return parsedNumber === 0 ? 1 : Math.abs(parsedNumber);
      }
      return 1;
    });
    const mergedMinRef = (0,vooks__WEBPACK_IMPORTED_MODULE_9__["default"])(() => {
      const parsedNumber = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_10__.parseNumber)(props.min);
      if (parsedNumber !== null) return parsedNumber;else return null;
    });
    const mergedMaxRef = (0,vooks__WEBPACK_IMPORTED_MODULE_9__["default"])(() => {
      const parsedNumber = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_10__.parseNumber)(props.max);
      if (parsedNumber !== null) return parsedNumber;else return null;
    });
    const doUpdateValue = value => {
      const {
        value: mergedValue
      } = mergedValueRef;
      if (value === mergedValue) {
        deriveDisplayedValueFromValue();
        return;
      }
      const {
        'onUpdate:value': _onUpdateValue,
        onUpdateValue,
        onChange
      } = props;
      const {
        nTriggerFormInput,
        nTriggerFormChange
      } = formItem;
      if (onChange) (0,_utils_index_mjs__WEBPACK_IMPORTED_MODULE_11__.call)(onChange, value);
      if (onUpdateValue) (0,_utils_index_mjs__WEBPACK_IMPORTED_MODULE_11__.call)(onUpdateValue, value);
      if (_onUpdateValue) (0,_utils_index_mjs__WEBPACK_IMPORTED_MODULE_11__.call)(_onUpdateValue, value);
      uncontrolledValueRef.value = value;
      nTriggerFormInput();
      nTriggerFormChange();
    };
    const deriveValueFromDisplayedValue = ({
      offset,
      doUpdateIfValid,
      fixPrecision,
      isInputing
    }) => {
      const {
        value: displayedValue
      } = displayedValueRef;
      if (isInputing && (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_10__.isWipValue)(displayedValue)) {
        return false;
      }
      const parsedValue = (props.parse || _utils_mjs__WEBPACK_IMPORTED_MODULE_10__.parse)(displayedValue);
      if (parsedValue === null) {
        if (doUpdateIfValid) doUpdateValue(null);
        return null;
      }
      if ((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_10__.validator)(parsedValue)) {
        const currentPrecision = getPrecision(parsedValue);
        const {
          precision
        } = props;
        if (precision !== undefined && precision < currentPrecision && !fixPrecision) {
          return false;
        }
        let nextValue = parseFloat((parsedValue + offset).toFixed(precision !== null && precision !== void 0 ? precision : getMaxPrecision(parsedValue)));
        if ((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_10__.validator)(nextValue)) {
          const {
            value: mergedMax
          } = mergedMaxRef;
          const {
            value: mergedMin
          } = mergedMinRef;
          if (mergedMax !== null && nextValue > mergedMax) {
            if (!doUpdateIfValid || isInputing) return false;
            // if doUpdateIfValid=true, we try to make it a valid value
            nextValue = mergedMax;
          }
          if (mergedMin !== null && nextValue < mergedMin) {
            if (!doUpdateIfValid || isInputing) return false;
            // if doUpdateIfValid=true, we try to make it a valid value
            nextValue = mergedMin;
          }
          if (props.validator && !props.validator(nextValue)) return false;
          if (doUpdateIfValid) doUpdateValue(nextValue);
          return nextValue;
        }
      }
      return false;
    };
    const deriveDisplayedValueFromValue = () => {
      const {
        value: mergedValue
      } = mergedValueRef;
      if ((0,_utils_mjs__WEBPACK_IMPORTED_MODULE_10__.validator)(mergedValue)) {
        const {
          format: formatProp,
          precision
        } = props;
        if (formatProp) {
          displayedValueRef.value = formatProp(mergedValue);
        } else {
          if (mergedValue === null || precision === undefined ||
          // precision overflow
          getPrecision(mergedValue) > precision) {
            displayedValueRef.value = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_10__.format)(mergedValue, undefined);
          } else {
            displayedValueRef.value = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_10__.format)(mergedValue, precision);
          }
        }
      } else {
        // null can pass the validator check
        // so mergedValue is a number
        displayedValueRef.value = String(mergedValue);
      }
    };
    deriveDisplayedValueFromValue();
    const displayedValueInvalidRef = (0,vooks__WEBPACK_IMPORTED_MODULE_9__["default"])(() => {
      const derivedValue = deriveValueFromDisplayedValue({
        offset: 0,
        doUpdateIfValid: false,
        isInputing: false,
        fixPrecision: false
      });
      return derivedValue === false;
    });
    const minusableRef = (0,vooks__WEBPACK_IMPORTED_MODULE_9__["default"])(() => {
      const {
        value: mergedValue
      } = mergedValueRef;
      if (props.validator && mergedValue === null) {
        return false;
      }
      const {
        value: mergedStep
      } = mergedStepRef;
      const derivedNextValue = deriveValueFromDisplayedValue({
        offset: -mergedStep,
        doUpdateIfValid: false,
        isInputing: false,
        fixPrecision: false
      });
      return derivedNextValue !== false;
    });
    const addableRef = (0,vooks__WEBPACK_IMPORTED_MODULE_9__["default"])(() => {
      const {
        value: mergedValue
      } = mergedValueRef;
      if (props.validator && mergedValue === null) {
        return false;
      }
      const {
        value: mergedStep
      } = mergedStepRef;
      const derivedNextValue = deriveValueFromDisplayedValue({
        offset: +mergedStep,
        doUpdateIfValid: false,
        isInputing: false,
        fixPrecision: false
      });
      return derivedNextValue !== false;
    });
    function doFocus(e) {
      const {
        onFocus
      } = props;
      const {
        nTriggerFormFocus
      } = formItem;
      if (onFocus) (0,_utils_index_mjs__WEBPACK_IMPORTED_MODULE_11__.call)(onFocus, e);
      nTriggerFormFocus();
    }
    function doBlur(e) {
      var _a, _b;
      if (e.target === ((_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.wrapperElRef)) {
        // hit input wrapper
        // which means not activated
        return;
      }
      const value = deriveValueFromDisplayedValue({
        offset: 0,
        doUpdateIfValid: true,
        isInputing: false,
        fixPrecision: true
      });
      // If valid, update event has been emitted
      // make sure e.target.value is correct in blur callback
      if (value !== false) {
        const inputElRef = (_b = inputInstRef.value) === null || _b === void 0 ? void 0 : _b.inputElRef;
        if (inputElRef) {
          inputElRef.value = String(value || '');
        }
        // If value is not changed, the displayed value may be greater than or
        // less than the current value. The derived value is reformatted so the
        // value is not changed. We can simply derive a new displayed value
        if (mergedValueRef.value === value) {
          deriveDisplayedValueFromValue();
        }
      } else {
        // If not valid, nothing will be emitted, so derive displayed value from
        // origin value
        deriveDisplayedValueFromValue();
      }
      const {
        onBlur
      } = props;
      const {
        nTriggerFormBlur
      } = formItem;
      if (onBlur) (0,_utils_index_mjs__WEBPACK_IMPORTED_MODULE_11__.call)(onBlur, e);
      nTriggerFormBlur();
      // User may change value in blur callback, we make sure it will be
      // displayed. Sometimes mergedValue won't be viewed as changed
      void (0,vue__WEBPACK_IMPORTED_MODULE_0__.nextTick)(() => {
        deriveDisplayedValueFromValue();
      });
    }
    function doClear(e) {
      const {
        onClear
      } = props;
      if (onClear) (0,_utils_index_mjs__WEBPACK_IMPORTED_MODULE_11__.call)(onClear, e);
    }
    function doAdd() {
      const {
        value: addable
      } = addableRef;
      if (!addable) {
        clearAddHoldTimeout();
        return;
      }
      const {
        value: mergedValue
      } = mergedValueRef;
      if (mergedValue === null) {
        if (!props.validator) {
          doUpdateValue(createValidValue());
        }
      } else {
        const {
          value: mergedStep
        } = mergedStepRef;
        deriveValueFromDisplayedValue({
          offset: mergedStep,
          doUpdateIfValid: true,
          isInputing: false,
          fixPrecision: true
        });
      }
    }
    function doMinus() {
      const {
        value: minusable
      } = minusableRef;
      if (!minusable) {
        clearMinusHoldTimeout();
        return;
      }
      const {
        value: mergedValue
      } = mergedValueRef;
      if (mergedValue === null) {
        if (!props.validator) {
          doUpdateValue(createValidValue());
        }
      } else {
        const {
          value: mergedStep
        } = mergedStepRef;
        deriveValueFromDisplayedValue({
          offset: -mergedStep,
          doUpdateIfValid: true,
          isInputing: false,
          fixPrecision: true
        });
      }
    }
    const handleFocus = doFocus;
    const handleBlur = doBlur;
    function createValidValue() {
      if (props.validator) return null;
      const {
        value: mergedMin
      } = mergedMinRef;
      const {
        value: mergedMax
      } = mergedMaxRef;
      if (mergedMin !== null) {
        return Math.max(0, mergedMin);
      } else if (mergedMax !== null) {
        return Math.min(0, mergedMax);
      } else {
        return 0;
      }
    }
    function handleClear(e) {
      doClear(e);
      doUpdateValue(null);
    }
    function handleMouseDown(e) {
      var _a, _b, _c;
      if ((_a = addButtonInstRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(e.target)) {
        e.preventDefault();
      }
      if ((_b = minusButtonInstRef.value) === null || _b === void 0 ? void 0 : _b.$el.contains(e.target)) {
        e.preventDefault();
      }
      (_c = inputInstRef.value) === null || _c === void 0 ? void 0 : _c.activate();
    }
    let minusHoldStateIntervalId = null;
    let addHoldStateIntervalId = null;
    let firstMinusMousedownId = null;
    function clearMinusHoldTimeout() {
      if (firstMinusMousedownId) {
        window.clearTimeout(firstMinusMousedownId);
        firstMinusMousedownId = null;
      }
      if (minusHoldStateIntervalId) {
        window.clearInterval(minusHoldStateIntervalId);
        minusHoldStateIntervalId = null;
      }
    }
    function clearAddHoldTimeout() {
      if (firstAddMousedownId) {
        window.clearTimeout(firstAddMousedownId);
        firstAddMousedownId = null;
      }
      if (addHoldStateIntervalId) {
        window.clearInterval(addHoldStateIntervalId);
        addHoldStateIntervalId = null;
      }
    }
    function handleMinusMousedown() {
      clearMinusHoldTimeout();
      firstMinusMousedownId = window.setTimeout(() => {
        minusHoldStateIntervalId = window.setInterval(() => {
          doMinus();
        }, HOLDING_CHANGE_INTERVAL);
      }, HOLDING_CHANGE_THRESHOLD);
      (0,evtd__WEBPACK_IMPORTED_MODULE_12__.on)('mouseup', document, clearMinusHoldTimeout, {
        once: true
      });
    }
    let firstAddMousedownId = null;
    function handleAddMousedown() {
      clearAddHoldTimeout();
      firstAddMousedownId = window.setTimeout(() => {
        addHoldStateIntervalId = window.setInterval(() => {
          doAdd();
        }, HOLDING_CHANGE_INTERVAL);
      }, HOLDING_CHANGE_THRESHOLD);
      (0,evtd__WEBPACK_IMPORTED_MODULE_12__.on)('mouseup', document, clearAddHoldTimeout, {
        once: true
      });
    }
    const handleAddClick = () => {
      if (addHoldStateIntervalId) return;
      doAdd();
    };
    const handleMinusClick = () => {
      if (minusHoldStateIntervalId) return;
      doMinus();
    };
    function handleKeyDown(e) {
      var _a, _b;
      if (e.key === 'Enter') {
        if (e.target === ((_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.wrapperElRef)) {
          // hit input wrapper
          // which means not activated
          return;
        }
        const value = deriveValueFromDisplayedValue({
          offset: 0,
          doUpdateIfValid: true,
          isInputing: false,
          fixPrecision: true
        });
        if (value !== false) {
          (_b = inputInstRef.value) === null || _b === void 0 ? void 0 : _b.deactivate();
        }
      } else if (e.key === 'ArrowUp') {
        if (!addableRef.value) return;
        if (props.keyboard.ArrowUp === false) return;
        e.preventDefault();
        const value = deriveValueFromDisplayedValue({
          offset: 0,
          doUpdateIfValid: true,
          isInputing: false,
          fixPrecision: true
        });
        if (value !== false) {
          doAdd();
        }
      } else if (e.key === 'ArrowDown') {
        if (!minusableRef.value) return;
        if (props.keyboard.ArrowDown === false) return;
        e.preventDefault();
        const value = deriveValueFromDisplayedValue({
          offset: 0,
          doUpdateIfValid: true,
          isInputing: false,
          fixPrecision: true
        });
        if (value !== false) {
          doMinus();
        }
      }
    }
    function handleUpdateDisplayedValue(value) {
      displayedValueRef.value = value;
      if (props.updateValueOnInput && !props.format && !props.parse && props.precision === undefined) {
        deriveValueFromDisplayedValue({
          offset: 0,
          doUpdateIfValid: true,
          isInputing: true,
          fixPrecision: false
        });
      }
    }
    (0,vue__WEBPACK_IMPORTED_MODULE_0__.watch)(mergedValueRef, () => {
      deriveDisplayedValueFromValue();
    });
    const exposedMethods = {
      focus: () => {
        var _a;
        return (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.focus();
      },
      blur: () => {
        var _a;
        return (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.blur();
      },
      select: () => {
        var _a;
        return (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.select();
      }
    };
    const rtlEnabledRef = (0,_mixins_use_rtl_mjs__WEBPACK_IMPORTED_MODULE_13__.useRtl)('InputNumber', mergedRtlRef, mergedClsPrefixRef);
    return Object.assign(Object.assign({}, exposedMethods), {
      rtlEnabled: rtlEnabledRef,
      inputInstRef,
      minusButtonInstRef,
      addButtonInstRef,
      mergedClsPrefix: mergedClsPrefixRef,
      mergedBordered: mergedBorderedRef,
      uncontrolledValue: uncontrolledValueRef,
      mergedValue: mergedValueRef,
      mergedPlaceholder: mergedPlaceholderRef,
      displayedValueInvalid: displayedValueInvalidRef,
      mergedSize: mergedSizeRef,
      mergedDisabled: mergedDisabledRef,
      displayedValue: displayedValueRef,
      addable: addableRef,
      minusable: minusableRef,
      mergedStatus: mergedStatusRef,
      handleFocus,
      handleBlur,
      handleClear,
      handleMouseDown,
      handleAddClick,
      handleMinusClick,
      handleAddMousedown,
      handleMinusMousedown,
      handleKeyDown,
      handleUpdateDisplayedValue,
      // theme
      mergedTheme: themeRef,
      inputThemeOverrides: {
        paddingSmall: '0 8px 0 10px',
        paddingMedium: '0 8px 0 12px',
        paddingLarge: '0 8px 0 14px'
      },
      buttonThemeOverrides: (0,vue__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {
        const {
          self: {
            iconColorDisabled
          }
        } = themeRef.value;
        const [r, g, b, a] = (0,seemly__WEBPACK_IMPORTED_MODULE_14__.rgba)(iconColorDisabled);
        return {
          textColorTextDisabled: `rgb(${r}, ${g}, ${b})`,
          opacityDisabled: `${a}`
        };
      })
    });
  },
  render() {
    const {
      mergedClsPrefix,
      $slots
    } = this;
    const renderMinusButton = () => {
      return (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)(_button_index_mjs__WEBPACK_IMPORTED_MODULE_15__.XButton, {
        text: true,
        disabled: !this.minusable || this.mergedDisabled || this.readonly,
        focusable: false,
        theme: this.mergedTheme.peers.Button,
        themeOverrides: this.mergedTheme.peerOverrides.Button,
        builtinThemeOverrides: this.buttonThemeOverrides,
        onClick: this.handleMinusClick,
        onMousedown: this.handleMinusMousedown,
        ref: "minusButtonInstRef"
      }, {
        icon: () => (0,_utils_index_mjs__WEBPACK_IMPORTED_MODULE_16__.resolveSlot)($slots['minus-icon'], () => [(0,vue__WEBPACK_IMPORTED_MODULE_0__.h)(_internal_index_mjs__WEBPACK_IMPORTED_MODULE_17__["default"], {
          clsPrefix: mergedClsPrefix
        }, {
          default: () => (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)(_internal_icons_index_mjs__WEBPACK_IMPORTED_MODULE_18__["default"], null)
        })])
      });
    };
    const renderAddButton = () => {
      return (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)(_button_index_mjs__WEBPACK_IMPORTED_MODULE_15__.XButton, {
        text: true,
        disabled: !this.addable || this.mergedDisabled || this.readonly,
        focusable: false,
        theme: this.mergedTheme.peers.Button,
        themeOverrides: this.mergedTheme.peerOverrides.Button,
        builtinThemeOverrides: this.buttonThemeOverrides,
        onClick: this.handleAddClick,
        onMousedown: this.handleAddMousedown,
        ref: "addButtonInstRef"
      }, {
        icon: () => (0,_utils_index_mjs__WEBPACK_IMPORTED_MODULE_16__.resolveSlot)($slots['add-icon'], () => [(0,vue__WEBPACK_IMPORTED_MODULE_0__.h)(_internal_index_mjs__WEBPACK_IMPORTED_MODULE_17__["default"], {
          clsPrefix: mergedClsPrefix
        }, {
          default: () => (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)(_internal_icons_index_mjs__WEBPACK_IMPORTED_MODULE_19__["default"], null)
        })])
      });
    };
    return (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("div", {
      class: [`${mergedClsPrefix}-input-number`, this.rtlEnabled && `${mergedClsPrefix}-input-number--rtl`]
    }, (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)(_input_index_mjs__WEBPACK_IMPORTED_MODULE_20__["default"], {
      ref: "inputInstRef",
      autofocus: this.autofocus,
      status: this.mergedStatus,
      bordered: this.mergedBordered,
      loading: this.loading,
      value: this.displayedValue,
      onUpdateValue: this.handleUpdateDisplayedValue,
      theme: this.mergedTheme.peers.Input,
      themeOverrides: this.mergedTheme.peerOverrides.Input,
      builtinThemeOverrides: this.inputThemeOverrides,
      size: this.mergedSize,
      placeholder: this.mergedPlaceholder,
      disabled: this.mergedDisabled,
      readonly: this.readonly,
      textDecoration: this.displayedValueInvalid ? 'line-through' : undefined,
      onFocus: this.handleFocus,
      onBlur: this.handleBlur,
      onKeydown: this.handleKeyDown,
      onMousedown: this.handleMouseDown,
      onClear: this.handleClear,
      clearable: this.clearable,
      inputProps: this.inputProps,
      internalLoadingBeforeSuffix: true
    }, {
      prefix: () => {
        var _a;
        return this.showButton && this.buttonPlacement === 'both' ? [renderMinusButton(), (0,_utils_index_mjs__WEBPACK_IMPORTED_MODULE_16__.resolveWrappedSlot)($slots.prefix, children => {
          if (children) {
            return (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("span", {
              class: `${mergedClsPrefix}-input-number-prefix`
            }, children);
          }
          return null;
        })] : (_a = $slots.prefix) === null || _a === void 0 ? void 0 : _a.call($slots);
      },
      suffix: () => {
        var _a;
        return this.showButton ? [(0,_utils_index_mjs__WEBPACK_IMPORTED_MODULE_16__.resolveWrappedSlot)($slots.suffix, children => {
          if (children) {
            return (0,vue__WEBPACK_IMPORTED_MODULE_0__.h)("span", {
              class: `${mergedClsPrefix}-input-number-suffix`
            }, children);
          }
          return null;
        }), this.buttonPlacement === 'right' ? renderMinusButton() : null, renderAddButton()] : (_a = $slots.suffix) === null || _a === void 0 ? void 0 : _a.call($slots);
      }
    }));
  }
}));

/***/ }),

/***/ "./node_modules/naive-ui/es/input-number/src/styles/input-number.cssr.mjs":
/*!********************************************************************************!*\
  !*** ./node_modules/naive-ui/es/input-number/src/styles/input-number.cssr.mjs ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _utils_cssr_index_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../_utils/cssr/index.mjs */ "./node_modules/naive-ui/es/_utils/cssr/index.mjs");

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,_utils_cssr_index_mjs__WEBPACK_IMPORTED_MODULE_0__.c)([(0,_utils_cssr_index_mjs__WEBPACK_IMPORTED_MODULE_0__.cB)('input-number-suffix', `
 display: inline-block;
 margin-right: 10px;
 `), (0,_utils_cssr_index_mjs__WEBPACK_IMPORTED_MODULE_0__.cB)('input-number-prefix', `
 display: inline-block;
 margin-left: 10px;
 `)]));

/***/ }),

/***/ "./node_modules/naive-ui/es/input-number/src/utils.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/naive-ui/es/input-number/src/utils.mjs ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   format: () => (/* binding */ format),
/* harmony export */   isWipValue: () => (/* binding */ isWipValue),
/* harmony export */   parse: () => (/* binding */ parse),
/* harmony export */   parseNumber: () => (/* binding */ parseNumber),
/* harmony export */   validator: () => (/* binding */ validator)
/* harmony export */ });
// string => string (expected, not implemented)
// string => number (legacy)
function parse(value) {
  if (value === undefined || value === null || typeof value === 'string' && value.trim() === '') {
    return null;
  }
  return Number(value);
}
// can be parsed to number but shouldn't be applied when inputing
// when value includes `.`, ending with 0 and`.`, doesn't update, if 0 parse func will remove 0
function isWipValue(value) {
  return value.includes('.') && (/^(-)?\d+.*(\.|0)$/.test(value) || /^\.\d+$/.test(value));
}
// string => boolean (expected, not implemented)
// number => boolean (legacy)
function validator(value) {
  if (value === undefined || value === null) return true;
  if (Number.isNaN(value)) return false;
  return true;
}
// string => string (expected, not implemented)
// number => string (legacy)
function format(value, precision) {
  if (value === undefined || value === null) return '';
  return precision === undefined ? String(value) : value.toFixed(precision);
}
function parseNumber(number) {
  if (number === null) return null;
  if (typeof number === 'number') {
    return number;
  } else {
    const parsedNumber = Number(number);
    if (Number.isNaN(parsedNumber)) return null;else {
      return parsedNumber;
    }
  }
}

/***/ }),

/***/ "./node_modules/naive-ui/es/input-number/styles/light.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/naive-ui/es/input-number/styles/light.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _button_styles_index_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../button/styles/index.mjs */ "./node_modules/naive-ui/es/button/styles/light.mjs");
/* harmony import */ var _input_styles_index_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../input/styles/index.mjs */ "./node_modules/naive-ui/es/input/styles/light.mjs");
/* harmony import */ var _styles_common_index_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../_styles/common/index.mjs */ "./node_modules/naive-ui/es/_styles/common/light.mjs");
/* harmony import */ var _mixins_index_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../_mixins/index.mjs */ "./node_modules/naive-ui/es/_mixins/use-theme.mjs");




const self = vars => {
  const {
    textColorDisabled
  } = vars;
  return {
    iconColorDisabled: textColorDisabled
  };
};
const inputNumberLight = (0,_mixins_index_mjs__WEBPACK_IMPORTED_MODULE_0__.createTheme)({
  name: 'InputNumber',
  common: _styles_common_index_mjs__WEBPACK_IMPORTED_MODULE_1__["default"],
  peers: {
    Button: _button_styles_index_mjs__WEBPACK_IMPORTED_MODULE_2__["default"],
    Input: _input_styles_index_mjs__WEBPACK_IMPORTED_MODULE_3__["default"]
  },
  self
});
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (inputNumberLight);

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,