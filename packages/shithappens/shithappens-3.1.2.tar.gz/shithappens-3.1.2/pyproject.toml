[build-system]
requires = ["setuptools>=61.0", "babel"]
build-backend = "setuptools.build_meta"

[project]
name = "shithappens"
version = "3.1.2"
authors = [
    {name="Siem de Jong"},
]
description = "Create your own Shit Happens playing cards!"
readme = "README.md"
requires-python = ">=3.11"
dynamic = ["dependencies", "optional-dependencies"]
license = {file = "LICENSE"}
keywords = ["shit happens", "card-game"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: Matplotlib",
    "Intended Audience :: Developers",
    "Intended Audience :: Other Audience",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    'Programming Language :: Python :: 3 :: Only',
    "Programming Language :: Python :: 3.11",
    "Topic :: Games/Entertainment :: Board Games",
    "Typing :: Typed",
]

[project.urls]
"Homepage" = "https://github.com/siemdejong/shit-happens"
"Bug Tracker" = "https://github.com/siemdejong/shit-happens/issues"

[project.scripts]
shithappens = "shithappens.cli:cli"

[tool.setuptools]
include-package-data = false

[tool.setuptools.packages.find]
where = ["src"]
exclude = ["shithappens.opensans"]
namespaces = false

[tool.setuptools.package-data]
shithappens = ["opensans/fonts/ttf/*.ttf", "images/*.png", "locales/*/LC_MESSAGES/*.mo"]

[tool.setuptools.dynamic]
dependencies = {file = ["requirements.txt"]}
optional-dependencies = {dev = { file = ["requirements-dev.txt"] }}

[tool.ruff]
extend-exclude = ["opensans"]

[tool.semantic_release]
version_variables = ["pyproject.toml:version"] # version location
build_command = "pip install build && python -m build"
assets = []
build_command_env = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
repo_dir = "."
no_git_verify = false
tag_format = "v{version}"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
default_bump_level = 0

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true