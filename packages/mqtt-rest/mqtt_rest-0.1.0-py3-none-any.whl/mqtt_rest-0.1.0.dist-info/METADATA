Metadata-Version: 2.1
Name: mqtt-rest
Version: 0.1.0
Summary: A REST API for MQTT Client Management
Home-page: https://github.com/rahulsrma26/mqtt-rest
License: MIT
Keywords: MQTT,REST,API
Author: Rahul Sharma
Author-email: rahulsrma26@gmail.com
Maintainer: Rahul Sharma
Maintainer-email: rahulsrma26@gmail.com
Requires-Python: >=3.11,<4.0
Classifier: Framework :: FastAPI
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Home Automation
Requires-Dist: fastapi (>=0.115.0,<0.116.0)
Requires-Dist: paho-mqtt (>=2.1.0,<3.0.0)
Requires-Dist: toml (>=0.10.2,<0.11.0)
Requires-Dist: uvicorn (>=0.31.0,<0.32.0)
Project-URL: Repository, https://github.com/rahulsrma26/mqtt-rest
Description-Content-Type: text/markdown

# MQTT-REST

MQTT-REST is a project that bridges MQTT and RESTful APIs, allowing seamless communication between IoT devices using MQTT and web services using REST.

It's useful if you want to monitor arbritary stuff from a machine in Home-assistant without writing custom integration.

## Development

```sh
git clone https://github.com/rahulsrma26/mqtt-rest
cd mqtt-rest
poetry shell
poetry install
poetry run python -m mqtt_rest.run
```

If you dont want poetry to managing virtual environment then dont need to run `poetry run` or `poetry shell`. In that case one can directly run `python -m mqtt_rest.run`.

Visit `/docs` endpoint to access API docs via SwaggerUI.

### Testing

```sh
poetry run pytest
```

### Linting

```sh
poetry run ruff check
```

