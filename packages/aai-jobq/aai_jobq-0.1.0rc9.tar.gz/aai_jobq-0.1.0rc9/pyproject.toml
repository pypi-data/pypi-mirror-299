[build-system]
requires = ["setuptools>=62", "setuptools-scm[toml]", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "aai-jobq"
description = ""
readme = "README.md"
requires-python = ">=3.10"
dependencies = ["pydantic", "pyyaml"]
authors = [
    { name = "appliedAI Institute for Europe", email = "opensource@appliedai-institute.de" },
]
maintainers = [
    { name = "Nicholas Junge", email = "n.junge@appliedai-institute.de" },
    { name = "Max Mynter", email = "m.mynter@appliedai-institute.de" },
    { name = "Adrian Rumpold", email = "a.rumpold@appliedai-institute.de" },
]
dynamic = ["version"]
license = { text = "Apache-2.0" }

[project.scripts]
jobs_execute = "jobs.execute:execute"
jobq = "cli:main"

[project.optional-dependencies]
cli = ["docker", "humanize", "rich", "pydantic-settings", "python-dateutil"]
dev = [
    "build",
    "ruff",
    "pytest",
    "pytest-cov",
    "pre-commit",
    "click",      # For CliRunner framework
]

[tool.setuptools.package-data]
jobq = ["py.typed"]

# Automatically determine version number from Git tags
[tool.setuptools_scm]
root = ".."
fallback_version = "0.0.0"

[tool.ruff]
extend = "../pyproject.toml"
src = ["src"]

[tool.ruff.lint.per-file-ignores]
"src/openapi_client/**" = [
    "B904", # raise-without-from-inside-except
    "E721", # type-comparison
]
"src/openapi_client/api_client.py" = ["PTH"]

[tool.mypy]
ignore_missing_imports = true
check_untyped_defs = true
disallow_incomplete_defs = true
python_version = "3.10"
strict_optional = true
warn_unreachable = false
show_column_numbers = true
show_absolute_path = false
exclude = ['openapi_client']

[[tool.mypy.overrides]]
ignore_errors = true
module = "openapi_client.*"

[tool.coverage.report]
exclude_also = ["@overload", "raise NotImplementedError", "if TYPE_CHECKING:"]

# These serve as defaults for the example workloads, but also show how to configure jobq in downstream projects.
[tool.jobq]
api-base-url = "http://localhost:8000"
log-level = "DEBUG"
