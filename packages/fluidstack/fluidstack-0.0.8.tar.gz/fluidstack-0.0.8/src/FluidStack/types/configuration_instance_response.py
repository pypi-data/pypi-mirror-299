# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import deep_union_pydantic_dicts, pydantic_v1
from .entity_id import EntityId
from .gpu_model_response import GpuModelResponse
from .region import Region


class ConfigurationInstanceResponse(pydantic_v1.BaseModel):
    id: EntityId
    gpu_model: typing.Optional[GpuModelResponse] = pydantic_v1.Field(default=None)
    """
    The GPU model of the configuration.
    """

    cpu_model: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    The CPU model of the configuration.
    """

    gpu_count: int = pydantic_v1.Field()
    """
    The number of GPUs in the configuration.
    """

    cpu_count: int = pydantic_v1.Field()
    """
    The number of CPUs in the configuration.
    """

    nvme_storage_size_gb: int = pydantic_v1.Field()
    """
    The size of NVMe in the configuration.
    """

    memory_size_gb: float = pydantic_v1.Field()
    """
    The amount of RAM memory in the configuration.
    """

    estimated_provisioning_time_minutes: typing.Optional[int] = None
    region: Region

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults_exclude_unset: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        kwargs_with_defaults_exclude_none: typing.Any = {"by_alias": True, "exclude_none": True, **kwargs}

        return deep_union_pydantic_dicts(
            super().dict(**kwargs_with_defaults_exclude_unset), super().dict(**kwargs_with_defaults_exclude_none)
        )

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
