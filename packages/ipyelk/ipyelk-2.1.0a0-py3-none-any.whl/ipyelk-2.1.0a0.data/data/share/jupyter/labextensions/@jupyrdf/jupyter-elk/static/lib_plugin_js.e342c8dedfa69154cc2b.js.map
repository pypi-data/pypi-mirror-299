{"version":3,"file":"lib_plugin_js.e342c8dedfa69154cc2b.js?v=e342c8dedfa69154cc2b","mappings":";;;;;;;;;;;;;;;;;AAO+D;AAEnC;AAEwB;AAEpD,MAAM,YAAY,GAAG,GAAG,yCAAI,SAAS,CAAC;AAEtC,MAAM,MAAM,GAAuC;IACjD,EAAE,EAAE,YAAY;IAChB,QAAQ,EAAE,CAAC,yEAAsB,CAAC;IAClC,SAAS,EAAE,IAAI;IACf,QAAQ,EAAE,KAAK,EAAE,GAAwB,EAAE,QAAgC,EAAE,EAAE;QAC7E,MAAM,EAAE,oBAAoB,EAAE,GAAG,MAAM,gJAAmB,CAAC;QAC3D,MAAM,oBAAoB,EAAE,CAAC;QAC7B,8CAAS,IAAI,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAC3C,QAAQ,CAAC,cAAc,CAAC;YACtB,IAAI,EAAE,yCAAI;YACV,OAAO,EAAE,4CAAO;YAChB,OAAO,EAAE,KAAK,IAAI,EAAE;gBAClB,MAAM,aAAa,iDACd,CAAC,MAAM,2XAA6D,CAAC,GACrE,CAAC,MAAM,soBAA+D,CAAC,GACvE,CAAC,MAAM,gyBAA0D,CAAC,CACtE,CAAC;gBACF,8CAAS,IAAI,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBAC5C,OAAO,aAAa,CAAC;YACvB,CAAC;SACF,CAAC,CAAC;IACL,CAAC;CACF,CAAC;AACF,iEAAe,MAAM,EAAC;;;;;;;;;;;;;;;;;;;ACtCtB;;;GAGG;AAC+B;AAE3B,MAAM,IAAI,GAAG,+CAAQ,CAAC;AACtB,MAAM,OAAO,GAAG,kDAAW,CAAC;AAE5B,MAAM,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;AAqBjE,MAAM,OAAO,GAAG;IACrB,KAAK,EAAE,UAAU;IACjB,YAAY,EAAE,YAAY;IAC1B,WAAW,EAAE,aAAa;CAC3B,CAAC","sources":["webpack://@jupyrdf/jupyter-elk/./js/plugin.ts","webpack://@jupyrdf/jupyter-elk/./js/tokens.ts"],"sourcesContent":["/**\n * # Copyright (c) 2024 ipyelk contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { Application, IPlugin } from '@lumino/application';\nimport { Widget } from '@lumino/widgets';\n\nimport { IJupyterWidgetRegistry } from '@jupyter-widgets/base';\n\nimport '../style/index.css';\n\nimport { ELK_DEBUG, NAME, VERSION } from './tokens';\n\nconst EXTENSION_ID = `${NAME}:plugin`;\n\nconst plugin: IPlugin<Application<Widget>, void> = {\n  id: EXTENSION_ID,\n  requires: [IJupyterWidgetRegistry],\n  autoStart: true,\n  activate: async (app: Application<Widget>, registry: IJupyterWidgetRegistry) => {\n    const { patchReflectMetadata } = await import('./patches');\n    await patchReflectMetadata();\n    ELK_DEBUG && console.warn('elk activated');\n    registry.registerWidget({\n      name: NAME,\n      version: VERSION,\n      exports: async () => {\n        const widgetExports = {\n          ...(await import(/* webpackChunkName: \"elklayout\" */ './layout_widget')),\n          ...(await import(/* webpackChunkName: \"elkdisplay\" */ './display_widget')),\n          ...(await import(/* webpackChunkName: \"elkexporter\" */ './exporter')),\n        };\n        ELK_DEBUG && console.warn('widgets loaded');\n        return widgetExports;\n      },\n    });\n  },\n};\nexport default plugin;\n","/**\n * # Copyright (c) 2024 ipyelk contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport PKG from '../package.json';\n\nexport const NAME = PKG.name;\nexport const VERSION = PKG.version;\n\nexport const ELK_DEBUG = window.location.hash.indexOf('ELK_DEBUG') > -1;\n\nexport interface IELKCenterMessage {\n  action: 'center';\n  model_id: string[] | string;\n  animate?: boolean;\n  retain_zoom?: boolean;\n}\n\nexport interface IELKFitMessage {\n  action: 'fit';\n  model_id: string[] | string;\n  animate?: boolean;\n  max_zoom?: number;\n  padding?: number;\n}\n\nexport interface IRunMessage {\n  action: 'run';\n}\n\nexport const ELK_CSS = {\n  label: 'elklabel',\n  widget_class: 'jp-ElkView',\n  sizer_class: 'jp-ElkSizer',\n};\n\nexport type TAnyELKMessage = IELKCenterMessage | IELKFitMessage;\n"],"names":[],"sourceRoot":""}