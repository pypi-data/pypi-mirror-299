{"version":3,"file":"elklayout.3bd6e3de166bbc9ead25.js?v=3bd6e3de166bbc9ead25","mappings":"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","sources":["webpack://@jupyrdf/jupyter-elk/./js/layout_widget.ts","webpack://@jupyrdf/jupyter-elk/./js/measure_text.ts"],"sourcesContent":["/**\n * # Copyright (c) 2024 ipyelk contributors.\n * Distributed under the terms of the Modified BSD License.\n */\n// import Worker from '!!worker-loader!elkjs/lib/elk-worker.min.js';\nimport * as ELK from 'elkjs/lib/elk-api';\n\nimport { Signal } from '@lumino/signaling';\n\nimport { unpack_models as deserialize } from '@jupyter-widgets/base';\nimport { DOMWidgetModel } from '@jupyter-widgets/base';\n\nimport { ElkNode } from './sprotty/json/elkgraph-json';\nimport { ELK_DEBUG, IRunMessage, NAME, VERSION } from './tokens';\n\nimport Worker from '!!worker-loader!elkjs/lib/elk-worker.js';\n\nexport { ELKTextSizerModel, ELKTextSizerView } from './measure_text';\n\nconst TheElk = new ELK.default({\n  workerFactory: () => {\n    ELK_DEBUG && console.warn('ELK Worker created');\n    return new (Worker as any)();\n  },\n} as any);\n\nfunction collectProperties(node: ElkNode) {\n  let props: Map<string, any> = new Map();\n\n  function strip(node) {\n    props[node.id] = node.properties;\n    delete node['properties'];\n    // children\n    if (node.children) {\n      node.children.map(strip);\n    }\n    // ports\n    if (node.ports) {\n      node.ports.map(strip);\n    }\n    // labels\n    if (node.labels) {\n      node.labels.map(strip);\n    }\n    // edges\n    if (node.edges) {\n      node.edges.map(strip);\n    }\n  }\n  strip(node);\n  return props;\n}\n\nfunction applyProperties(node: ElkNode, props: Map<string, any>) {\n  function apply(node) {\n    node.properties = props[node.id];\n\n    // children\n    if (node.children) {\n      node.children.map(apply);\n    }\n    // ports\n    if (node.ports) {\n      node.ports.map(apply);\n    }\n    // labels\n    if (node.labels) {\n      node.labels.map(apply);\n    }\n    // edges\n    if (node.edges) {\n      node.edges.map(apply);\n    }\n  }\n  apply(node);\n  return node;\n}\n\nexport class ELKLayoutModel extends DOMWidgetModel {\n  static model_name = 'ELKLayoutModel';\n  static serializers = {\n    ...DOMWidgetModel.serializers,\n    inlet: { deserialize },\n    outlet: { deserialize },\n  };\n\n  protected _elk: ELK.ELK;\n\n  layoutUpdated = new Signal<ELKLayoutModel, void>(this);\n\n  defaults() {\n    let defaults = {\n      ...super.defaults(),\n      _view_module: NAME,\n      _model_name: ELKLayoutModel.model_name,\n      _model_module_version: VERSION,\n      inlet: null,\n      outlet: null,\n    };\n    return defaults;\n  }\n\n  initialize(attributes: any, options: any) {\n    super.initialize(attributes, options);\n    // this.on('change:inlet', this.onInletChanged, this);\n    // this.onInletChanged();\n    this.on('msg:custom', this.handleMessage, this);\n  }\n\n  protected ensureElk() {\n    if (this._elk == null) {\n      this._elk = TheElk;\n    }\n  }\n\n  handleMessage(content: IRunMessage) {\n    // check message and decide if should call `measure`\n    switch (content.action) {\n      case 'run':\n        this.layout();\n        break;\n    }\n  }\n\n  async layout() {\n    // There looks like a bug with how elkjs failing to process edge properties\n    // if they are anything more than simple strings. Elkjs doesnt need to operate\n    // on the information passed in `properties` from ipyelk to sprotty so this\n    // will strip them before calling elk and then reapply after\n    // const {rootNode} = this;\n    const rootNode: ELK.ElkNode = this.get('inlet')?.get('value');\n    let outlet: DOMWidgetModel = this.get('outlet'); // target output\n    if (rootNode == null || outlet == null) {\n      return null;\n    }\n    let propmap = collectProperties(rootNode);\n    // strip properties out\n    this.ensureElk();\n    let result;\n    try {\n      result = await this._elk.layout(rootNode);\n      // reapply properties\n      applyProperties(result, propmap);\n    } catch (error) {\n      result = {};\n      console.error(error);\n    }\n\n    outlet.set('value', { ...result });\n    outlet.save_changes();\n    return result;\n  }\n}\n","/**\n * # Copyright (c) 2024 ipyelk contributors.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { random } from 'lodash';\n\nimport { DOMWidgetModel, DOMWidgetView } from '@jupyter-widgets/base';\nimport { unpack_models as deserialize } from '@jupyter-widgets/base';\n\nimport { ElkLabel, ElkNode } from './sprotty/json/elkgraph-json';\nimport { ELK_CSS, ELK_DEBUG, IRunMessage, NAME, VERSION } from './tokens';\n\n// import { ElkNode } from './sprotty/sprotty-model';\n\nexport class ELKTextSizerModel extends DOMWidgetModel {\n  static model_name = 'ELKTextSizerModel';\n  static serializers = {\n    ...DOMWidgetModel.serializers,\n    inlet: { deserialize },\n    outlet: { deserialize },\n  };\n\n  defaults() {\n    let defaults = {\n      ...super.defaults(),\n\n      _model_name: ELKTextSizerModel.model_name,\n      _model_module_version: VERSION,\n      _view_module: NAME,\n      _view_name: ELKTextSizerView.view_name,\n      _view_module_version: VERSION,\n      id: String(Math.random()),\n      inlet: null,\n      outlet: null,\n    };\n    return defaults;\n  }\n\n  initialize(\n    attributes: any,\n    options: {\n      model_id: string;\n      comm?: any;\n      widget_manager: any;\n    },\n  ) {\n    super.initialize(attributes, options);\n    ELK_DEBUG && console.warn('ELK Test Sizer Init');\n    this.on('msg:custom', this.handleMessage, this);\n    ELK_DEBUG && console.warn('ELK Text Done Init');\n  }\n\n  make_container(): HTMLElement {\n    const el: HTMLElement = document.createElement('div');\n    const styledClass = this.get('_dom_classes').filter(\n      (dc: string) => dc.indexOf('styled-widget-') === 0,\n    )[0];\n    el.classList.add(\n      'lm-Widget',\n      ELK_CSS.widget_class,\n      ELK_CSS.sizer_class,\n      styledClass,\n    );\n    const raw_css: string = this.get('namespaced_css'); //TODO should this `raw_css` string be escaped?\n    el.innerHTML = `<div class=\"sprotty\"><style>${raw_css}</style><svg class=\"sprotty-graph\"><g></g></svg></div>`;\n    return el;\n  }\n\n  /**\n   * SVG Text Element for given text string\n   * @param text\n   */\n  make_label(label: ElkLabel): SVGElement {\n    ELK_DEBUG && console.warn('ELK Text Label for text', label);\n    let element: SVGElement = createSVGElement('text');\n    let classes: string[] = [ELK_CSS.label];\n    if (label.properties?.cssClasses.length > 0) {\n      classes = classes.concat(label.properties?.cssClasses.split(' '));\n    }\n\n    element.classList.add(...classes);\n    element.textContent = label.text;\n    ELK_DEBUG && console.warn('ELK Text Label', element);\n    return element;\n  }\n\n  handleMessage(content: IRunMessage) {\n    // check message and decide if should call `measure`\n    switch (content.action) {\n      case 'run':\n        this.measure();\n        break;\n    }\n  }\n\n  /**\n   * Method to take a list of texts and build SVG Text Elements to attach to the DOM\n   * @param content message measure request\n   */\n  measure() {\n    const rootNode: ElkNode = this.get('inlet')?.get('value');\n    let outlet: DOMWidgetModel = this.get('outlet'); // target output\n    if (rootNode == null || outlet == null) {\n      return null;\n    }\n    ELK_DEBUG && console.log('Root Node:', rootNode);\n    let texts: ElkLabel[] = get_labels(rootNode);\n\n    ELK_DEBUG && console.warn('ELK Text Sizer Measure', texts);\n    const el: HTMLElement = this.make_container();\n    const view: SVGElement = el.getElementsByTagName('g')[0];\n\n    const new_g: SVGElement = createSVGElement('g');\n    texts.forEach((text) => {\n      new_g.appendChild(this.make_label(text));\n    });\n    view.appendChild(new_g);\n\n    ELK_DEBUG && console.warn('ELK Text Sizer to add node', new_g);\n    ELK_DEBUG && console.warn('ELK Text Sizer node', view);\n\n    document.body.prepend(el);\n\n    let elements: SVGElement[] = Array.from(new_g.getElementsByTagName('text'));\n\n    ELK_DEBUG && console.warn('Sized Text');\n\n    // Callback to take measurements and remove element from DOM\n    window.requestAnimationFrame(() => {\n      this.read_sizes(texts, elements);\n      let output = { ...rootNode };\n      output['out'] = random();\n      outlet.set('value', output);\n      outlet.save_changes();\n      if (!ELK_DEBUG) {\n        document.body.removeChild(el);\n      }\n    });\n  }\n\n  /**\n   * Read the given SVG Text Elements sizes and generate TextSize Objects\n   * @param texts Original list of text strings requested to size\n   * @param elements List of SVG Text Elements to get their respective bounding boxes\n   */\n  read_sizes(labels: ElkLabel[], elements: SVGElement[]) {\n    let i = 0;\n    for (let element of elements) {\n      ELK_DEBUG && console.warn(element.innerHTML);\n      const label: ElkLabel = labels[i];\n      const size: DOMRect = element.getBoundingClientRect();\n\n      label.width = size.width;\n      label.height = size.height;\n\n      i++;\n    }\n  }\n}\n\nexport class ELKTextSizerView extends DOMWidgetView {\n  static view_name = 'ELKTextSizerView';\n  model: ELKTextSizerModel;\n  async render() {}\n}\n\n/**\n * SVG Required Namespaced Element\n */\nfunction createSVGElement(tag: string): SVGElement {\n  return document.createElementNS('http://www.w3.org/2000/svg', tag);\n}\n\nfunction get_labels(el: any): ElkLabel[] {\n  let labels: ElkLabel[] = [];\n  if (el?.labels) {\n    for (let label of el.labels as ElkLabel[]) {\n      // size only those labels without a width or a height set\n      if (!label?.properties?.shape?.width || !label?.properties?.shape?.height) {\n        labels.push(label);\n      }\n    }\n  }\n  for (let child of el?.ports || []) {\n    labels.push(...get_labels(child));\n  }\n  for (let child of el?.children || []) {\n    labels.push(...get_labels(child));\n  }\n  for (let edge of el?.edges || []) {\n    labels.push(...get_labels(edge));\n  }\n  for (let label of el?.labels || []) {\n    labels.push(...get_labels(label));\n  }\n\n  return labels;\n}\n"],"names":[],"sourceRoot":""}