# Licensed under the MIT License
# https://github.com/craigahobbs/ollama-chat/blob/main/LICENSE

include <args.mds>
include <forms.mds>

include 'ollamaChatConversation.bare'


# The Ollama Chat application main entry point
async function ollamaChatMain():
    args = argsParse(ollamaChatArguments)
    view = objectGet(args, 'view')

    # Render the chat page
    if view == 'chat':
        ollamaChatConversationPage(args)
        return
    endif

    # Render the template variables page
    if view == 'variables':
        ollamaChatVariablesPage(args)
        return
    endif

    # Render the index page
    ollamaChatIndexPage(args)
endfunction


# The Ollama Chat application URL arguments
ollamaChatArguments = argsValidate(arrayNew( \
    objectNew('name', 'action', 'explicit', true), \
    objectNew('name', 'id'), \
    objectNew('name', 'message', 'explicit', true), \
    objectNew('name', 'multiline', 'type', 'bool'), \
    objectNew('name', 'text', 'type', 'bool'), \
    objectNew('name', 'view') \
))


# The application title
ollamaChatTitle = 'Ollama Chat'


# The Ollama Chat error page
function ollamaChatErrorPage(message):
    documentSetTitle(ollamaChatTitle)
    markdownPrint( \
        argsLink(ollamaChatArguments, 'Back', null, true), \
        '', \
        '# ' + markdownEscape(ollamaChatTitle), \
        '', \
        '**ERROR:** ' + markdownEscape(message) \
    )
endfunction


# The Ollama Chat index page
async function ollamaChatIndexPage(args):
    action = objectGet(args, 'action')
    actionID = objectGet(args, 'id')

    # Get the conversations
    conversationsResponse = systemFetch('getConversations')
    conversationsResponse = if(conversationsResponse != null, jsonParse(conversationsResponse))
    if conversationsResponse == null:
        ollamaChatErrorPage('Failed to get conversations')
        return
    endif

    # Render the title
    documentSetTitle(ollamaChatTitle)
    markdownPrint('# ' + markdownEscape(ollamaChatTitle))

    # Model selection?
    modelReport = '**Model:** ' + objectGet(conversationsResponse, 'model') + '&nbsp;&nbsp;'
    if action == 'model':
        # Render the model selection links
        markdownPrint(modelReport + argsLink(ollamaChatArguments, 'Cancel', null, true), '')
        models = objectGet(conversationsResponse, 'models')
        if !models:
            markdownPrint('', '&nbsp;&nbsp;&nbsp;&nbsp;**Error:** No local models - download with `ollama pull <model>`')
        else:
            markdownPrint('', '&nbsp;&nbsp;&nbsp;&nbsp;**Select a model:**')
            for model in models:
                elementModelRender( \
                    objectNew('html', 'p', 'elem', arrayNew( \
                        objectNew('text', stringFromCharCode(160, 160, 160, 160)), \
                        formsLinkButtonElements(model, systemPartial(ollamaChatOnModelSelect, model)) \
                    )) \
                )
            endfor
        endif
    else:
        # Render the start new chat link
        markdownPrint( \
            '', \
            modelReport + argsLink(ollamaChatArguments, 'Select', objectNew('action', 'model'), true), \
            '', \
            argsLink(ollamaChatArguments, 'Start New Conversation', objectNew('view', 'chat')) \
        )
    endif

    # Render the conversations
    conversations = objectGet(conversationsResponse, 'conversations')
    markdownPrint('', '## Conversations')
    if !conversations:
        markdownPrint('', '*No conversations*')
    else:
        conversationTableRows = arrayNew()
        conversationTable = arrayNew( \
            objectNew('html', 'table', 'elem', arrayNew( \
                objectNew('html', 'tbody', 'elem', conversationTableRows) \
            )) \
        )
        for conversation in conversations:
            id = objectGet(conversation, 'id')
            title = objectGet(conversation, 'title')
            model = objectGet(conversation, 'model')
            selected = action == 'conversation' && actionID == id
            conversationURL = argsURL(ollamaChatArguments, objectNew('view', 'chat', 'id', id))
            selectText = if(selected, 'Cancel', 'Select')
            selectURL = argsURL(ollamaChatArguments, objectNew('action', if(!selected, 'conversation'), 'id', if(!selected, id)))
            arrayPush(conversationTableRows, objectNew('html', 'tr', 'elem', arrayNew( \
                objectNew('html', 'td', 'elem', formsLinkElements(title, conversationURL)), \
                objectNew('html', 'td', 'elem', objectNew('text', model)), \
                objectNew('html', 'td', 'elem', arrayNew( \
                    formsLinkElements(selectText, selectURL), \
                    if(selected, arrayNew( \
                        objectNew('text', stringFromCharCode(160, 160) + '|' + stringFromCharCode(160, 160)), \
                        formsLinkButtonElements('Up', systemPartial(ollamaChatOnConversationAction, args, id, 'up')), \
                        objectNew('text', stringFromCharCode(160, 160)), \
                        formsLinkButtonElements('Down', systemPartial(ollamaChatOnConversationAction, args, id, 'down')) \
                    )) \
                )) \
            )))
        endfor
        elementModelRender(conversationTable)
    endif

    # Render the conversation templates
    templates = objectGet(conversationsResponse, 'templates')
    if templates:
        markdownPrint('## Templates')
        templateTableRows = arrayNew()
        templateTable = arrayNew( \
            objectNew('html', 'table', 'elem', arrayNew( \
                objectNew('html', 'tbody', 'elem', templateTableRows) \
            )) \
        )
        for template in templates:
            templateID = objectGet(template, 'id')
            templateTitle = objectGet(template, 'title')
            templateStartFn = systemPartial(ollamaChatOnTemplateSelect, templateID)
            selected = action == 'template' && actionID == templateID
            selectText = if(selected, 'Cancel', 'Select')
            selectURL = argsURL(ollamaChatArguments, objectNew('action', if(!selected, 'template'), 'id', if(!selected, templateID)))
            arrayPush(templateTableRows, objectNew('html', 'tr', 'elem', arrayNew( \
                objectNew('html', 'td', 'elem', formsLinkButtonElements(templateTitle, templateStartFn)), \
                objectNew('html', 'td', 'elem', arrayNew( \
                    formsLinkElements(selectText, selectURL), \
                    if(selected, arrayNew( \
                        objectNew('text', stringFromCharCode(160, 160) + '|' + stringFromCharCode(160, 160)), \
                        formsLinkButtonElements('Up', systemPartial(ollamaChatOnTemplateAction, args, templateID, 'up')), \
                        objectNew('text', stringFromCharCode(160, 160)), \
                        formsLinkButtonElements('Down', systemPartial(ollamaChatOnTemplateAction, args, templateID, 'down')), \
                        objectNew('text', stringFromCharCode(160, 160)), \
                        formsLinkButtonElements('Delete', systemPartial(ollamaChatOnTemplateAction, args, templateID, 'delete')) \
                    )) \
                )) \
            )))
        endfor
        elementModelRender(templateTable)
    endif
endfunction


# Select model on-click event handler
async function ollamaChatOnModelSelect(model):
    systemFetch(objectNew('url', 'setModel', 'body', jsonStringify(objectNew('model', model))))
    windowSetLocation(argsURL(ollamaChatArguments, null, true))
endfunction


# Conversation action on-click event handler
async function ollamaChatOnConversationAction(args, id, action):
    systemFetch(objectNew('url', 'moveConversation', 'body', jsonStringify(objectNew('id', id, 'down', action == 'down'))))
    ollamaChatIndexPage(args)
endfunction


# Template action on-click event handler
async function ollamaChatOnTemplateAction(args, id, action):
    if action == 'delete':
        systemFetch(objectNew('url', 'deleteTemplate', 'body', jsonStringify(objectNew('id', id))))
        windowSetLocation(argsURL(ollamaChatArguments, null, true))
    else:
        systemFetch(objectNew('url', 'moveTemplate', 'body', jsonStringify(objectNew('id', id, 'down', action == 'down'))))
        ollamaChatIndexPage(args)
    endif
endfunction


# Select template on-click event handler
async function ollamaChatOnTemplateSelect(templateID):
    # Get the template
    templateResponse = systemFetch('getTemplate?id=' + templateID)
    templateResponse = if(templateResponse != null, jsonParse(templateResponse))
    if templateResponse == null:
        return
    endif

    # Variables?
    if objectGet(templateResponse, 'variables'):
        windowSetLocation(argsURL(ollamaChatArguments, objectNew('view', 'variables', 'id', templateID)))
        return
    endif

    # Start the conversation
    startRequest = objectNew('id', templateID)
    startResponse = systemFetch(objectNew('url', 'startTemplate', 'body', jsonStringify(startRequest)))
    startResponse = if(startResponse != null, jsonParse(startResponse))
    if startResponse == null:
        return
    endif
    id = objectGet(startResponse, 'id')

    # Navigate to the conversation page
    windowSetLocation(argsURL(ollamaChatArguments, objectNew('view', 'chat', 'id', id), false, ollamaChatBottomID))
endfunction


# The Ollama Chat conversation page
async function ollamaChatVariablesPage(args):
    templateID = objectGet(args, 'id')

    # Get the template
    templateResponse = systemFetch('getTemplate?id=' + templateID)
    templateResponse = if(templateResponse != null, jsonParse(templateResponse))
    if templateResponse == null:
        ollamaChatErrorPage('Unknown template ID')
        return
    endif

    # Render the page title
    title = 'Variables - ' + objectGet(templateResponse, 'title')
    documentSetTitle(title)
    markdownPrint(argsLink(ollamaChatArguments, 'Back', null, true), '', '# ' + markdownEscape(title))

    # Render the variable inputs
    variables = objectGet(templateResponse, 'variables')
    submitFn = systemPartial(ollamaChatOnVariablesSubmit, templateID, variables)
    onEnterFn = if(arrayLength(variables) == 1, submitFn)
    for variable, ixVariable in variables:
        name = objectGet(variable, 'name')
        label = objectGet(variable, 'label')
        elementModelRender(arrayNew( \
            objectNew('html', 'p', 'elem', objectNew('html', 'b', 'elem', objectNew('text', label))), \
            objectNew('html', 'p', 'elem', formsTextElements(name, '', 50, onEnterFn)) \
        ))
        if ixVariable == 0:
            documentSetFocus(name)
        endif
    endfor

    # Render the submit button
    elementModelRender(arrayNew( \
        objectNew('html', 'p', 'elem', formsLinkButtonElements('Start New Conversation', submitFn)) \
    ))
endfunction


# Variables submit on-click event handler
async function ollamaChatOnVariablesSubmit(templateID, variables):
    # Get the variable values
    variableValues = objectNew()
    for variable in variables:
        name = objectGet(variable, 'name')
        objectSet(variableValues, name, documentInputValue(name))
    endfor

    # Start the conversation
    startRequest = objectNew('id', templateID, 'variables', variableValues)
    startResponse = systemFetch(objectNew('url', 'startTemplate', 'body', jsonStringify(startRequest)))
    startResponse = if(startResponse != null, jsonParse(startResponse))
    if startResponse == null:
        return
    endif
    id = objectGet(startResponse, 'id')

    # Navigate to the conversation page
    windowSetLocation(argsURL(ollamaChatArguments, objectNew('view', 'chat', 'id', id), false, ollamaChatBottomID))
endfunction
