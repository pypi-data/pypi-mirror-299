[tox]
min_version = 4
env_list =
    pre-commit,
    mypy,
    pyright,
    lint,
    py3{9,10,11,12},
    report,
    docs

[gh]
python =
    3.12 = pre-commit, mypy, pyright, lint, py312
    3.11 = py311
    3.10 = py310
    3.9  = py39

[testenv]
package = wheel
wheel_build_env = .pkg
extras = tests
setenv =
    py3{9,10,11,12}: COVERAGE_FILE = .coverage.{envname}
passenv =
    GITLAB_*
    CI_*
    CI
commands = pytest -n auto --cov --cov-append --cov-report=term-missing {posargs:-vv}
depends =
    report: py3{9,10,11,12}

[testenv:report]
skip_install = true
deps = coverage[toml]
commands =
    coverage combine
    coverage html
    coverage report

[testenv:mypy]
extras = typing
deps =
    mypy>=1.0.0
commands =
    mypy src
setenv =
    MYPYPATH = typings

[testenv:pyright]
deps = pyright
extras = typing
commands = pyright src

[testenv:docs]
extras = docs
allowlist_externals =
    rm
commands =
    rm -rf docs/_build
    rm -rf docs/apidocs
    rm -rf docs/doctrees
    sphinx-build -W -n --jobs auto -b html -d docs/_build/doctrees docs docs/_build/html

# Linting Environments

[testenv:black]
description = Run black code formatter
skip_install = true
deps = black==24.8.0
commands = black --check src tests

[testenv:ruff]
description = Run ruff linter and fixer
skip_install = true
deps = ruff>=0.5.7
commands = ruff check --fix src tests

[testenv:interrogate]
description = Run interrogate to check docstring coverage
skip_install = true
deps = interrogate>=1.7.0
commands = interrogate tests

[testenv:lint]
description = Run all linting tools (black, ruff, interrogate, codespell) for Python 3.12
skip_install = true
deps =
    {[testenv:black]deps}
    {[testenv:ruff]deps}
    {[testenv:interrogate]deps}
commands =
    {[testenv:black]commands}
    {[testenv:ruff]commands}
    {[testenv:interrogate]commands}

[testenv:pre-commit]
skip_install = true
deps = pre-commit
commands = pre-commit run --all-files
