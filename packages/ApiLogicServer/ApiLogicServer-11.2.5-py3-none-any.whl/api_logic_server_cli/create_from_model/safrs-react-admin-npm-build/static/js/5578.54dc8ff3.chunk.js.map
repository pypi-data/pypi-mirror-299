{"version":3,"file":"static/js/5578.54dc8ff3.chunk.js","mappings":"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","sources":["components/external/UserPasswordTab.tsx","components/external/index.tsx","components/apifab/ApiFabComponents.tsx","components/Custom.tsx","../node_modules/@mui/icons-material/Download.js","../node_modules/@mui/icons-material/OpenInNew.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Typography, Button } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport { FormControl } from \"@mui/material\";\nimport { useRecordContext, useDataProvider } from \"react-admin\";\nimport { httpAuthClient } from \"../../rav4-jsonapi-client/ra-jsonapi-client\";\nimport { useConf } from \"../../Config\";\nimport { useNotify } from \"react-admin\";\n\nexport const UserPasswordTab = () => {\n  const conf = useConf();\n  const notify = useNotify();\n  const record = useRecordContext();\n  const dataProvider = useDataProvider();\n  const [pwdValue, setPwdValue] = useState(\"\");\n  const [rpwdValue, setRPwdValue] = useState(\"\");\n  const [submitColor, setSubmitColor] = useState<\n    \"default\" | \"inherit\" | \"secondary\" | \"primary\" | undefined\n  >(\"secondary\");\n  const onPwdChange = (e: any) => {\n    let pwdValue = e.target.value;\n    setPwdValue(pwdValue);\n    setSubmitColor(\n      pwdValue === rpwdValue && pwdValue.length > 5 ? \"primary\" : \"secondary\"\n    );\n    // console.log(pwdValue, rpwdValue);\n  };\n  const onRPwdVerify = (e: any) => {\n    let rpwdValue = e.target.value;\n    setRPwdValue(rpwdValue);\n    setSubmitColor(\n      pwdValue === rpwdValue && pwdValue.length > 5 ? \"primary\" : \"secondary\"\n    );\n    // console.log(pwdValue, rpwdValue);\n  };\n  const handleSubmit = () => {\n    // console.log(rpwdValue);\n    if (pwdValue !== rpwdValue) {\n      notify(\"Passwords don't match\", { type: \"warning\" });\n      return;\n    }\n    if (pwdValue.length < 6) {\n      notify(\"Password too short\", { type: \"warning\" });\n      return;\n    }\n    const data = {\n      password: pwdValue,\n    };\n    httpAuthClient(`${conf.api_root}/Users/${record?.id}/change_password`, {\n      method: \"POST\",\n      body: JSON.stringify(data),\n    })\n      .then(() => notify(\"Password Changed!\"))\n      .catch(() => notify(`Error Changing Password`, { type: \"warning\" }));\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <FormControl>\n        <Grid item xs={12} spacing={4}>\n          <Typography variant=\"body2\" component=\"p\">\n            <b>Change the user password</b>\n          </Typography>\n        </Grid>\n        <Grid item xs={12} spacing={4}>\n          <TextField\n            id=\"outlined-password-input\"\n            label=\"New Password\"\n            type=\"password\"\n            onChange={onPwdChange}\n          />\n        </Grid>\n        <Grid item xs={12} spacing={4}>\n          <TextField\n            id=\"outlined-password-input\"\n            label=\"Repeat Password\"\n            type=\"password\"\n            onChange={onRPwdVerify}\n          />\n        </Grid>\n        <Grid item xs={12} spacing={4}>\n          <Button\n            variant=\"contained\"\n            color={submitColor}\n            onClick={handleSubmit}\n          >\n            Submit\n          </Button>\n        </Grid>\n      </FormControl>\n    </Box>\n  );\n};\n\nexport const ApiUserPasswordTab = () => {\n  const conf = useConf();\n  const notify = useNotify();\n  const record = useRecordContext();\n  const dataProvider = useDataProvider();\n  const [curPwdValue, setCurPwdValue] = useState(\"\");\n  const [newPwdValue, setNewPwdValue] = useState(\"\");\n  const [rpwdValue, setRPwdValue] = useState(\"\");\n  const [submitColor, setSubmitColor] = useState<\n    \"default\" | \"inherit\" | \"secondary\" | \"primary\" | undefined\n  >(\"secondary\");\n\n  const onCurPwdChange = (e: any) => {\n    let pwdValue = e.target.value;\n    setCurPwdValue(pwdValue);\n    setSubmitColor(\n      pwdValue === rpwdValue && pwdValue.length > 5 ? \"primary\" : \"secondary\"\n    );\n  };\n  const onNewPwdChange = (e: any) => {\n    let pwdValue = e.target.value;\n    setNewPwdValue(pwdValue);\n    setSubmitColor(\n      pwdValue === rpwdValue && pwdValue.length > 5 ? \"primary\" : \"secondary\"\n    );\n  };\n  const onRPwdVerify = (e: any) => {\n    let rpwdValue = e.target.value;\n    setRPwdValue(rpwdValue);\n    setSubmitColor(\n      newPwdValue === rpwdValue && newPwdValue.length > 5\n        ? \"primary\"\n        : \"secondary\"\n    );\n  };\n  const handleSubmit = () => {\n    // console.log(rpwdValue);\n    if (newPwdValue !== rpwdValue) {\n      notify(\"Passwords don't match\", { type: \"warning\" });\n      return;\n    }\n    if (newPwdValue.length < 1) {\n      notify(\"Password too short\", { type: \"warning\" });\n      return;\n    }\n    const data = {\n      password: newPwdValue,\n    };\n    httpAuthClient(`${conf.api_root}/Users/${record?.id}/change_password`, {\n      method: \"POST\",\n      body: JSON.stringify(data),\n    })\n      .then(() => notify(\"Password Changed!\"))\n      .catch(() => notify(`Error Changing Password`, { type: \"warning\" }));\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <FormControl>\n        <Grid item xs={12} spacing={4} component=\"div\">\n          <Typography variant=\"body2\" component=\"p\">\n            <b>Current user password</b>\n          </Typography>\n        </Grid>\n        <Grid item xs={12} spacing={4} component=\"div\">\n          <TextField\n            id=\"outlined-password-input\"\n            label=\"Current Password\"\n            type=\"password\"\n            onChange={onCurPwdChange}\n          />\n        </Grid>\n        <Grid item xs={12} spacing={4} component=\"div\">\n          <Typography variant=\"body2\" component=\"p\">\n            <b>New user password</b>\n          </Typography>\n        </Grid>\n        <Grid item xs={12} spacing={4} component=\"div\">\n          <TextField\n            id=\"outlined-password-input\"\n            label=\"New Password\"\n            type=\"password\"\n            onChange={onNewPwdChange}\n          />\n        </Grid>\n        <Grid item xs={12} spacing={4} component=\"div\">\n          <TextField\n            id=\"outlined-password-input\"\n            label=\"Repeat Password\"\n            type=\"password\"\n            onChange={onRPwdVerify}\n          />\n        </Grid>\n        <Grid item xs={12} spacing={4} component=\"div\">\n          <Button\n            variant=\"contained\"\n            color={submitColor}\n            onClick={handleSubmit}\n          >\n            Submit\n          </Button>\n        </Grid>\n      </FormControl>\n    </Box>\n  );\n};\n","import * as React from \"react\";\n\nexport const MyComp = (props: any) => {\n  return <div>HMMMM</div>;\n};\n","// Remove the import statement for 'React'\r\nimport { Box, Link, IconButton } from '@mui/material';\r\nimport { useRecordContext } from 'react-admin';\r\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\r\nimport { StartStopModal } from './StartStopModal.tsx';\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\n\r\n// Remove the unused destructured elements\r\nexport const Running = () => {\r\n  const record = useRecordContext();\r\n\r\n  if (!record) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ textAlign: 'center' }}>\r\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n        <StartStopModal record={record} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const ProjectLink = () => {\r\n\r\n  const record = useRecordContext();\r\n\r\n  if (!record || !record.running) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Link href={record.link} target=\"_blank\" onClick={(e) => e.stopPropagation()}>\r\n      <OpenInNewIcon sx={{ color: 'rgb(63, 81, 181)' }} />\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport const DownloadProject = () => {\r\n  const record = useRecordContext();\r\n  if (!record) {\r\n    return <></>;\r\n  }\r\n  return (\r\n    <Link title=\"Download\" href={record.download} target=\"_blank\" onClick={(e) => e.stopPropagation()}>\r\n      <IconButton>\r\n        <DownloadIcon sx={{ color: 'rgb(63, 81, 181)' }} />\r\n      </IconButton>\r\n    </Link>\r\n  );\r\n};\r\n\r\n  \r\n  ","import Grid from \"@mui/material/Grid\";\nimport { Typography } from \"@mui/material\";\nimport { TextField, PasswordInput } from \"react-admin\";\nimport * as React from \"react\";\nimport { useRecordContext, useRedirect } from \"react-admin\";\nimport { Create, SimpleForm } from 'react-admin';\nimport { TextInput } from 'react-admin';\nimport {ApiFabCreate} from './apifab/ApiFabCreate.tsx'\nimport {ShowApiFab} from './apifab/ApiFabShow.tsx'\nimport { Box } from '@mui/material';\n\nexport * from \"./external/UserPasswordTab\";\nexport * from \"./apifab/DBCreate.tsx\";\nexport * from \"./external\";\nexport * from \"./apifab/ApiFabComponents.tsx\"\nexport * from './apifab/ApiFab'\n\nexport const SampleColumnField = ({ attribute }: { attribute: any }) => {\n  console.log(\"attribute: \", attribute);\n  return (\n    <TextField\n      source={attribute.name}\n      key={attribute.name}\n      style={{ color: \"red\" }}\n    />\n  );\n};\n\nexport const EmployeeLabel = (props: any) => {\n  const employee = props.instance;\n  return (\n    <div>\n      {\" \"}\n      {employee.attributes?.FirstName} {employee.attributes?.LastName}\n    </div>\n  );\n};\n\nexport const CustomerLabel = (props: any) => {\n  const customer = props.instance;\n  return (\n    <div>\n      {\" \"}\n      <b>{customer.attributes?.CompanyName}</b>{\" \"}\n      <i>{customer.attributes?.ContactName}</i>\n    </div>\n  );\n};\n\nexport const UserPasswordField = (props: any) => {\n  if (props.mode === \"list\") {\n    return <span />;\n  }\n  if (props.mode === \"edit\") {\n    return (\n      <>\n        <Grid item xs={12} spacing={4}>\n          <Typography variant=\"h6\" component=\"h6\">\n            Change Password\n          </Typography>\n        </Grid>\n        <Grid item xs={4} spacing={4}>\n          <PasswordInput source=\"_password\" />{\" \"}\n        </Grid>\n        <Grid item xs={4} spacing={4}>\n          <PasswordInput source=\"_password\" />{\" \"}\n        </Grid>\n        <Grid item xs={4} spacing={4}></Grid>\n      </>\n    );\n  }\n  return <></>;\n};\n\nexport const CustomTab = (props: any) => {\n  // eslint-disable-next-line no-unused-vars\n  const record = useRecordContext();\n  return <div>Some Text</div>;\n};\n\n\nexport const CreateLocation = (props) => {\n  return <>\n  <Create>\n    <ApiFabCreate attributes={[]} />\n  </Create>\n  </>\n};\n\nexport const Overlay = () => (\n  // full-screen overlay\n  <>\n    <div id=\"popup-overlay\"></div>\n  </>\n);\n\n\nexport const showApiFab = () => {\n  return <ShowApiFab />\n}\n\nexport const CreateApiFab = () => {\n  \n  const redirect = useRedirect();\n  React.useEffect(() => {\n      // edit view\n      redirect('/Home')\n  }, [])\n\n  return <></>\n}\n\nexport const DateTime = ({ attribute, mode, ...props}: {attribute: any, mode: string}) => {\n  const record = useRecordContext();\n  if(!record || !attribute?.name){\n    return <></>\n  }\n  console.log(\"DateTime: \", attribute, mode, props);\n  const value = record[attribute?.name].split('.')[0];\n  return <>{value}</>;\n}\n\nconst redactConnstr = (connstr: string) => {\n  let redacted = null\n  if(connstr){\n    const groups = connstr.match(/(.*):(.*)@(.*)/)\n    redacted = groups ? `${groups[1]}:********@${groups[3]}` : connstr; \n  }\n  return <>{redacted}</>;\n}\n\nexport const ConnectionString = (props: any) => {\n  const record = useRecordContext();\n  //return <span style={{width: \"16em\", display: \"inline-block\", wordWrap: \"break-word\", wordBreak: \"break-all\"}}>{redactConnstr(record?.connection_string)}</span>;\n  return <span>{redactConnstr(record?.connection_string)}</span>;\n  \n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M5 20h14v-2H5zM19 9h-4V3H9v6H5l7 7z\"\n}), 'Download');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3z\"\n}), 'OpenInNew');"],"names":["UserPasswordTab","conf","useConf","notify","useNotify","record","useRecordContext","pwdValue","setPwdValue","useDataProvider","useState","rpwdValue","setRPwdValue","submitColor","setSubmitColor","_jsx","Box","component","sx","m","width","noValidate","autoComplete","children","_jsxs","FormControl","Grid","item","xs","spacing","Typography","variant","TextField","id","label","type","onChange","e","target","value","length","Button","color","onClick","handleSubmit","data","password","httpAuthClient","concat","api_root","method","body","JSON","stringify","then","catch","ApiUserPasswordTab","curPwdValue","setCurPwdValue","newPwdValue","setNewPwdValue","MyComp","props","Running","textAlign","display","alignItems","StartStopModal","ProjectLink","running","Link","href","link","stopPropagation","OpenInNewIcon","DownloadProject","title","download","IconButton","DownloadIcon","_Fragment","SampleColumnField","_ref","attribute","console","log","source","name","style","EmployeeLabel","_employee$attributes","_employee$attributes2","employee","instance","attributes","FirstName","LastName","CustomerLabel","_customer$attributes","_customer$attributes2","customer","CompanyName","ContactName","UserPasswordField","mode","PasswordInput","CustomTab","CreateLocation","Create","ApiFabCreate","Overlay","showApiFab","ShowApiFab","CreateApiFab","redirect","useRedirect","React","DateTime","_ref2","split","redactConnstr","connstr","redacted","groups","match","ConnectionString","connection_string","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}