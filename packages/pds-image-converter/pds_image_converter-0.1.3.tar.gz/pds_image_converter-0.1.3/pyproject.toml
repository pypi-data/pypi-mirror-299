[tool.poetry]
name = "pds-image-converter"
# the version is kept as git tag and propaagated into packages automatically by poetry-dynamic-versioning (see below).
version = "0.1.3"
description = "A general porpuse image converter with configurable filters developed with PDS2JPG conversion in mind."
authors = ["Luca Penasa <luca.penasa@inaf.it>"]
readme = "README.md"
packages = [{ include = "pds_image_converter", from = "src" }]

[tool.poetry.scripts]
pds-image-converter = "pds_image_converter.cli:main"

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
janusreader = ">=0.10.0"
astropy = ">=5.0.0"
attrs = ">=21.0.0"
loguru = ">=0.7.0"
click = "^8.1.7"
# piexif = "^1.1.3" # this will be implemented in the future
pillow = "^10.3.0"
# tqdm = "^4.66.4" # this will be imaplemented in the future
cattrs = "^23.2.3"
tomlkit = "^0.13.0" # required for cattrs to load toml
pdr = "^1.2.3"


[tool.poetry.group.dev.dependencies]
mkdocstrings = { version = ">=0.23", extras = ["python"] }
mkdocs-material = "*"
mypy = "*"
pre-commit = "*"
pymdown-extensions = "*"
pytest = "*"
pytest-github-actions-annotate-failures = "*"
pytest-cov = "*"
python-kacl = "*"
ruff = ">=0.2.0"

[tool.poetry.group.notebook.dependencies]
matplotlib = "^3.9.1"
ipykernel = "^6.29.5"


[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry-dynamic-versioning]
enable = false
style = "semver"


[tool.ruff]
target-version = "py310" # The lowest supported version

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 20

[tool.ruff.lint]
# By default, enable all the lint rules.
# Add to the ignore list below if you don't want some rules.
# If you need some ignores for certain modules, see tool.ruff.lint.per-file-ignores below.
# For individual ignore cases, prefer inline `# noqa`s within the code.
select = ["ALL"]
ignore = [
    "ANN",    # Type hints related, let mypy handle these.
    "ERA001", # allow commented-out code
    # "D",   # Docstrings related, way too strict to our taste
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
    "S101", # "Use of `assert` detected"
    "ARG",  # "Unused function argument". Fixtures are often unused.
    "S105", # "Possible hardcoded password".
]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pep8-naming]
classmethod-decorators = [
    "classmethod",
    "pydantic.validator",
    "pydantic.root_validator",
]

[tool.pytest.ini_options]
addopts = """\
    --cov image_converter2 \
    --cov tests \
    --cov-report term-missing \
    --no-cov-on-fail \
"""

[tool.coverage.report]
fail_under = 100
exclude_lines = ['if TYPE_CHECKING:', 'pragma: no cover']

[tool.mypy]
# This is the global mypy configuration.
# Avoid changing this!
strict = true                   # See all the enabled flags `mypy --help | grep -A 10 'Strict mode'`
disallow_any_unimported = false
show_error_codes = true
# disable_error_code = 'import-untyped'


[[tool.mypy.overrides]]
module = "pdr.pds4_tools.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "piexif.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "JanusReader.*"
ignore_missing_imports = true


plugins = "./mypy_attrs_plugin.py"
# If you need to ignore something for some specific module,
# add overrides for them. Avoid changing the global config!
# For example:
# [[tool.mypy.overrides]]
# module = [
#  "my_unpyted_dependency1.*",
#  "my_unpyted_dependency2.*"
# ]
# ignore_missing_imports = true

# [[tool.mypy.overrides]]
# module = [
#   "tests/my_thing/test_my_thing",
# ]
# disallow_untyped_defs = false
