[tool.poetry]
name = "py3-tts-wrapper"
version = "0.9.16"
description = "TTS-Wrapper makes it easier to use text-to-speech APIs by providing a unified and easy-to-use interface."
authors = ["Giulio Bottari <giuliobottari@gmail.com>","Will Wade <willwade@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/willwade/tts-wrapper"
documentation = "https://github.com/willwade/tts-wrapper"
keywords = [ "tts", "text-to-speech", "speech synthesis", "polly", "sapi", "mms", "gTTS", "witai", "elevenlabs" ]
packages = [{include = "tts_wrapper"}]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/willwade/tts-wrapper/issues"

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
requests = { version = "^2.31.0", optional = true }
numpy = [
    { version = "1.24.3", python = "~3.10", optional = false },
    { version = "1.26.4", python = ">=3.11", optional = false }
]
sounddevice = "^0.5.0"
soundfile = "^0.12.1"
boto3 = {version = "^1.34.137", optional = true}
ibm-watson = {version = "^8.1.0", optional = true}
google-cloud-texttospeech = {version = "^2.12.0", optional = true}
pyttsx3 = {version = "^2.98", optional = true}
azure-cognitiveservices-speech = {version = "^1.15.0",  optional = true}
winrt-runtime = { version = "^2.0.1", markers = "sys_platform == 'win32'", optional = true }
sherpa-onnx ={ version = "^1.10.17", optional = true }
gTTS={ version = "^2.5.2", optional = true }
pymp3 = "^0.2.0"

[tool.poetry.extras]
google = ["google-cloud-texttospeech"]
watson = ["ibm-watson", "websocket", "requests"]
polly = ["boto3"]
microsoft = ["azure.cognitiveservices.speech"]
elevenlabs = ["requests","numpy"]
witai = ["requests"]
sapi = ["pyttsx3"]
uwp = ["winrt_windows.media.speechsynthesis","winrt_windows.storage.streams","winrt_windows.foundationtime"]
sherpaonnx = ["sherpa-onnx", "requests", "numpy"]
googletrans = ["gTTS"]


[tool.poetry.group.dev.dependencies]
pyinstrument = "^4.7.3"
pytest = "^6.2.1"
pytest-mock = "^3.5.1"
black = {version = "^22.1.0", allow-prereleases = true}
types-requests = "^2.27.31"
mypy = "^0.971"
types-boto3 = "^1.0.2"
pytest-cov = "^3.0.0"
filetype = "^1.0.13"
wheel = "^0.43.0"
setuptools = "^71.1.0"
flake8 = "^7.1.1"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.poetry.scripts]
postinstall = "scripts.install_dependencies:main"

[tool.poetry-dynamic-versioning]
enable = false

[tool.pytest.ini_options]
markers = [
    "synthetic: mark a test as synthetic"
]