[project]
name = "code-payload"
dynamic = ["version", "readme"]
description = "Giving language models context of your codebase"
authors = [
    { name = "darth-veitcher", email = "1722315+darth-veitcher@users.noreply.github.com" }
]
dependencies = [
    "rich>=13.8.0",
    "chardet>=5.2.0",
    "pydantic>=2.8.2",
    "omegaconf>=2.3.0",
    "jinja2>=3.1.4",
    "typer>=0.12.5",
    "tiktoken>=0.7.0",
    "hatch-fancy-pypi-readme>=24.1.0",
]
license = { file = "LICENSE" }
requires-python = ">= 3.8"

[project.urls]
Homepage = "https://github.com/darth-veitcher/code-payload"
Source = "https://github.com/darth-veitcher/code-payload"
Issues = "https://github.com/darth-veitcher/code-payload/issues"
Documentation = "https://github.com/darth-veitcher/code-payload"

[project.scripts]
code-payload = "code_payload.cli:app"

[project.optional-dependencies]
docs = [
    "mkdocs>=1.6.1",
    "mkdocstrings[python]>=0.26.0",
    "mkdocs-material>=9.5.34",
    "mkdocs-gen-files>=0.5.0",
    "mkdocs-literate-nav>=0.6.1",
    "mkdocs-section-index>=0.3.9",
]

[build-system]
requires = ["hatchling", "hatch.vcs", "hatch-fancy-pypi-readme"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = [
    "pytest>=8.3.2",
    "pytest-cov>=5.0.0"
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/code_payload"]

[tool.hatch.version]
source = "vcs"
[tool.hatch.version.raw-options]
local_scheme = "no-local-version"
[tool.hatch.build.hooks.vcs]
version-file = "_version.py"

[tool.hatch.metadata.hooks.fancy-pypi-readme]
content-type = "text/markdown"
fragments = [
  { path = "README.md", start-after = "<!-- START fancy-pypi-readme -->", end-before = "<!-- END fancy-pypi-readme -->" },
#   { path = "AUTHORS.md" },
#   { path = "CHANGES.md" },
]



[tool.pydocstyle]
convention = "google"
add-ignore = ["D105", "D107"]

[tool.pytest.ini_options]
addopts = "-v --doctest-modules --cov --cov-report=term-missing"
testpaths = ["tests"]
[tool.coverage.run]
branch = true
source = ["src"]
omit = ["*tests*", "*migrations*", ".venv/*", "*.env"]
[tool.coverage.report]
show_missing = true
fail_under = 80     # let's set something sensible on Day 1 ...
