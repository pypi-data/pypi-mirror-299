# coding: utf-8

"""
    scibec

    scibec

    The version of the OpenAPI document: 1.14.2
    Contact: klaus.wakonig@psi.ch
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from py_scibec_openapi_client.models.scan_data_with_relations import ScanDataWithRelations

class TestScanDataWithRelations(unittest.TestCase):
    """ScanDataWithRelations unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ScanDataWithRelations:
        """Test ScanDataWithRelations
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ScanDataWithRelations`
        """
        model = ScanDataWithRelations()
        if include_optional:
            return ScanDataWithRelations(
                id = '',
                read_acl = [
                    ''
                    ],
                write_acl = [
                    ''
                    ],
                owner = [
                    ''
                    ],
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                created_by = '',
                name = '',
                data = None,
                file_path = '',
                scan_id = '',
                scan = py_scibec_openapi_client.models.scan_with_relations.ScanWithRelations(
                    id = '', 
                    read_acl = [
                        ''
                        ], 
                    write_acl = [
                        ''
                        ], 
                    owner = [
                        ''
                        ], 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    created_by = '', 
                    scan_type = '', 
                    scan_parameter = py_scibec_openapi_client.models.scan_parameter.scanParameter(), 
                    user_parameter = py_scibec_openapi_client.models.user_parameter.userParameter(), 
                    scan_id = '', 
                    request_id = '', 
                    queue_id = '', 
                    exit_status = '', 
                    scan_number = 1.337, 
                    metadata = py_scibec_openapi_client.models.metadata.metadata(), 
                    files = py_scibec_openapi_client.models.files.files(), 
                    session_id = '', 
                    dataset_id = '', 
                    experiment_id = '', 
                    session = py_scibec_openapi_client.models.session_with_relations.SessionWithRelations(
                        id = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        created_by = '', 
                        name = '', 
                        experiment_id = '', 
                        session_config = py_scibec_openapi_client.models.session_config.sessionConfig(), 
                        experiment = py_scibec_openapi_client.models.experiment_with_relations.ExperimentWithRelations(
                            id = '', 
                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            created_by = '', 
                            name = '', 
                            beamline_id = '', 
                            write_account = '', 
                            user_id = '', 
                            logbook = '', 
                            samples = [
                                ''
                                ], 
                            experiment_config = py_scibec_openapi_client.models.experiment_config.experimentConfig(), 
                            experiment_info = py_scibec_openapi_client.models.experiment_info.experimentInfo(), 
                            active_session = '', 
                            datasets = [
                                py_scibec_openapi_client.models.session_with_relations.SessionWithRelations(
                                    id = '', 
                                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    created_by = '', 
                                    name = '', 
                                    experiment_id = '', 
                                    session_config = py_scibec_openapi_client.models.session_config.sessionConfig(), 
                                    scans = [
                                        py_scibec_openapi_client.models.scan_with_relations.ScanWithRelations(
                                            id = '', 
                                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            created_by = '', 
                                            scan_type = '', 
                                            scan_parameter = py_scibec_openapi_client.models.scan_parameter.scanParameter(), 
                                            user_parameter = py_scibec_openapi_client.models.user_parameter.userParameter(), 
                                            scan_id = '', 
                                            request_id = '', 
                                            queue_id = '', 
                                            exit_status = '', 
                                            scan_number = 1.337, 
                                            metadata = py_scibec_openapi_client.models.metadata.metadata(), 
                                            files = py_scibec_openapi_client.models.files.files(), 
                                            session_id = '', 
                                            dataset_id = '', 
                                            experiment_id = '', 
                                            dataset = py_scibec_openapi_client.models.dataset_with_relations.DatasetWithRelations(
                                                id = '', 
                                                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                created_by = '', 
                                                name = '', 
                                                number = 1.337, 
                                                experiment_id = '', ), 
                                            scan_data = [
                                                { }
                                                ], )
                                        ], 
                                    devices = [
                                        py_scibec_openapi_client.models.device_with_relations.DeviceWithRelations(
                                            id = '', 
                                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            created_by = '', 
                                            name = '', 
                                            description = '', 
                                            parent_id = '', 
                                            session_id = '', 
                                            enabled = True, 
                                            read_only = True, 
                                            software_trigger = True, 
                                            device_class = '', 
                                            device_tags = [
                                                ''
                                                ], 
                                            device_config = py_scibec_openapi_client.models.device_config.deviceConfig(), 
                                            readout_priority = 'on_request', 
                                            on_failure = 'raise', 
                                            user_parameter = py_scibec_openapi_client.models.user_parameter.userParameter(), 
                                            subdevices = [
                                                py_scibec_openapi_client.models.device_with_relations.DeviceWithRelations(
                                                    id = '', 
                                                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                                    created_by = '', 
                                                    name = '', 
                                                    description = '', 
                                                    parent_id = '', 
                                                    session_id = '', 
                                                    enabled = True, 
                                                    read_only = True, 
                                                    software_trigger = True, 
                                                    device_class = '', 
                                                    device_config = py_scibec_openapi_client.models.device_config.deviceConfig(), 
                                                    readout_priority = 'on_request', 
                                                    on_failure = 'raise', 
                                                    user_parameter = py_scibec_openapi_client.models.user_parameter.userParameter(), 
                                                    parent = , )
                                                ], 
                                            parent = , )
                                        ], )
                                ], 
                            scans = [
                                
                                ], 
                            experiment_accounts = [
                                { }
                                ], 
                            sessions = [
                                
                                ], ), 
                        scans = , 
                        devices = [
                            
                            ], ), 
                    dataset = py_scibec_openapi_client.models.dataset_with_relations.DatasetWithRelations(
                        id = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        created_by = '', 
                        name = '', 
                        number = 1.337, 
                        experiment_id = '', ), 
                    experiment = py_scibec_openapi_client.models.experiment_with_relations.ExperimentWithRelations(
                        id = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        created_by = '', 
                        name = '', 
                        beamline_id = '', 
                        write_account = '', 
                        user_id = '', 
                        logbook = '', 
                        experiment_config = py_scibec_openapi_client.models.experiment_config.experimentConfig(), 
                        experiment_info = py_scibec_openapi_client.models.experiment_info.experimentInfo(), 
                        active_session = '', ), 
                    scan_data = [
                        { }
                        ], )
            )
        else:
            return ScanDataWithRelations(
        )
        """

    def testScanDataWithRelations(self):
        """Test ScanDataWithRelations"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
