/*
 * Bitwarden Internal API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SecretsManagerPlanFeaturesResponseModel {
    #[serde(rename = "maxServiceAccounts", skip_serializing_if = "Option::is_none")]
    pub max_service_accounts: Option<i32>,
    #[serde(
        rename = "allowServiceAccountsAutoscale",
        skip_serializing_if = "Option::is_none"
    )]
    pub allow_service_accounts_autoscale: Option<bool>,
    #[serde(
        rename = "stripeServiceAccountPlanId",
        skip_serializing_if = "Option::is_none"
    )]
    pub stripe_service_account_plan_id: Option<String>,
    #[serde(
        rename = "additionalPricePerServiceAccount",
        skip_serializing_if = "Option::is_none"
    )]
    pub additional_price_per_service_account: Option<f64>,
    #[serde(rename = "baseServiceAccount", skip_serializing_if = "Option::is_none")]
    pub base_service_account: Option<i32>,
    #[serde(
        rename = "maxAdditionalServiceAccount",
        skip_serializing_if = "Option::is_none"
    )]
    pub max_additional_service_account: Option<i32>,
    #[serde(
        rename = "hasAdditionalServiceAccountOption",
        skip_serializing_if = "Option::is_none"
    )]
    pub has_additional_service_account_option: Option<bool>,
    #[serde(rename = "stripeSeatPlanId", skip_serializing_if = "Option::is_none")]
    pub stripe_seat_plan_id: Option<String>,
    #[serde(
        rename = "hasAdditionalSeatsOption",
        skip_serializing_if = "Option::is_none"
    )]
    pub has_additional_seats_option: Option<bool>,
    #[serde(rename = "basePrice", skip_serializing_if = "Option::is_none")]
    pub base_price: Option<f64>,
    #[serde(rename = "seatPrice", skip_serializing_if = "Option::is_none")]
    pub seat_price: Option<f64>,
    #[serde(rename = "baseSeats", skip_serializing_if = "Option::is_none")]
    pub base_seats: Option<i32>,
    #[serde(rename = "maxSeats", skip_serializing_if = "Option::is_none")]
    pub max_seats: Option<i32>,
    #[serde(rename = "maxAdditionalSeats", skip_serializing_if = "Option::is_none")]
    pub max_additional_seats: Option<i32>,
    #[serde(rename = "allowSeatAutoscale", skip_serializing_if = "Option::is_none")]
    pub allow_seat_autoscale: Option<bool>,
    #[serde(rename = "maxProjects", skip_serializing_if = "Option::is_none")]
    pub max_projects: Option<i32>,
}

impl SecretsManagerPlanFeaturesResponseModel {
    pub fn new() -> SecretsManagerPlanFeaturesResponseModel {
        SecretsManagerPlanFeaturesResponseModel {
            max_service_accounts: None,
            allow_service_accounts_autoscale: None,
            stripe_service_account_plan_id: None,
            additional_price_per_service_account: None,
            base_service_account: None,
            max_additional_service_account: None,
            has_additional_service_account_option: None,
            stripe_seat_plan_id: None,
            has_additional_seats_option: None,
            base_price: None,
            seat_price: None,
            base_seats: None,
            max_seats: None,
            max_additional_seats: None,
            allow_seat_autoscale: None,
            max_projects: None,
        }
    }
}
