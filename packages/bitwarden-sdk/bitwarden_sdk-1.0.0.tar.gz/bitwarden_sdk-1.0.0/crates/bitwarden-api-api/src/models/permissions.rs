/*
 * Bitwarden Internal API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Permissions {
    #[serde(rename = "accessEventLogs", skip_serializing_if = "Option::is_none")]
    pub access_event_logs: Option<bool>,
    #[serde(rename = "accessImportExport", skip_serializing_if = "Option::is_none")]
    pub access_import_export: Option<bool>,
    #[serde(rename = "accessReports", skip_serializing_if = "Option::is_none")]
    pub access_reports: Option<bool>,
    #[serde(
        rename = "createNewCollections",
        skip_serializing_if = "Option::is_none"
    )]
    pub create_new_collections: Option<bool>,
    #[serde(rename = "editAnyCollection", skip_serializing_if = "Option::is_none")]
    pub edit_any_collection: Option<bool>,
    #[serde(
        rename = "deleteAnyCollection",
        skip_serializing_if = "Option::is_none"
    )]
    pub delete_any_collection: Option<bool>,
    #[serde(
        rename = "editAssignedCollections",
        skip_serializing_if = "Option::is_none"
    )]
    pub edit_assigned_collections: Option<bool>,
    #[serde(
        rename = "deleteAssignedCollections",
        skip_serializing_if = "Option::is_none"
    )]
    pub delete_assigned_collections: Option<bool>,
    #[serde(rename = "manageGroups", skip_serializing_if = "Option::is_none")]
    pub manage_groups: Option<bool>,
    #[serde(rename = "managePolicies", skip_serializing_if = "Option::is_none")]
    pub manage_policies: Option<bool>,
    #[serde(rename = "manageSso", skip_serializing_if = "Option::is_none")]
    pub manage_sso: Option<bool>,
    #[serde(rename = "manageUsers", skip_serializing_if = "Option::is_none")]
    pub manage_users: Option<bool>,
    #[serde(
        rename = "manageResetPassword",
        skip_serializing_if = "Option::is_none"
    )]
    pub manage_reset_password: Option<bool>,
    #[serde(rename = "manageScim", skip_serializing_if = "Option::is_none")]
    pub manage_scim: Option<bool>,
}

impl Permissions {
    pub fn new() -> Permissions {
        Permissions {
            access_event_logs: None,
            access_import_export: None,
            access_reports: None,
            create_new_collections: None,
            edit_any_collection: None,
            delete_any_collection: None,
            edit_assigned_collections: None,
            delete_assigned_collections: None,
            manage_groups: None,
            manage_policies: None,
            manage_sso: None,
            manage_users: None,
            manage_reset_password: None,
            manage_scim: None,
        }
    }
}
