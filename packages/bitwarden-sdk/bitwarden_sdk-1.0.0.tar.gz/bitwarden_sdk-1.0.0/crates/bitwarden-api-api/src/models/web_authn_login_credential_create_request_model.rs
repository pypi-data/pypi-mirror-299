/*
 * Bitwarden Internal API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WebAuthnLoginCredentialCreateRequestModel {
    #[serde(rename = "deviceResponse")]
    pub device_response: Box<models::AuthenticatorAttestationRawResponse>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "token")]
    pub token: String,
    #[serde(rename = "supportsPrf")]
    pub supports_prf: bool,
    #[serde(rename = "encryptedUserKey", skip_serializing_if = "Option::is_none")]
    pub encrypted_user_key: Option<String>,
    #[serde(rename = "encryptedPublicKey", skip_serializing_if = "Option::is_none")]
    pub encrypted_public_key: Option<String>,
    #[serde(
        rename = "encryptedPrivateKey",
        skip_serializing_if = "Option::is_none"
    )]
    pub encrypted_private_key: Option<String>,
}

impl WebAuthnLoginCredentialCreateRequestModel {
    pub fn new(
        device_response: models::AuthenticatorAttestationRawResponse,
        name: String,
        token: String,
        supports_prf: bool,
    ) -> WebAuthnLoginCredentialCreateRequestModel {
        WebAuthnLoginCredentialCreateRequestModel {
            device_response: Box::new(device_response),
            name,
            token,
            supports_prf,
            encrypted_user_key: None,
            encrypted_public_key: None,
            encrypted_private_key: None,
        }
    }
}
