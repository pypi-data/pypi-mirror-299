/*
 * Bitwarden Internal API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ConfigResponseModel {
    #[serde(rename = "object", skip_serializing_if = "Option::is_none")]
    pub object: Option<String>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    #[serde(rename = "gitHash", skip_serializing_if = "Option::is_none")]
    pub git_hash: Option<String>,
    #[serde(rename = "server", skip_serializing_if = "Option::is_none")]
    pub server: Option<Box<models::ServerConfigResponseModel>>,
    #[serde(rename = "environment", skip_serializing_if = "Option::is_none")]
    pub environment: Option<Box<models::EnvironmentConfigResponseModel>>,
    #[serde(rename = "featureStates", skip_serializing_if = "Option::is_none")]
    pub feature_states: Option<std::collections::HashMap<String, serde_json::Value>>,
}

impl ConfigResponseModel {
    pub fn new() -> ConfigResponseModel {
        ConfigResponseModel {
            object: None,
            version: None,
            git_hash: None,
            server: None,
            environment: None,
            feature_states: None,
        }
    }
}
