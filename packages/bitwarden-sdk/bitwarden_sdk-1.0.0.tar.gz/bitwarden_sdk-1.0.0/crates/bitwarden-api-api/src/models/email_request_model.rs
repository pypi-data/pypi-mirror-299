/*
 * Bitwarden Internal API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct EmailRequestModel {
    #[serde(rename = "masterPasswordHash", skip_serializing_if = "Option::is_none")]
    pub master_password_hash: Option<String>,
    #[serde(rename = "otp", skip_serializing_if = "Option::is_none")]
    pub otp: Option<String>,
    #[serde(
        rename = "authRequestAccessCode",
        skip_serializing_if = "Option::is_none"
    )]
    pub auth_request_access_code: Option<String>,
    #[serde(rename = "secret", skip_serializing_if = "Option::is_none")]
    pub secret: Option<String>,
    #[serde(rename = "newEmail")]
    pub new_email: String,
    #[serde(rename = "newMasterPasswordHash")]
    pub new_master_password_hash: String,
    #[serde(rename = "token")]
    pub token: String,
    #[serde(rename = "key")]
    pub key: String,
}

impl EmailRequestModel {
    pub fn new(
        new_email: String,
        new_master_password_hash: String,
        token: String,
        key: String,
    ) -> EmailRequestModel {
        EmailRequestModel {
            master_password_hash: None,
            otp: None,
            auth_request_access_code: None,
            secret: None,
            new_email,
            new_master_password_hash,
            token,
            key,
        }
    }
}
