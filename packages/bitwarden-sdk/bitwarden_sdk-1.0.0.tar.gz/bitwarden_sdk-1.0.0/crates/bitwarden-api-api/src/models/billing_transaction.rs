/*
 * Bitwarden Internal API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BillingTransaction {
    #[serde(rename = "createdDate", skip_serializing_if = "Option::is_none")]
    pub created_date: Option<String>,
    #[serde(rename = "amount", skip_serializing_if = "Option::is_none")]
    pub amount: Option<f64>,
    #[serde(rename = "refunded", skip_serializing_if = "Option::is_none")]
    pub refunded: Option<bool>,
    #[serde(rename = "partiallyRefunded", skip_serializing_if = "Option::is_none")]
    pub partially_refunded: Option<bool>,
    #[serde(rename = "refundedAmount", skip_serializing_if = "Option::is_none")]
    pub refunded_amount: Option<f64>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<models::TransactionType>,
    #[serde(rename = "paymentMethodType", skip_serializing_if = "Option::is_none")]
    pub payment_method_type: Option<models::PaymentMethodType>,
    #[serde(rename = "details", skip_serializing_if = "Option::is_none")]
    pub details: Option<String>,
}

impl BillingTransaction {
    pub fn new() -> BillingTransaction {
        BillingTransaction {
            created_date: None,
            amount: None,
            refunded: None,
            partially_refunded: None,
            refunded_amount: None,
            r#type: None,
            payment_method_type: None,
            details: None,
        }
    }
}
