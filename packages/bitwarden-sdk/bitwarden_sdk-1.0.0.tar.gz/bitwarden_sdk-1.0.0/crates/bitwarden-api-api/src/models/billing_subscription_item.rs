/*
 * Bitwarden Internal API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: latest
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BillingSubscriptionItem {
    #[serde(rename = "productId", skip_serializing_if = "Option::is_none")]
    pub product_id: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "amount", skip_serializing_if = "Option::is_none")]
    pub amount: Option<f64>,
    #[serde(rename = "quantity", skip_serializing_if = "Option::is_none")]
    pub quantity: Option<i32>,
    #[serde(rename = "interval", skip_serializing_if = "Option::is_none")]
    pub interval: Option<String>,
    #[serde(
        rename = "sponsoredSubscriptionItem",
        skip_serializing_if = "Option::is_none"
    )]
    pub sponsored_subscription_item: Option<bool>,
    #[serde(
        rename = "addonSubscriptionItem",
        skip_serializing_if = "Option::is_none"
    )]
    pub addon_subscription_item: Option<bool>,
}

impl BillingSubscriptionItem {
    pub fn new() -> BillingSubscriptionItem {
        BillingSubscriptionItem {
            product_id: None,
            name: None,
            amount: None,
            quantity: None,
            interval: None,
            sponsored_subscription_item: None,
            addon_subscription_item: None,
        }
    }
}
