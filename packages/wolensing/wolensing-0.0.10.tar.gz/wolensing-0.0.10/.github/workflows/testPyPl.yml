# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Test build

on:
  push:
    branches: [dev]

permissions:
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/checkout@v4
    - name: Dynamic versioning with date and time
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        VERSION=$(date +"%Y.%m.%d.%H%M")
        echo "__version__ = \"$VERSION\"" > wolensing/__about__.py
        git add wolensing/__about__.py
        git commit -m "Dynamic versioning: $VERSION"
        git tag $VERSION
        git push
        git push --tags
    
    - name: Install latex
      run: |
        sudo apt install texlive-fonts-recommended texlive-fonts-extra
        sudo apt install dvipng cm-super
    - name: Install lensinggw
      run: |
        git clone https://gitlab.com/gpagano/lensinggw.git
        cd lensinggw/
        python setup.py install
        cd ../
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        python -m pip install --upgrade build twine pytest numba
        pip install .
    - name: Test with pytest
      run: |
        cd test/
        python3 -m pytest
    - name: Build and upload to PyPI
      if: ${{ matrix.python-version == '3.11'}}
      run: |
        python -m build
        python -m twine upload --repository testpypi dist/*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TWINE_TEST_TOKEN }} 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
