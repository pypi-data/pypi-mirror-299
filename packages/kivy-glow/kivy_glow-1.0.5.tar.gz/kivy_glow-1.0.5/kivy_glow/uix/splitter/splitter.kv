<GlowSplitterStrip>:
    canvas:
        Color:
            rgba: (0, 0, 0, 0) if self.parent and self.parent.sizable_from[0] in  ('t', 'b') else self.theme_cls.primary_color
        SmoothRoundedRectangle:
            pos: (root.center_x - root.width / 4, root.center_y + root.width - root.width / 4)
            size: (root.width / 2, root.width / 2)
            radius: [root.width / 4, ]
        SmoothRoundedRectangle:
            pos: (root.center_x - root.width / 4, root.center_y - root.width / 4)
            size: (root.width / 2, root.width / 2)
            radius: [root.width / 4, ]
        SmoothRoundedRectangle:
            pos: (root.center_x - root.width / 4, root.center_y - root.width - root.width / 4)
            size: (root.width / 2, root.width / 2)
            radius: [root.width / 4, ]
        Color:
            rgba: self.theme_cls.primary_color if self.parent and self.parent.sizable_from[0] in  ('t', 'b') else (0, 0, 0, 0)
        SmoothRoundedRectangle:
            pos: (root.center_x + root.height - root.height / 4, root.center_y - root.height / 4)
            size: (root.height / 2, root.height / 2)
            radius: [root.height / 4, ]
        SmoothRoundedRectangle:
            pos: (root.center_x - root.height / 4, root.center_y - root.height / 4)
            size: (root.height / 2, root.height / 2)
            radius: [root.height / 4, ]
        SmoothRoundedRectangle:
            pos: (root.center_x - root.height - root.height / 4, root.center_y - root.height / 4)
            size: (root.height / 2, root.height / 2)
            radius: [root.height / 4, ]

    bg_color: self.theme_cls.background_dark_color

<GlowSplitterWidgetStrip>:
    canvas:
        Color:
            rgba: self.theme_cls.primary_color if self.parent and self.parent.orientation == 'horizontal' else (0, 0, 0, 0)
        SmoothRoundedRectangle:
            pos: (root.center_x - root.width / 4, root.center_y + root.width - root.width / 4)
            size: (root.width / 2, root.width / 2)
            radius: [root.width / 4, ]
        SmoothRoundedRectangle:
            pos: (root.center_x - root.width / 4, root.center_y - root.width / 4)
            size: (root.width / 2, root.width / 2)
            radius: [root.width / 4, ]
        SmoothRoundedRectangle:
            pos: (root.center_x - root.width / 4, root.center_y - root.width - root.width / 4)
            size: (root.width / 2, root.width / 2)
            radius: [root.width / 4, ]
        Color:
            rgba: (0, 0, 0, 0) if self.parent and self.parent.orientation == 'horizontal' else self.theme_cls.primary_color
        SmoothRoundedRectangle:
            pos: (root.center_x + root.height - root.height / 4, root.center_y - root.height / 4)
            size: (root.height / 2, root.height / 2)
            radius: [root.height / 4, ]
        SmoothRoundedRectangle:
            pos: (root.center_x - root.height / 4, root.center_y - root.height / 4)
            size: (root.height / 2, root.height / 2)
            radius: [root.height / 4, ]
        SmoothRoundedRectangle:
            pos: (root.center_x - root.height - root.height / 4, root.center_y - root.height / 4)
            size: (root.height / 2, root.height / 2)
            radius: [root.height / 4, ]

    bg_color: self.theme_cls.background_dark_color

<GlowSplitter>:
    rescale_with_parent: True
    keep_within_parent: True
