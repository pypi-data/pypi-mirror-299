#:import LinearGradient kivy_glow.utils.gradient.LinearGradient
#: import available_palette kivy_glow.colors.available_palette
#: import colors kivy_glow.colors.colors
<GlowColorPicker>:
    border_radius: ['10dp', ]
    GlowBoxLayout:
        id: glow_colorpicker_content
        adaptive_height: True if root.size_hint_y is None else False
        orientation: 'vertical'
        padding: ['24dp', ]
        spacing: '5dp'
        GlowIcon:
            id: glow_colorpicker_icon
            pos_hint: {'left': 0} if root.icon_position == 'left' else ({'center_x': .5} if root.icon_position == 'center' else {'right': 1})
            icon_size: root.icon_size
            color: root._icon_color
            adaptive_height: True
            icon: root.icon
        GlowLabel:
            id: glow_colorpicker_title
            text: root.title if root.title else ''
            halign: root.title_halign
            font_style: 'HeadlineL'
            adaptive_height: True
        GlowScrollView:
            id: glow_colorpicker_content_container
            always_overscroll: False
            size_hint_y: None
            height: '300dp'
            GlowScreenManager:
                id: screen_manager
                GlowScreen:
                    name: 'gradient'
                    GlowBoxLayout:
                        orientation: 'vertical'
                        adaptive_height: True
                        spacing: '20dp'
                        padding: '10dp'
                        Widget:
                            canvas:
                                Color:
                                    rgba: root._gradient_color
                                Rectangle:
                                    size: self.size
                                    pos: self.pos
                                Color:
                                    rgba: 1, 1, 1, 1
                                Rectangle:
                                    size: self.size
                                    pos: self.pos
                                    texture: LinearGradient(colors=['#FFFFFFFF', '#FFFFFF00'], stops={0: .01}, size=self.size)
                                Color:
                                    rgba: 1, 1, 1, 1
                                Rectangle:
                                    size: self.size
                                    pos: self.pos
                                    texture: LinearGradient(colors=['#000000FF', '#00000000'], stops={0: .01}, angle=90, size=self.size)
                            id: glow_colorpicker_gradient_view
                            size_hint: 1, None
                            height: '200dp'
                            on_touch_move:
                                root.on_select_color_from_gradient(*args)
                            on_touch_down:
                                root.on_select_color_from_gradient(*args)
                        GlowSlider:
                            canvas.before:
                                Color:
                                    rgba: 1, 1, 1, 1
                                Rectangle:
                                    size: self.width - self.padding * 2, self.height / 2
                                    pos: self.pos[0] + self.padding, self.pos[1] + self.height / 4
                                    texture: LinearGradient(colors=['#FF0000FF', '#FFFF00FF', '#00FF00FF', '#00FFFFFF', '#0000FFFF', '#FF00FFFF', '#FF0000FF'], size=self.size)
                            id: glow_colorpicker_gradient_slider
                            thumb_active_color: root._gradient_color
                            thumb_inactive_color: root._gradient_color
                            _thumb_color: root._gradient_color
                            bg_color:( 0, 0, 0, 0)
                            value_track: False
                            max: 100_000_000
                            on_value:
                                root._gradient_color = root.get_color_from_gradient(self.value, self.max)
                                self._hint_text = root.get_formatted_color(root._gradient_color)

                        GlowSlider:
                            id: glow_colorpicker_gradient_opacity_slider
                            value: root._selected_color[3]
                            max: 1
                            on_value:
                                root._selected_color = root._selected_color[:3] + [self.value]
                GlowScreen:
                    name: 'palette'
                    GlowBoxLayout:
                        orientation: 'vertical'
                        GlowScrollView:
                            size_hint_y: None
                            height: panel.minimum_height + dp(5)
                            do_scroll_y: False
                            GlowPanel:
                                id: panel
                                mode: 'underline'
                                adaptive_width: True
                                tabs: [{'text': palette} for palette in available_palette]
                                on_active_tab:
                                    root._set_palette(self._active_tab.text)
                        GlowScrollView:
                            id: palette_scroll_view
                            bar_inactive_color: app.theme_cls.primary_color[:3] + [.2]
                            bar_color: app.theme_cls.primary_color
                            scroll_type: ['bars', 'content']
                            pos_hint: {'center_x': .5}
                            always_overscroll: False
                            bar_width: '5dp'
                GlowScreen:
                    name: 'tuner'
                    GlowBoxLayout:
                        orientation: 'vertical'
                        spacing: '20dp'
                        padding: '10dp'
                        GlowSlider:
                            canvas.before:
                                Color:
                                    rgba: 1, 1, 1, 1
                                Rectangle:
                                    size: self.width - self.padding * 2, self.height / 2
                                    pos: self.pos[0] + self.padding, self.pos[1] + self.height / 4
                                    texture: LinearGradient(colors=['#000000FF', '#FF0000FF'], size=self.size)
                            id: glow_colorpicker_tune_red_slider
                            value: root._selected_color[0]
                            bg_color:( 0, 0, 0, 0)
                            value_track: False
                            max: 1
                            on_value:
                                root._selected_color = self.value, root._selected_color[1], root._selected_color[2], root._selected_color[3]
                        GlowHSpacer
                        GlowSlider:
                            canvas.before:
                                Color:
                                    rgba: 1, 1, 1, 1
                                Rectangle:
                                    size: self.width - self.padding * 2, self.height / 2
                                    pos: self.pos[0] + self.padding, self.pos[1] + self.height / 4
                                    texture: LinearGradient(colors=['#000000FF', '#00FF00FF'], size=self.size)
                            id: glow_colorpicker_tune_green_slider
                            value: root._selected_color[1]
                            bg_color:( 0, 0, 0, 0)
                            value_track: False
                            max: 1
                            on_value:
                                root._selected_color = root._selected_color[0], self.value, root._selected_color[2], root._selected_color[3]
                        GlowHSpacer
                        GlowSlider:
                            canvas.before:
                                Color:
                                    rgba: 1, 1, 1, 1
                                Rectangle:
                                    size: self.width - self.padding * 2, self.height / 2
                                    pos: self.pos[0] + self.padding, self.pos[1] + self.height / 4
                                    texture: LinearGradient(colors=['#000000FF', '#0000FFFF'], size=self.size)
                            id: glow_colorpicker_tune_blue_slider
                            value: root._selected_color[2]
                            bg_color:( 0, 0, 0, 0)
                            value_track: False
                            max: 1
                            on_value:
                                root._selected_color = root._selected_color[0], root._selected_color[1], self.value, root._selected_color[3]
                        GlowHSpacer
                        GlowSlider:
                            id: glow_colorpicker_tune_opacity_slider
                            value: root._selected_color[3]
                            max: 1
                            on_value:
                                root._selected_color = root._selected_color[:3] + [self.value]
        GlowBoxLayout:
            adaptive_height: True
            spacing: '10dp'
            Widget:
                canvas:
                    Color:
                        rgba: 1, 1, 1, 1
                    SmoothRoundedRectangle:
                        pos: self.pos
                        size: self.size
                        radius: [dp(10), ]
                        source: 'kivy_glow/assets/images/alpha_layer.png'
                canvas.after:
                    Color: 
                        rgba: root._selected_color
                    SmoothRoundedRectangle:
                        pos: self.pos
                        size: self.size
                        radius: [dp(10), ]
                width: self.height
                size_hint_x: None
            GlowTextField:
                id: glow_colorpicker_selected_color
                text_align: 'center'
                readonly: True
            GlowSelectableDropDown:
                id: glow_colorpicker_selected_color_format
                items: ['hex', 'rgb', 'rgba']
                pos_hint: {'center_y': .5}
                text: self.selected_item
                mode: 'outline'
                adaptive_size: True
                on_selected_item:
                    root._update_selected_color()
        GlowTableLayout:
            adaptive_height: True
            text_align: 'center'
            spacing: '30dp'
            GlowPanel:
                row: 0
                col: 0
                colspan: 2
                mode: 'text'
                adaptive_height: True
                size_hint_x: .5
                pos_hint: {'center_x': .5}
                tabs: [{'icon': 'gradient-vertical'}, {'icon': 'palette-outline'}, {'icon': 'tune'}]
                screen_alias: {'gradient-vertical': 'gradient', 'palette-outline': 'palette', 'tune': 'tuner'}
                on_active_tab:
                    tab = self._active_tab.icon
                    direction = 'left' if tuple(self.screen_alias.values()).index(self.screen_alias[tab]) < tuple(self.screen_alias.values()).index(screen_manager.current) else 'right'
                    screen_manager.transition.direction = direction
                    screen_manager.current = self.screen_alias[tab]
            GlowButton:
                row: 1
                col: 0
                text: 'select'
                adaptive_height: True
                on_release:
                    root.dispatch('on_selected_color', root._selected_color)
                    root.dismiss()
            GlowButton:
                row: 1
                col: 1
                text: 'cancel'
                mode: 'outline'
                adaptive_height: True
                on_release:
                    root.dismiss()

