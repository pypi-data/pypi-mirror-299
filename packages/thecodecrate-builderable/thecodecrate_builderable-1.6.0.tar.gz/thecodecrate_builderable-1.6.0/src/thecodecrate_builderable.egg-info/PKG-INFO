Metadata-Version: 2.1
Name: thecodecrate-builderable
Version: 1.6.0
Summary: This package provides a builder pattern implementation
Author-email: TheCodeCrate <loureiro.rg@gmail.com>
License: The MIT License (MIT)
        
        Copyright (c) 2024 TheCodeCrate <loureiro.rg@gmail.com>
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in
        all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
        THE SOFTWARE.
Project-URL: repository, https://github.com/thecodecrate/python-builderable
Project-URL: documentation, https://github.com/thecodecrate/python-builderable
Keywords: builder pattern,python,library,python-builderable
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Typing :: Typed
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: LICENSE
Provides-Extra: build
Requires-Dist: build; extra == "build"
Requires-Dist: twine; extra == "build"
Provides-Extra: dev
Requires-Dist: black; extra == "dev"
Requires-Dist: bumpver; extra == "dev"
Requires-Dist: isort; extra == "dev"
Requires-Dist: flake8; extra == "dev"
Requires-Dist: pytest; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"
Requires-Dist: pytest-asyncio; extra == "dev"

# Python-Builderable

Builderable is a modular class for implementing the Builder pattern in Python.

The library is designed to allow developers to compose builder classes using pre-defined partials (mixins) or implement their own.

## Installation

```bash
pip install thecodecrate-builderable
```

## Usage Example

Here's a simple example of how to implement a builder class with builderable:

```python
from builderable import Builderable, WithListMixin

class MyBuilder(Builderable[int]):
    def build(self) -> int:
        return sum(self.get_items())

# Usage
builder = MyBuilder()
result = builder.add_item(5).add_item(10).build()
print(result)  # Outputs: 15
```

## Immutability Trait

In some cases, you may want to enforce immutability, meaning each modification creates a new instance of the builder, rather than modifying the current one. This can be achieved by including the immutability trait in your builder class.

When using the `HasImmutability` trait, methods like "add_item" will clone the self object, append the new item to the clone's list, and return the cloned object. Without this trait, "add_item" will modify the current object directly.

Here's how to use the immutability feature:

```python
class ImmutableBuilder(
    HasImmutability[int, int],  # Enforces immutability
    Builderable[int, int],
):
    def build(self) -> int:
        return sum(self.get_items())

# Usage
builder = (ImmutableBuilder()).add_item(5).add_item(10)

# The original builder remains unchanged
new_builder = builder.add_item(7)
print(new_builder.get_items())  # Outputs: [5, 10, 7]
print(builder.get_items())  # Outputs: [5, 10]
```

## License

This project is licensed under the MIT License.
