# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from .flag_response_data import FlagResponseData
from ..core.serialization import FieldMetadata
from .rule_detail_response_data import RuleDetailResponseData
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class RulesDetailResponseData(UniversalBaseModel):
    """
    The updated resource
    """

    flag: typing_extensions.Annotated[typing.Optional[FlagResponseData], FieldMetadata(alias="Flag")] = None
    rules: typing.List[RuleDetailResponseData]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
