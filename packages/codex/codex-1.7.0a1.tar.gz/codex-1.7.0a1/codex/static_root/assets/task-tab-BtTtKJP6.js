import{_ as p,y as v,u as f,m as _,x as b,r as k,A as s,L as i,C as o,F as n,B as l,o as e,n as y,c as d,w as g,b as C}from"./main-Cs7q8tob.js";import{C as x}from"./confirm-dialog-BEVEU-kA.js";import{V as S}from"./VDialog-DJR54d5g.js";import"./transition-A__CJ90w.js";const R=[{title:"Libraries",tasks:[{value:"poll",title:"Poll All Libraries",desc:"Update Libraries if changes detected"},{value:"poll_force",title:"Force Update All Libraries",desc:"Forcibly update all comics in all libraries",confirm:"This can take a long time"},{value:"force_update_all_failed_imports",title:"Update All Failed Imports",desc:"Forcibly update all failed imports in all libraries",confirm:"This can take a long time"},{value:"watchdog_sync",title:"Sync Watchdog with DB",desc:"Ensure the Watchdog file watcher is enabled per database preferences for each library"}]},{title:"Covers",tasks:[{value:"purge_comic_covers",title:"Remove Comic Covers",desc:"from every library",confirm:"Are you sure?"},{value:"create_all_comic_covers",title:"Create All Comic Covers",desc:"Pre-generate covers for every comic in every library and all custom covers",confirm:"Are you sure?"},{value:"force_update_groups",title:"Update Group Timestamps",desc:"Force the update of group timestamps. Will bust the browser cache for browser views and covers."}]},{title:"Search Index",tasks:[{value:"search_index_update",title:"Update Search Index",desc:"with recently changed comics"},{value:"search_index_rebuild",title:"Rebuild Search Index",desc:"Delete and rebuild the search index from scratch",confirm:"This can take a long time"},{value:"search_index_remove_stale",title:"Remove Stale Index Entries",desc:"Remove search index entries that are no longer in the library."},{value:"search_index_merge_small",title:"Merge Small Search Index Segments",desc:"Improves search lookup times. Runs nightly if the Optimize Admin Flag is off."},{value:"search_index_optimize",title:"Merge Search Index Into One Segment",desc:"Reduces disk space and improves search lookup times. Runs nightly if the Optimize Admin Flag is on.",confirm:"This can take a long time."},{value:"search_index_abort",title:"Abort Search Indexing",desc:"Aborts search index update and remove tasks."},{value:"search_index_clear",title:"Clear Search Index",desc:"of all entries"}]},{title:"Database",tasks:[{value:"db_vacuum",title:"Optimize & Compact Database",desc:"Run the sqlite3 OPTIMIZE and VACUUM pragmas. Runs nightly"},{value:"db_backup",title:"Backup Database",desc:"Runs nightly"},{value:"db_search_sync",title:"Sync Search Index to DB",desc:"Check to see if this database matches the current search index. If there is a mismatch, rebuild the search index. Runs on startup."}]},{title:"Codex Software",tasks:[{value:"codex_latest_version",title:"Check for Codex Latest Version",desc:"Check PyPi for the latest version of Codex"},{value:"codex_update",title:"Update Codex",desc:"If Codex updates to a new version, it will restart",confirm:"Are you sure?"},{value:"codex_restart",title:"Restart Codex Server",desc:"Immediately",confirm:"Are you sure?"},{value:"codex_shutdown",title:"Shutdown Codex Server",desc:"Immediately",confirm:"Are you sure?"}]},{title:"Notify",tasks:[{value:"notify_library_changed",title:"Notify Library Changed ",desc:"Signal all clients that the libraries have changed and the browser should fetch new data."},{value:"notify_librarian_status",title:"Notify Librarian Status",desc:"Signal Admin clients to fetch librarian status."}]},{title:"Cleanup",tasks:[{value:"cleanup_fks",title:"Remove Orphan Tags",desc:"After deleting comics, unused linked objects remain in case new comics use them. Runs nightly."},{value:"cleanup_db_custom_covers",title:"Remove Orphan Database Custom Covers",desc:"Remove Custom Covers from the db that no longer represent custom cover images on disk. Runs nightly."},{value:"cleanup_sessions",title:"Cleanup Sessions",desc:"Remove corrupt and expired sessions. Runs nightly."},{value:"cleanup_covers",title:"Remove Orphan Cover Thumbnails",desc:"no longer have source comics or custom images. Runs nightly."},{value:"adopt_folders",title:"Adopt Orphan Folders",desc:"Move orphaned folders from the top of the folder tree to under their correct parent. Runs nightly and at startup."},{value:"librarian_clear_status",title:"Clear Librarian Statuses",desc:"Mark all Librarian tasks finished."},{value:"janitor_nightly",title:"Run Nightly Maintenance",desc:"Runs several tasks above that also run nightly.",confirm:"Launches several tasks that run nightly anyway."}]}],A={name:"AdminTasksTab",components:{ConfirmDialog:x},data(){return{tasks:R}},computed:{...v(f,{formSuccess:t=>t.form.success,formErrors:t=>t.form.errors})},methods:{..._(b,["librarianTask"])}},w={id:"tasks"},I={key:0,id:"success"},T={key:1,id:"error"},L={key:2,id:"noRecentTask"},D={class:"taskBox"},B={class:"taskDesc"};function F(t,c,O,E,u,U){const m=k("ConfirmDialog");return e(),s("div",w,[i("div",null,[c[0]||(c[0]=i("span",{id:"lastTaskLabel"},"Last Task Queued:",-1)),i("span",null,[t.formSuccess?(e(),s("span",I,o(t.formSuccess),1)):t.formErrors&&t.formErrors.length>0?(e(),s("span",T,[(e(!0),s(n,null,l(t.formErrors,r=>(e(),s("span",{key:r},o(r),1))),128))])):(e(),s("span",L,"No recent task"))])]),(e(!0),s(n,null,l(u.tasks,r=>(e(),s("div",{key:r.title,"fixed-header":"",class:"taskGroup"},[i("h3",null,o(r.title),1),(e(!0),s(n,null,l(r.tasks,a=>(e(),s("div",{key:a.value,class:y(["trow",{selected:!1}])},[i("div",D,[a.confirm?(e(),d(m,{key:0,"button-text":a.title,"title-text":a.title,"object-name":a.confirm,"confirm-text":"Confirm",onConfirm:h=>t.librarianTask(a.value,a.title)},null,8,["button-text","title-text","object-name","onConfirm"])):(e(),d(S,{key:1,block:"",onClick:h=>t.librarianTask(a.value,a.title)},{default:g(()=>[C(o(a.title),1)]),_:2},1032,["onClick"])),i("div",B,o(a.desc),1)])]))),128))]))),128))])}const P=p(A,[["render",F],["__scopeId","data-v-12865971"]]);export{P as default};
