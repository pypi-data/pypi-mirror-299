# coding: utf-8

"""
    Nuon

    API for managing nuon apps, components, and installs.

    The version of the OpenAPI document: 0.19.15
    Contact: support@nuon.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from nuon.models.app_component_config_connection import AppComponentConfigConnection

class TestAppComponentConfigConnection(unittest.TestCase):
    """AppComponentConfigConnection unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppComponentConfigConnection:
        """Test AppComponentConfigConnection
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppComponentConfigConnection`
        """
        model = AppComponentConfigConnection()
        if include_optional:
            return AppComponentConfigConnection(
                component_id = '',
                created_at = '',
                created_by_id = '',
                docker_build = nuon.models.app/docker_build_component_config.app.DockerBuildComponentConfig(
                    build_args = [
                        ''
                        ], 
                    component_config_connection_id = '', 
                    connected_github_vcs_config = nuon.models.app/connected_github_vcs_config.app.ConnectedGithubVCSConfig(
                        branch = '', 
                        component_config_id = '', 
                        component_config_type = '', 
                        created_at = '', 
                        created_by_id = '', 
                        directory = '', 
                        id = '', 
                        repo = '', 
                        repo_name = '', 
                        repo_owner = '', 
                        updated_at = '', 
                        vcs_connection = nuon.models.app/vcs_connection.app.VCSConnection(
                            created_at = '', 
                            created_by_id = '', 
                            github_install_id = '', 
                            id = '', 
                            updated_at = '', 
                            vcs_connection_commit = [
                                nuon.models.app/vcs_connection_commit.app.VCSConnectionCommit(
                                    author_email = '', 
                                    author_name = '', 
                                    component_config_connection_id = '', 
                                    created_at = '', 
                                    created_by_id = '', 
                                    id = '', 
                                    message = '', 
                                    sha = '', 
                                    updated_at = '', )
                                ], ), 
                        vcs_connection_id = '', ), 
                    created_at = '', 
                    created_by_id = '', 
                    dockerfile = '', 
                    env_vars = {
                        'key' : ''
                        }, 
                    id = '', 
                    public_git_vcs_config = nuon.models.app/public_git_vcs_config.app.PublicGitVCSConfig(
                        branch = '', 
                        component_config_id = '', 
                        component_config_type = '', 
                        created_at = '', 
                        created_by_id = '', 
                        directory = '', 
                        id = '', 
                        repo = '', 
                        updated_at = '', ), 
                    target = '', 
                    updated_at = '', ),
                external_image = nuon.models.app/external_image_component_config.app.ExternalImageComponentConfig(
                    aws_ecr_image_config = nuon.models.app/awsecr_image_config.app.AWSECRImageConfig(
                        aws_region = '', 
                        component_config_id = '', 
                        component_config_type = '', 
                        created_at = '', 
                        created_by_id = '', 
                        iam_role_arn = '', 
                        id = '', 
                        updated_at = '', ), 
                    component_config_connection_id = '', 
                    created_at = '', 
                    created_by_id = '', 
                    id = '', 
                    image_url = '', 
                    tag = '', 
                    updated_at = '', ),
                helm = nuon.models.app/helm_component_config.app.HelmComponentConfig(
                    chart_name = '', 
                    component_config_connection_id = '', 
                    connected_github_vcs_config = nuon.models.app/connected_github_vcs_config.app.ConnectedGithubVCSConfig(
                        branch = '', 
                        component_config_id = '', 
                        component_config_type = '', 
                        created_at = '', 
                        created_by_id = '', 
                        directory = '', 
                        id = '', 
                        repo = '', 
                        repo_name = '', 
                        repo_owner = '', 
                        updated_at = '', 
                        vcs_connection = nuon.models.app/vcs_connection.app.VCSConnection(
                            created_at = '', 
                            created_by_id = '', 
                            github_install_id = '', 
                            id = '', 
                            updated_at = '', 
                            vcs_connection_commit = [
                                nuon.models.app/vcs_connection_commit.app.VCSConnectionCommit(
                                    author_email = '', 
                                    author_name = '', 
                                    component_config_connection_id = '', 
                                    created_at = '', 
                                    created_by_id = '', 
                                    id = '', 
                                    message = '', 
                                    sha = '', 
                                    updated_at = '', )
                                ], ), 
                        vcs_connection_id = '', ), 
                    created_at = '', 
                    created_by_id = '', 
                    id = '', 
                    public_git_vcs_config = nuon.models.app/public_git_vcs_config.app.PublicGitVCSConfig(
                        branch = '', 
                        component_config_id = '', 
                        component_config_type = '', 
                        created_at = '', 
                        created_by_id = '', 
                        directory = '', 
                        id = '', 
                        repo = '', 
                        updated_at = '', ), 
                    updated_at = '', 
                    values = {
                        'key' : ''
                        }, ),
                id = '',
                job = nuon.models.app/job_component_config.app.JobComponentConfig(
                    args = [
                        ''
                        ], 
                    cmd = [
                        ''
                        ], 
                    component_config_connection_id = '', 
                    created_at = '', 
                    created_by_id = '', 
                    env_vars = {
                        'key' : ''
                        }, 
                    id = '', 
                    image_url = '', 
                    tag = '', 
                    updated_at = '', ),
                terraform_module = nuon.models.app/terraform_module_component_config.app.TerraformModuleComponentConfig(
                    component_config_connection_id = '', 
                    connected_github_vcs_config = nuon.models.app/connected_github_vcs_config.app.ConnectedGithubVCSConfig(
                        branch = '', 
                        component_config_id = '', 
                        component_config_type = '', 
                        created_at = '', 
                        created_by_id = '', 
                        directory = '', 
                        id = '', 
                        repo = '', 
                        repo_name = '', 
                        repo_owner = '', 
                        updated_at = '', 
                        vcs_connection = nuon.models.app/vcs_connection.app.VCSConnection(
                            created_at = '', 
                            created_by_id = '', 
                            github_install_id = '', 
                            id = '', 
                            updated_at = '', 
                            vcs_connection_commit = [
                                nuon.models.app/vcs_connection_commit.app.VCSConnectionCommit(
                                    author_email = '', 
                                    author_name = '', 
                                    component_config_connection_id = '', 
                                    created_at = '', 
                                    created_by_id = '', 
                                    id = '', 
                                    message = '', 
                                    sha = '', 
                                    updated_at = '', )
                                ], ), 
                        vcs_connection_id = '', ), 
                    created_at = '', 
                    created_by_id = '', 
                    env_vars = {
                        'key' : ''
                        }, 
                    id = '', 
                    public_git_vcs_config = nuon.models.app/public_git_vcs_config.app.PublicGitVCSConfig(
                        branch = '', 
                        component_config_id = '', 
                        component_config_type = '', 
                        created_at = '', 
                        created_by_id = '', 
                        directory = '', 
                        id = '', 
                        repo = '', 
                        updated_at = '', ), 
                    updated_at = '', 
                    variables = {
                        'key' : ''
                        }, 
                    version = '', ),
                updated_at = ''
            )
        else:
            return AppComponentConfigConnection(
        )
        """

    def testAppComponentConfigConnection(self):
        """Test AppComponentConfigConnection"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
