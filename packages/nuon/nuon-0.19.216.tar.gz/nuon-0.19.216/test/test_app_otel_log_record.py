# coding: utf-8

"""
    Nuon

    API for managing nuon apps, components, and installs.

    The version of the OpenAPI document: 0.19.216
    Contact: support@nuon.co
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from nuon.models.app_otel_log_record import AppOtelLogRecord

class TestAppOtelLogRecord(unittest.TestCase):
    """AppOtelLogRecord unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppOtelLogRecord:
        """Test AppOtelLogRecord
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppOtelLogRecord`
        """
        model = AppOtelLogRecord()
        if include_optional:
            return AppOtelLogRecord(
                body = '',
                created_at = '',
                created_by_id = '',
                id = '',
                log_attributes = {
                    'key' : ''
                    },
                resource_attributes = {
                    'key' : ''
                    },
                resource_schema_url = '',
                runner_group_id = '',
                runner_id = '',
                runner_job_execution_id = '',
                runner_job_id = '',
                scope_attributes = {
                    'key' : ''
                    },
                scope_name = '',
                scope_schema_url = '',
                scope_version = '',
                service_name = '',
                severity_number = 56,
                severity_text = '',
                span_id = '',
                timestamp = '',
                timestamp_date = '',
                timestamp_time = '',
                trace_flags = 56,
                trace_id = '',
                updated_at = ''
            )
        else:
            return AppOtelLogRecord(
        )
        """

    def testAppOtelLogRecord(self):
        """Test AppOtelLogRecord"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
