[build-system]
requires = [ "poetry-core" ]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "mindbridge-api-python-client"
version = "1.5.0"
description = "Interact with the MindBridge API"
license = "Proprietary"
authors = [
    "MBAI Support <mbaisupport@mindbridge.ai>", # Must be first so that PyPI displays this
    "Edgar Silva <edgar.silva@mindbridge.ai>",
    "Jordan Hatcher <jordan.hatcher@mindbridge.ai>",
    "Kevin Paulson <kevin.paulson@mindbridge.ai",
    "Michael Smith <msmith@mindbridge.ai>",
    "Wing-Leung Chan <wing-leung.chan@mindbridge.ai>",
]
maintainers = [ "MBAI Support <mbaisupport@mindbridge.ai>" ]
readme = "README.md"
homepage = "https://www.mindbridge.ai"
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: Flake8",
    "Framework :: Pydantic",
    "Framework :: Pydantic :: 2",
    "Framework :: Pytest",
    "License :: Other/Proprietary License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Typing :: Typed",
]
packages = [
    { include = "mindbridgeapi", from = "src" },
]

[tool.poetry.dependencies]
python = ">=3.8.1,<4.0"
pydantic = "^2.5.2"
typing-extensions = { version = "^4.0.0", python = "<3.9" }
urllib3 = "^2.0.7"

[tool.poetry.group.generate_model]
optional = true

[tool.poetry.group.generate_model.dependencies]
datamodel-code-generator = "^0.26.0"

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
black = "^24.3.0"
flake8 = "^7.0.0"
flake8-bugbear = "^24.2.6"
flake8-clean-block = "^0.1.2"
flake8-comprehensions = "^3.14.0"
flake8-encodings = "^0.5.1"
flake8-implicit-str-concat = "^0.4.0"
flake8-pytest-style = "^2.0.0"
flake8-return = "^1.2.0"
flake8-simplify = "^0.21.0"
flake8-tidy-imports = "^4.10.0"
flake8-type-checking = "^2.9.0"
isort = "^5.13.2"
pep8-naming = "^0.14.1"
tryceratops = "^2.3.2"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^8.1.1"
pytest-cov = "^5.0.0"
pytest-randomly = "^3.15.0"
pandas = [
    {version = "^2.0.3", python = "<3.9"},
    {version = "^2.2.2", python = ">=3.9"}
]
openpyxl = "^3.1.5"

[tool.poetry.group.type_check]
optional = true

[tool.poetry.group.type_check.dependencies]
mypy = "^1.9.0"

[tool.black]
target-version = [ "py38", "py39", "py310", "py311", "py312" ]

[tool.isort]
py_version = 38
profile = "black"
lines_between_sections = 0
force_sort_within_sections = true
known_first_party = [ "mindbridgeapi" ]

[tool.pytest.ini_options]
addopts = [
    "--strict-config",
    "--strict-markers",
    "--cov=mindbridgeapi",
    "--cov=set_circleci_pytest_enviroment_variables",
    "--cov-report=html",
    "--cov-report=term",
    "--cov-report=xml",
]
xfail_strict = true
filterwarnings = [ "error" ]
pythonpath = [ "tools" ]

[tool.coverage.run]
branch = true
omit = [ "src/mindbridgeapi/generated_pydantic_model/*" ]

[tool.coverage.report]
exclude_also = [
    "if TYPE_CHECKING:",
    'if __name__ == "__main__":',
]

[tool.mypy]
mypy_path = "$MYPY_CONFIG_FILE_DIR/src"
packages = "mindbridgeapi,tools.generate_model,tools.set_circleci_pytest_enviroment_variables"
plugins = [ "pydantic.mypy" ]
strict = true
no_implicit_optional = true
show_error_codes = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
