[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools"]

[project]
authors = [
  {name = "Fixstars Amplify Corporation", email = "y_matsuda@fixstars.com"},
]
classifiers = [
  "Environment :: Console",
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Scientific/Engineering",
  "Operating System :: POSIX :: Linux",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: MacOS :: MacOS X",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
dependencies = [
  "amplify>=1.2.0",
  "numpy",
  "pandas",
  "torch",
  "plotly",
  "nbformat>=4.2.0",
]
description = "An Amplify-based library to facilitate black-box optimization"
dynamic = ["version"]
keywords = [
  "amplify",
  "black-box optimization",
  "Bayesian optimization",
]
license = {file = "LICENSE.txt"}
maintainers = [
  {name = "Yoshiki Matsuda", email = "y_matsuda@fixstars.com"},
  {name = "Yuki Minamoto", email = "yuki.minamoto@fixstars.com"},
]
name = "amplify-bbopt"
readme = "README.md"
requires-python = ">=3.9"

[project.urls]
Changelog = "https://amplify.fixstars.com/docs/amplify-bbopt/v0/changelog.html"
Documentation = "https://amplify.fixstars.com/docs/amplify-bbopt/v0/"
Homepage = "https://amplify.fixstars.com/"
Tutorial = "https://amplify.fixstars.com/demo"

[tool.setuptools]
license-files = ["LICENSE.txt"]
packages = ["amplify_bbopt"]

[tool.setuptools.dynamic]
version = {attr = "amplify_bbopt.__version__.__version__"}

[tool.mypy]
check_untyped_defs = true
ignore_missing_imports = true

[tool.ruff]
exclude = ["externals"]
include = ["*.py", "*.pyi", "**/pyproject.toml", "*.ipynb"]
line-length = 120
preview = true

[tool.ruff.lint]
ignore = [
  # conflicts with ruff format
  "COM812",
  "COM819",
  "D206",
  "D300",
  "E111",
  "E114",
  "E117",
  "ISC001",
  "ISC002",
  "Q000",
  "Q001",
  "Q002",
  "Q003",
  "W191",

  # category
  "AIR", # Airflow
  "ASYNC", # flake8-async
  "C90", # mccabe
  "COM", # flake8-commas
  "CPY", # flake8-copyright
  "DJ", # flake8-django
  "ERA", # eradicate
  "EXE", # flake8-executable
  "FBT", # flake8-boolean-trap
  "FLY", # flynt
  "ICN", # flake8-import-conventions
  "INP", # flake8-no-pep420
  "INT", # flake8-gettext
  "PD", # pandas-vet
  "PGH", # pygrep-hooks
  "Q", # flake8-quotes
  "SLOT", # flake8-slots
  "T10", # flake8-debugger
  "T20", # flake8-print
  "TID", # flake8-tidy-imports
  "EM", # flake8-errmsg

  # rule
  "ANN101", # missing-type-self (deprecated)
  "ANN102", # missing-type-cls (deprecated)
  "D10", # undocumented-XXX
  "PLR09", # too-many-XXX
  "S101", # assert
  "TD001", # invalid-todo-tag
  "TD002", # missing-todo-author
  "TD003", # missing-todo-link
  "TRY003", # raise-vanilla-args

  "PLR6301", # no-self-use
]
select = ["ALL"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pylint]
max-branches = 18

[tool.ruff.lint.per-file-ignores]
"{docs/*,setup}.py" = [
  # category
  "D", # pydocstyle
  "ANN", # flake8-annotations
  "T20", # flake8-print

  # rule
  "N806", # non-lowercase-variable-in-function
  "S107", # hardcoded-password-default
]
