"""
    Copyright 2018 Inmanta

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Contact: code@inmanta.com
"""

entity RESTCall extends std::Resource:
    """
        This resource executes a restcall during the execute phase of the handler

        :attr url: The url to call
        :attr method: The HTTP method to use
        :attr body: The body of the the http call. By default this body is sent as a json body
        :attr headers: Additional headers to pass to the server.
        :attr form_encoded: Use form encoding for the body
        :attr ssl_verify: Verify the ssl cert of the server
        :attr auth_user: The user to authenticate with
        :attr auth_password: The password to authenticate with
        :attr return_codes: Returns code that indicate that the call was successfull
        :attr skip_on_fail: Report this resource as skipped instead of failed.
        :attr validate_return: An JQ expression to validate the return result of the call. The result of this JQ expression
                               evaluates to a python true or false.
        :attr agent: The agent to initiate the REST call from
    """
    string url_id
    string url
    string method="GET"
    dict body
    dict headers={}
    bool form_encoded=false
    bool ssl_verify=true
    string? auth_user=null
    string? auth_password=null
    number[] return_codes=[200]
    string? validate_return=null
    bool skip_on_fail=false
    string agent="internal"
end

index RESTCall(agent, url, method)

implementation restCallID for RESTCall:
    self.url_id = "{{ method }}_{{ url }}"
end

implement RESTCall using restCallID