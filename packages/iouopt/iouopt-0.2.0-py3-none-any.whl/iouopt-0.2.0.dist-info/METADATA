Metadata-Version: 2.1
Name: iouopt
Version: 0.2.0
Summary: Simplify group IOU settlement.
License: MIT License
        
        Copyright (c) 2024 Danny Whalen
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/invisiblefunnel/iouopt
Project-URL: Issues, https://github.com/invisiblefunnel/iouopt/issues
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: ortools
Provides-Extra: ci
Requires-Dist: black ; extra == 'ci'
Requires-Dist: isort ; extra == 'ci'
Requires-Dist: mypy ; extra == 'ci'

# iouopt

`iouopt` simplifies group [IOU](https://en.wikipedia.org/wiki/IOU) settlement. If you've used [Splitwise](https://blog.splitwise.com/2012/09/14/debts-made-simple/) or similar apps, you're familiar with the concept.

## Usage

```python
import iouopt import Journal

j = Journal[str]()

j.append(borrower="A", lender="B", amount=5)
j.append("A", "C", 15)
j.append("B", "A", 10)
j.append("B", "C", 5)
j.append("C", "A", 20)
j.append("C", "B", 15)

for borrower, lender, amount in j.simplify():
    print(f"#=> {borrower} pays {lender} {amount}")

#=> C pays A 10
#=> C pays B 5
```

**Note:** `iouopt` requires that all amounts are represented as an `int`. This is a constraint of the underlying minimum-cost flow algorithm. If you need to express partial units, such as 15.78, multiply amounts by a suitable constant factor (e.g., 100) and then convert them to an int.

## Install

Install the latest version from the [Python Package Index (PyPI)](https://pypi.org/project/iouopt/).

```console
$ pip install iouopt
```
